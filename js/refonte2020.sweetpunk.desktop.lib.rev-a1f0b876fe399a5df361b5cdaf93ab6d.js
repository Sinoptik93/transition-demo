!function(t) {
    var e = {};
    function n(i) {
        if (e[i])
            return e[i].exports;
        var r = e[i] = {
            i: i,
            l: !1,
            exports: {}
        };
        return t[i].call(r.exports, r, r.exports, n),
            r.l = !0,
            r.exports
    }
    n.m = t,
        n.c = e,
        n.d = function(t, e, i) {
            n.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }
        ,
        n.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
                Object.defineProperty(t, "__esModule", {
                    value: !0
                })
        }
        ,
        n.t = function(t, e) {
            if (1 & e && (t = n(t)),
            8 & e)
                return t;
            if (4 & e && "object" == typeof t && t && t.__esModule)
                return t;
            var i = Object.create(null);
            if (n.r(i),
                Object.defineProperty(i, "default", {
                    enumerable: !0,
                    value: t
                }),
            2 & e && "string" != typeof t)
                for (var r in t)
                    n.d(i, r, function(e) {
                        return t[e]
                    }
                        .bind(null, r));
            return i
        }
        ,
        n.n = function(t) {
            var e = t && t.__esModule ? function() {
                        return t.default
                    }
                    : function() {
                        return t
                    }
            ;
            return n.d(e, "a", e),
                e
        }
        ,
        n.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        n.p = "",
        n(n.s = 418)
}([, , , function(t, e, n) {
    function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
        )(t)
    }
    var r = n(16)
        , a = n(38).f
        , o = n(43)
        , s = n(39)
        , c = n(162)
        , u = n(200)
        , l = n(105);
    t.exports = function(t, e) {
        var n, h, p, f, d, m = t.target, g = t.global, v = t.stat;
        if (n = g ? r : v ? r[m] || c(m, {}) : (r[m] || {}).prototype)
            for (h in e) {
                if (f = e[h],
                    p = t.noTargetGet ? (d = a(n, h)) && d.value : n[h],
                !l(g ? h : m + (v ? "." : "#") + h, t.forced) && void 0 !== p) {
                    if (i(f) === i(p))
                        continue;
                    u(f, p)
                }
                (t.sham || p && p.sham) && o(f, "sham", !0),
                    s(n, h, f, t)
            }
    }
}
    , , , , , , , , , function(t, e) {
        t.exports = function(t) {
            try {
                return !!t()
            } catch (t) {
                return !0
            }
        }
    }
    , , , , function(t, e, n) {
        (function(e) {
                function n(t) {
                    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                                return typeof t
                            }
                            : function(t) {
                                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                            }
                    )(t)
                }
                function i(t) {
                    return t && t.Math == Math && t
                }
                t.exports = i("object" == ("undefined" == typeof globalThis ? "undefined" : n(globalThis)) && globalThis) || i("object" == ("undefined" == typeof window ? "undefined" : n(window)) && window) || i("object" == ("undefined" == typeof self ? "undefined" : n(self)) && self) || i("object" == (void 0 === e ? "undefined" : n(e)) && e) || Function("return this")()
            }
        ).call(this, n(99))
    }
    , , , , , function(t, e) {
        function n(t) {
            return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        t.exports = function(t) {
            return "object" === n(t) ? null !== t : "function" == typeof t
        }
    }
    , function(t, e, n) {
        var i = n(21);
        t.exports = function(t) {
            if (!i(t))
                throw TypeError(String(t) + " is not an object");
            return t
        }
    }
    , function(t, e, n) {
        var i = n(12);
        t.exports = !i((function() {
                return 7 != Object.defineProperty({}, 1, {
                    get: function() {
                        return 7
                    }
                })[1]
            }
        ))
    }
    , , function(t, e, n) {
        var i = n(16)
            , r = n(164)
            , a = n(33)
            , o = n(101)
            , s = n(168)
            , c = n(202)
            , u = r("wks")
            , l = i.Symbol
            , h = c ? l : l && l.withoutSetter || o;
        t.exports = function(t) {
            return a(u, t) || (s && a(l, t) ? u[t] = l[t] : u[t] = h("Symbol." + t)),
                u[t]
        }
    }
    , function(t, e, n) {
        var i = n(56)
            , r = Math.min;
        t.exports = function(t) {
            return 0 < t ? r(i(t), 9007199254740991) : 0
        }
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return c(t) && u(C, l(t))
        }
        var r, a = n(186), o = n(23), s = n(16), c = n(21), u = n(33), l = n(111), h = n(43), p = n(39), f = n(30).f, d = n(62), m = n(89), g = n(25), v = n(101), y = s.Int8Array, x = y && y.prototype, _ = s.Uint8ClampedArray, b = _ && _.prototype, M = y && d(y), w = x && d(x), S = Object.prototype, A = S.isPrototypeOf, T = g("toStringTag"), L = v("TYPED_ARRAY_TAG"), E = a && !!m && "Opera" !== l(s.opera), P = !1, C = {
            Int8Array: 1,
            Uint8Array: 1,
            Uint8ClampedArray: 1,
            Int16Array: 2,
            Uint16Array: 2,
            Int32Array: 4,
            Uint32Array: 4,
            Float32Array: 4,
            Float64Array: 8
        };
        for (r in C)
            s[r] || (E = !1);
        if ((!E || "function" != typeof M || M === Function.prototype) && (M = function() {
            throw TypeError("Incorrect invocation")
        }
            ,
            E))
            for (r in C)
                s[r] && m(s[r], M);
        if ((!E || !w || w === S) && (w = M.prototype,
            E))
            for (r in C)
                s[r] && m(s[r].prototype, w);
        if (E && d(b) !== w && m(b, w),
        o && !u(w, T))
            for (r in P = !0,
                f(w, T, {
                    get: function() {
                        return c(this) ? this[L] : void 0
                    }
                }),
                C)
                s[r] && h(s[r], L, r);
        t.exports = {
            NATIVE_ARRAY_BUFFER_VIEWS: E,
            TYPED_ARRAY_TAG: P && L,
            aTypedArray: function(t) {
                if (i(t))
                    return t;
                throw TypeError("Target is not a typed array")
            },
            aTypedArrayConstructor: function(t) {
                if (m) {
                    if (A.call(M, t))
                        return t
                } else
                    for (var e in C)
                        if (u(C, r)) {
                            var n = s[e];
                            if (n && (t === n || A.call(n, t)))
                                return t
                        }
                throw TypeError("Target is not a typed array constructor")
            },
            exportTypedArrayMethod: function(t, e, n) {
                if (o) {
                    if (n)
                        for (var i in C) {
                            var r = s[i];
                            r && u(r.prototype, t) && delete r.prototype[t]
                        }
                    w[t] && !n || p(w, t, !n && E && x[t] || e)
                }
            },
            exportTypedArrayStaticMethod: function(t, e, n) {
                var i, r;
                if (o) {
                    if (m) {
                        if (n)
                            for (i in C)
                                (r = s[i]) && u(r, t) && delete r[t];
                        if (M[t] && !n)
                            return;
                        try {
                            return p(M, t, !n && E && y[t] || e)
                        } catch (t) {}
                    }
                    for (i in C)
                        !(r = s[i]) || r[t] && !n || p(r, t, e)
                }
            },
            isView: function(t) {
                var e = l(t);
                return "DataView" === e || u(C, e)
            },
            isTypedArray: i,
            TypedArray: M,
            TypedArrayPrototype: w
        }
    }
    , , , function(t, e, n) {
        var i = n(23)
            , r = n(197)
            , a = n(22)
            , o = n(60)
            , s = Object.defineProperty;
        e.f = i ? s : function(t, e, n) {
            if (a(t),
                e = o(e, !0),
                a(n),
                r)
                try {
                    return s(t, e, n)
                } catch (t) {}
            if ("get"in n || "set"in n)
                throw TypeError("Accessors not supported");
            return "value"in n && (t[e] = n.value),
                t
        }
    }
    , , function(t, e, n) {
        var i = n(42);
        t.exports = function(t) {
            return Object(i(t))
        }
    }
    , function(t, e) {
        var n = {}.hasOwnProperty;
        t.exports = function(t, e) {
            return n.call(t, e)
        }
    }
    , , function(t, e, n) {
        function i(t) {
            var e = 1 == t
                , n = 2 == t
                , i = 3 == t
                , l = 4 == t
                , h = 6 == t
                , p = 5 == t || h;
            return function(f, d, m, g) {
                for (var v, y, x = o(f), _ = a(x), b = r(d, m, 3), M = s(_.length), w = 0, S = g || c, A = e ? S(f, M) : n ? S(f, 0) : void 0; w < M; w++)
                    if ((p || w in _) && (y = b(v = _[w], w, x),
                        t))
                        if (e)
                            A[w] = y;
                        else if (y)
                            switch (t) {
                                case 3:
                                    return !0;
                                case 5:
                                    return v;
                                case 6:
                                    return w;
                                case 2:
                                    u.call(A, v)
                            }
                        else if (l)
                            return !1;
                return h ? -1 : i || l ? l : A
            }
        }
        var r = n(78)
            , a = n(100)
            , o = n(32)
            , s = n(26)
            , c = n(107)
            , u = [].push;
        t.exports = {
            forEach: i(0),
            map: i(1),
            filter: i(2),
            some: i(3),
            every: i(4),
            find: i(5),
            findIndex: i(6)
        }
    }
    , , , function(t, e, n) {
        var i = n(23)
            , r = n(118)
            , a = n(76)
            , o = n(49)
            , s = n(60)
            , c = n(33)
            , u = n(197)
            , l = Object.getOwnPropertyDescriptor;
        e.f = i ? l : function(t, e) {
            if (t = o(t),
                e = s(e, !0),
                u)
                try {
                    return l(t, e)
                } catch (t) {}
            if (c(t, e))
                return a(!r.f.call(t, e), t[e])
        }
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(43)
            , a = n(33)
            , o = n(162)
            , s = n(163)
            , c = n(44)
            , u = c.get
            , l = c.enforce
            , h = String(String).split("String");
        (t.exports = function(t, e, n, s) {
                var c = !!s && !!s.unsafe
                    , u = !!s && !!s.enumerable
                    , p = !!s && !!s.noTargetGet;
                "function" == typeof n && ("string" != typeof e || a(n, "name") || r(n, "name", e),
                    l(n).source = h.join("string" == typeof e ? e : "")),
                    t !== i ? (c ? !p && t[e] && (u = !0) : delete t[e],
                        u ? t[e] = n : r(t, e, n)) : u ? t[e] = n : o(e, n)
            }
        )(Function.prototype, "toString", (function() {
                return "function" == typeof this && u(this).source || s(this)
            }
        ))
    }
    , , , function(t, e) {
        t.exports = function(t) {
            if (null == t)
                throw TypeError("Can't call method on " + t);
            return t
        }
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(30)
            , a = n(76);
        t.exports = i ? function(t, e, n) {
                return r.f(t, e, a(1, n))
            }
            : function(t, e, n) {
                return t[e] = n,
                    t
            }
    }
    , function(t, e, n) {
        var i, r, a, o = n(199), s = n(16), c = n(21), u = n(43), l = n(33), h = n(119), p = n(102), f = s.WeakMap;
        if (o) {
            var d = new f
                , m = d.get
                , g = d.has
                , v = d.set;
            i = function(t, e) {
                return v.call(d, t, e),
                    e
            }
                ,
                r = function(t) {
                    return m.call(d, t) || {}
                }
                ,
                a = function(t) {
                    return g.call(d, t)
                }
        } else {
            var y = h("state");
            p[y] = !0,
                i = function(t, e) {
                    return u(t, y, e),
                        e
                }
                ,
                r = function(t) {
                    return l(t, y) ? t[y] : {}
                }
                ,
                a = function(t) {
                    return l(t, y)
                }
        }
        t.exports = {
            set: i,
            get: r,
            has: a,
            enforce: function(t) {
                return a(t) ? r(t) : i(t, {})
            },
            getterFor: function(t) {
                return function(e) {
                    var n;
                    if (!c(e) || (n = r(e)).type !== t)
                        throw TypeError("Incompatible receiver, " + t + " required");
                    return n
                }
            }
        }
    }
    , , function(t, e, n) {
        var i = n(103)
            , r = n(33)
            , a = n(205)
            , o = n(30).f;
        t.exports = function(t) {
            var e = i.Symbol || (i.Symbol = {});
            r(e, t) || o(e, t, {
                value: a.f(t)
            })
        }
    }
    , function(t, e) {
        t.exports = function(t) {
            if ("function" != typeof t)
                throw TypeError(String(t) + " is not a function");
            return t
        }
    }
    , function(t, e, n) {
        function i(t) {
            throw t
        }
        var r = n(23)
            , a = n(12)
            , o = n(33)
            , s = Object.defineProperty
            , c = {};
        t.exports = function(t, e) {
            if (o(c, t))
                return c[t];
            var n = [][t]
                , u = !!o(e = e || {}, "ACCESSORS") && e.ACCESSORS
                , l = o(e, 0) ? e[0] : i
                , h = o(e, 1) ? e[1] : void 0;
            return c[t] = !!n && !a((function() {
                    if (u && !r)
                        return !0;
                    var t = {
                        length: -1
                    };
                    u ? s(t, 1, {
                        enumerable: !0,
                        get: i
                    }) : t[1] = 1,
                        n.call(t, l, h)
                }
            ))
        }
    }
    , function(t, e, n) {
        var i = n(100)
            , r = n(42);
        t.exports = function(t) {
            return i(r(t))
        }
    }
    , function(t, e, n) {
        var i = n(42)
            , r = /"/g;
        t.exports = function(t, e, n, a) {
            var o = String(i(t))
                , s = "<" + e;
            return "" !== n && (s += " " + n + '="' + String(a).replace(r, "&quot;") + '"'),
            s + ">" + o + "</" + e + ">"
        }
    }
    , function(t, e, n) {
        var i = n(12);
        t.exports = function(t) {
            return i((function() {
                    var e = ""[t]('"');
                    return e !== e.toLowerCase() || 3 < e.split('"').length
                }
            ))
        }
    }
    , , , function(t, e) {
        var n = {}.toString;
        t.exports = function(t) {
            return n.call(t).slice(8, -1)
        }
    }
    , function(t, e, n) {
        function i(t) {
            return "function" == typeof t ? t : void 0
        }
        var r = n(103)
            , a = n(16);
        t.exports = function(t, e) {
            return arguments.length < 2 ? i(r[t]) || i(a[t]) : r[t] && r[t][e] || a[t] && a[t][e]
        }
    }
    , function(t, e) {
        var n = Math.ceil
            , i = Math.floor;
        t.exports = function(t) {
            return isNaN(t = +t) ? 0 : (0 < t ? i : n)(t)
        }
    }
    , , , , function(t, e, n) {
        var i = n(21);
        t.exports = function(t, e) {
            if (!i(t))
                return t;
            var n, r;
            if (e && "function" == typeof (n = t.toString) && !i(r = n.call(t)))
                return r;
            if ("function" == typeof (n = t.valueOf) && !i(r = n.call(t)))
                return r;
            if (!e && "function" == typeof (n = t.toString) && !i(r = n.call(t)))
                return r;
            throw TypeError("Can't convert object to primitive value")
        }
    }
    , function(t, e) {
        t.exports = !1
    }
    , function(t, e, n) {
        var i = n(33)
            , r = n(32)
            , a = n(119)
            , o = n(172)
            , s = a("IE_PROTO")
            , c = Object.prototype;
        t.exports = o ? Object.getPrototypeOf : function(t) {
            return t = r(t),
                i(t, s) ? t[s] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? c : null
        }
    }
    , , , function(t, e, n) {
        var i = n(30).f
            , r = n(33)
            , a = n(25)("toStringTag");
        t.exports = function(t, e, n) {
            t && !r(t = n ? t : t.prototype, a) && i(t, a, {
                configurable: !0,
                value: e
            })
        }
    }
    , , , , , function(t, e, n) {
        function i() {}
        function r(t) {
            return "<script>" + t + "</" + d + ">"
        }
        var a, o = n(22), s = n(169), c = n(166), u = n(102), l = n(203), h = n(161), p = n(119), f = "prototype", d = "script", m = p("IE_PROTO"), g = function() {
            try {
                a = document.domain && new ActiveXObject("htmlfile")
            } catch (t) {}
            var t, e;
            g = a ? function(t) {
                t.write(r("")),
                    t.close();
                var e = t.parentWindow.Object;
                return t = null,
                    e
            }(a) : ((e = h("iframe")).style.display = "none",
                l.appendChild(e),
                e.src = String("javascript:"),
                (t = e.contentWindow.document).open(),
                t.write(r("document.F=Object")),
                t.close(),
                t.F);
            for (var n = c.length; n--; )
                delete g[f][c[n]];
            return g()
        };
        u[m] = !0,
            t.exports = Object.create || function(t, e) {
                var n;
                return null !== t ? (i[f] = o(t),
                    n = new i,
                    i[f] = null,
                    n[m] = t) : n = g(),
                    void 0 === e ? n : s(n, e)
            }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(12);
        t.exports = function(t, e) {
            var n = [][t];
            return !!n && i((function() {
                    n.call(null, e || function() {
                        throw 1
                    }
                        , 1)
                }
            ))
        }
    }
    , function(t, e, n) {
        var i = n(22)
            , r = n(47)
            , a = n(25)("species");
        t.exports = function(t, e) {
            var n, o = i(t).constructor;
            return void 0 === o || null == (n = i(o)[a]) ? e : r(n)
        }
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t, e) {
            for (var n = 0, i = e.length, r = new (Y(t))(i); n < i; )
                r[n] = e[n++];
            return r
        }
        function a(t, e) {
            B(t, e, {
                get: function() {
                    return z(this)[e]
                }
            })
        }
        function o(t) {
            var e;
            return t instanceof j || "ArrayBuffer" == (e = S(t)) || "SharedArrayBuffer" == e
        }
        function s(t, e) {
            return Z(t) && "symbol" != i(e) && e in t && String(+e) == String(e)
        }
        function c(t, e) {
            return s(t, e = M(e, !0)) ? v(2, t[e]) : U(t, e)
        }
        function u(t, e, n) {
            return !(s(t, e = M(e, !0)) && A(n) && w(n, "value")) || w(n, "get") || w(n, "set") || n.configurable || w(n, "writable") && !n.writable || w(n, "enumerable") && !n.enumerable ? B(t, e, n) : (t[e] = n.value,
                t)
        }
        var l = n(3)
            , h = n(16)
            , p = n(23)
            , f = n(187)
            , d = n(27)
            , m = n(136)
            , g = n(80)
            , v = n(76)
            , y = n(43)
            , x = n(26)
            , _ = n(232)
            , b = n(233)
            , M = n(60)
            , w = n(33)
            , S = n(111)
            , A = n(21)
            , T = n(70)
            , L = n(89)
            , E = n(85).f
            , P = n(234)
            , C = n(35).forEach
            , O = n(92)
            , I = n(30)
            , N = n(38)
            , D = n(44)
            , R = n(133)
            , z = D.get
            , F = D.set
            , B = I.f
            , U = N.f
            , G = Math.round
            , k = h.RangeError
            , j = m.ArrayBuffer
            , V = m.DataView
            , W = d.NATIVE_ARRAY_BUFFER_VIEWS
            , H = d.TYPED_ARRAY_TAG
            , q = d.TypedArray
            , X = d.TypedArrayPrototype
            , Y = d.aTypedArrayConstructor
            , Z = d.isTypedArray
            , J = "BYTES_PER_ELEMENT"
            , K = "Wrong length";
        p ? (W || (N.f = c,
                I.f = u,
                a(X, "buffer"),
                a(X, "byteOffset"),
                a(X, "byteLength"),
                a(X, "length")),
                l({
                    target: "Object",
                    stat: !0,
                    forced: !W
                }, {
                    getOwnPropertyDescriptor: c,
                    defineProperty: u
                }),
                t.exports = function(t, e, n) {
                    function i(t, e) {
                        B(t, e, {
                            get: function() {
                                return t = e,
                                    (n = z(this)).view[c](t * a + n.byteOffset, !0);
                                var t, n
                            },
                            set: function(t) {
                                return i = e,
                                    r = t,
                                    o = z(this),
                                n && (r = (r = G(r)) < 0 ? 0 : 255 < r ? 255 : 255 & r),
                                    void o.view[u](i * a + o.byteOffset, r, !0);
                                var i, r, o
                            },
                            enumerable: !0
                        })
                    }
                    var a = t.match(/\d+$/)[0] / 8
                        , s = t + (n ? "Clamped" : "") + "Array"
                        , c = "get" + t
                        , u = "set" + t
                        , p = h[s]
                        , d = p
                        , m = d && d.prototype
                        , v = {};
                    W ? f && (d = e((function(t, e, n, i) {
                            return g(t, d, s),
                                R(A(e) ? o(e) ? void 0 !== i ? new p(e,b(n, a),i) : void 0 !== n ? new p(e,b(n, a)) : new p(e) : Z(e) ? r(d, e) : P.call(d, e) : new p(_(e)), t, d)
                        }
                    )),
                    L && L(d, q),
                        C(E(p), (function(t) {
                                t in d || y(d, t, p[t])
                            }
                        )),
                        d.prototype = m) : (d = e((function(t, e, n, c) {
                            g(t, d, s);
                            var u, l, h, p = 0, f = 0;
                            if (A(e)) {
                                if (!o(e))
                                    return Z(e) ? r(d, e) : P.call(d, e);
                                u = e,
                                    f = b(n, a);
                                var m = e.byteLength;
                                if (void 0 === c) {
                                    if (m % a)
                                        throw k(K);
                                    if ((l = m - f) < 0)
                                        throw k(K)
                                } else if (m < (l = x(c) * a) + f)
                                    throw k(K);
                                h = l / a
                            } else
                                h = _(e),
                                    u = new j(l = h * a);
                            for (F(t, {
                                buffer: u,
                                byteOffset: f,
                                byteLength: l,
                                length: h,
                                view: new V(u)
                            }); p < h; )
                                i(t, p++)
                        }
                    )),
                    L && L(d, q),
                        m = d.prototype = T(X)),
                    m.constructor !== d && y(m, "constructor", d),
                    H && y(m, H, s),
                        v[s] = d,
                        l({
                            global: !0,
                            forced: d != p,
                            sham: !W
                        }, v),
                    J in d || y(d, J, a),
                    J in m || y(m, J, a),
                        O(s)
                }
        ) : t.exports = function() {}
    }
    , , , function(t, e) {
        t.exports = function(t, e) {
            return {
                enumerable: !(1 & t),
                configurable: !(2 & t),
                writable: !(4 & t),
                value: e
            }
        }
    }
    , function(t, e, n) {
        var i = n(56)
            , r = Math.max
            , a = Math.min;
        t.exports = function(t, e) {
            var n = i(t);
            return n < 0 ? r(n + e, 0) : a(n, e)
        }
    }
    , function(t, e, n) {
        var i = n(47);
        t.exports = function(t, e, n) {
            if (i(t),
            void 0 === e)
                return t;
            switch (n) {
                case 0:
                    return function() {
                        return t.call(e)
                    }
                        ;
                case 1:
                    return function(n) {
                        return t.call(e, n)
                    }
                        ;
                case 2:
                    return function(n, i) {
                        return t.call(e, n, i)
                    }
                        ;
                case 3:
                    return function(n, i, r) {
                        return t.call(e, n, i, r)
                    }
            }
            return function() {
                return t.apply(e, arguments)
            }
        }
    }
    , function(t, e, n) {
        var i = n(25)
            , r = n(70)
            , a = n(30)
            , o = i("unscopables")
            , s = Array.prototype;
        null == s[o] && a.f(s, o, {
            configurable: !0,
            value: r(null)
        }),
            t.exports = function(t) {
                s[o][t] = !0
            }
    }
    , function(t, e) {
        t.exports = function(t, e, n) {
            if (!(t instanceof e))
                throw TypeError("Incorrect " + (n ? n + " " : "") + "invocation");
            return t
        }
    }
    , , , , , function(t, e, n) {
        var i = n(201)
            , r = n(166).concat("length", "prototype");
        e.f = Object.getOwnPropertyNames || function(t) {
            return i(t, r)
        }
    }
    , function(t, e, n) {
        var i = n(54);
        t.exports = Array.isArray || function(t) {
            return "Array" == i(t)
        }
    }
    , function(t, e, n) {
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t) {
            c(t, h, {
                value: {
                    objectID: "O" + ++p,
                    weakData: {}
                }
            })
        }
        var a = n(102)
            , o = n(21)
            , s = n(33)
            , c = n(30).f
            , u = n(101)
            , l = n(108)
            , h = u("meta")
            , p = 0
            , f = Object.isExtensible || function() {
            return !0
        }
            , d = t.exports = {
            REQUIRED: !1,
            fastKey: function(t, e) {
                if (!o(t))
                    return "symbol" == i(t) ? t : ("string" == typeof t ? "S" : "P") + t;
                if (!s(t, h)) {
                    if (!f(t))
                        return "F";
                    if (!e)
                        return "E";
                    r(t)
                }
                return t[h].objectID
            },
            getWeakData: function(t, e) {
                if (!s(t, h)) {
                    if (!f(t))
                        return !0;
                    if (!e)
                        return !1;
                    r(t)
                }
                return t[h].weakData
            },
            onFreeze: function(t) {
                return l && d.REQUIRED && f(t) && !s(t, h) && r(t),
                    t
            }
        };
        a[h] = !0
    }
    , function(t, e, n) {
        "use strict";
        var i = n(60)
            , r = n(30)
            , a = n(76);
        t.exports = function(t, e, n) {
            var o = i(e);
            o in t ? r.f(t, o, a(0, n)) : t[o] = n
        }
    }
    , function(t, e, n) {
        var i = n(22)
            , r = n(210);
        t.exports = Object.setPrototypeOf || ("__proto__"in {} ? function() {
            var t, e = !1, n = {};
            try {
                (t = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n, []),
                    e = n instanceof Array
            } catch (n) {}
            return function(n, a) {
                return i(n),
                    r(a),
                    e ? t.call(n, a) : n.__proto__ = a,
                    n
            }
        }() : void 0)
    }
    , , function(t, e, n) {
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t, e) {
            this.stopped = t,
                this.result = e
        }
        var a = n(22)
            , o = n(170)
            , s = n(26)
            , c = n(78)
            , u = n(110)
            , l = n(208);
        (t.exports = function(t, e, n, h, p) {
                var f, d, m, g, v, y, x, _ = c(e, n, h ? 2 : 1);
                if (p)
                    f = t;
                else {
                    if ("function" != typeof (d = u(t)))
                        throw TypeError("Target is not iterable");
                    if (o(d)) {
                        for (m = 0,
                                 g = s(t.length); m < g; m++)
                            if ((v = h ? _(a(x = t[m])[0], x[1]) : _(t[m])) && v instanceof r)
                                return v;
                        return new r(!1)
                    }
                    f = d.call(t)
                }
                for (y = f.next; !(x = y.call(f)).done; )
                    if ("object" == i(v = l(f, _, x.value, h)) && v && v instanceof r)
                        return v;
                return new r(!1)
            }
        ).stop = function(t) {
            return new r(!0,t)
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(55)
            , r = n(30)
            , a = n(25)
            , o = n(23)
            , s = a("species");
        t.exports = function(t) {
            var e = i(t)
                , n = r.f;
            o && e && !e[s] && n(e, s, {
                configurable: !0,
                get: function() {
                    return this
                }
            })
        }
    }
    , function(t, e, n) {
        function i(t) {
            return function(e) {
                var n = String(r(e));
                return 1 & t && (n = n.replace(o, "")),
                2 & t && (n = n.replace(s, "")),
                    n
            }
        }
        var r = n(42)
            , a = "[" + n(132) + "]"
            , o = RegExp("^" + a + a + "*")
            , s = RegExp(a + a + "*$");
        t.exports = {
            start: i(1),
            end: i(2),
            trim: i(3)
        }
    }
    , function(t, e, n) {
        var i = n(39);
        t.exports = function(t, e, n) {
            for (var r in e)
                i(t, r, e[r], n);
            return t
        }
    }
    , , , , , function(t, e) {
        function n(t) {
            return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        var i;
        i = function() {
            return this
        }();
        try {
            i = i || new Function("return this")()
        } catch (t) {
            "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (i = window)
        }
        t.exports = i
    }
    , function(t, e, n) {
        var i = n(12)
            , r = n(54)
            , a = "".split;
        t.exports = i((function() {
                return !Object("z").propertyIsEnumerable(0)
            }
        )) ? function(t) {
                return "String" == r(t) ? a.call(t, "") : Object(t)
            }
            : Object
    }
    , function(t, e) {
        var n = 0
            , i = Math.random();
        t.exports = function(t) {
            return "Symbol(" + String(void 0 === t ? "" : t) + ")_" + (++n + i).toString(36)
        }
    }
    , function(t, e) {
        t.exports = {}
    }
    , function(t, e, n) {
        var i = n(16);
        t.exports = i
    }
    , function(t, e, n) {
        function i(t) {
            return function(e, n, i) {
                var s, c = r(e), u = a(c.length), l = o(i, u);
                if (t && n != n) {
                    for (; l < u; )
                        if ((s = c[l++]) != s)
                            return !0
                } else
                    for (; l < u; l++)
                        if ((t || l in c) && c[l] === n)
                            return t || l || 0;
                return !t && -1
            }
        }
        var r = n(49)
            , a = n(26)
            , o = n(77);
        t.exports = {
            includes: i(!0),
            indexOf: i(!1)
        }
    }
    , function(t, e, n) {
        function i(t, e) {
            var n = s[o(t)];
            return n == u || n != c && ("function" == typeof e ? r(e) : !!e)
        }
        var r = n(12)
            , a = /#|\.prototype\./
            , o = i.normalize = function(t) {
            return String(t).replace(a, ".").toLowerCase()
        }
            , s = i.data = {}
            , c = i.NATIVE = "N"
            , u = i.POLYFILL = "P";
        t.exports = i
    }
    , function(t, e, n) {
        var i = n(201)
            , r = n(166);
        t.exports = Object.keys || function(t) {
            return i(t, r)
        }
    }
    , function(t, e, n) {
        var i = n(21)
            , r = n(86)
            , a = n(25)("species");
        t.exports = function(t, e) {
            var n;
            return r(t) && ("function" == typeof (n = t.constructor) && (n === Array || r(n.prototype)) || i(n) && null === (n = n[a])) && (n = void 0),
                new (void 0 === n ? Array : n)(0 === e ? 0 : e)
        }
    }
    , function(t, e, n) {
        var i = n(12);
        t.exports = !i((function() {
                return Object.isExtensible(Object.preventExtensions({}))
            }
        ))
    }
    , function(t, e) {
        t.exports = {}
    }
    , function(t, e, n) {
        var i = n(111)
            , r = n(109)
            , a = n(25)("iterator");
        t.exports = function(t) {
            if (null != t)
                return t[a] || t["@@iterator"] || r[i(t)]
        }
    }
    , function(t, e, n) {
        var i = n(171)
            , r = n(54)
            , a = n(25)("toStringTag")
            , o = "Arguments" == r(function() {
            return arguments
        }());
        t.exports = i ? r : function(t) {
            var e, n, i;
            return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (n = function(t, e) {
                try {
                    return t[e]
                } catch (t) {}
            }(e = Object(t), a)) ? n : o ? r(e) : "Object" == (i = r(e)) && "function" == typeof e.callee ? "Arguments" : i
        }
    }
    , function(t, e, n) {
        var i = n(12)
            , r = n(25)
            , a = n(173)
            , o = r("species");
        t.exports = function(t) {
            return 51 <= a || !i((function() {
                    var e = [];
                    return (e.constructor = {})[o] = function() {
                        return {
                            foo: 1
                        }
                    }
                        ,
                    1 !== e[t](Boolean).foo
                }
            ))
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(22);
        t.exports = function() {
            var t = i(this)
                , e = "";
            return t.global && (e += "g"),
            t.ignoreCase && (e += "i"),
            t.multiline && (e += "m"),
            t.dotAll && (e += "s"),
            t.unicode && (e += "u"),
            t.sticky && (e += "y"),
                e
        }
    }
    , , , , function(t, e) {
        t.exports = function(t) {
            return t.webpackPolyfill || (t.deprecate = function() {}
                ,
                t.paths = [],
            t.children || (t.children = []),
                Object.defineProperty(t, "loaded", {
                    enumerable: !0,
                    get: function() {
                        return t.l
                    }
                }),
                Object.defineProperty(t, "id", {
                    enumerable: !0,
                    get: function() {
                        return t.i
                    }
                }),
                t.webpackPolyfill = 1),
                t
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = {}.propertyIsEnumerable
            , r = Object.getOwnPropertyDescriptor
            , a = r && !i.call({
            1: 2
        }, 1);
        e.f = a ? function(t) {
                var e = r(this, t);
                return !!e && e.enumerable
            }
            : i
    }
    , function(t, e, n) {
        var i = n(164)
            , r = n(101)
            , a = i("keys");
        t.exports = function(t) {
            return a[t] || (a[t] = r(t))
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(61)
            , r = n(16)
            , a = n(12);
        t.exports = i || !a((function() {
                var t = Math.random();
                __defineSetter__.call(null, t, (function() {}
                )),
                    delete r[t]
            }
        ))
    }
    , function(t, e, n) {
        var i = n(25)("iterator")
            , r = !1;
        try {
            var a = 0
                , o = {
                next: function() {
                    return {
                        done: !!a++
                    }
                },
                return: function() {
                    r = !0
                }
            };
            o[i] = function() {
                return this
            }
                ,
                Array.from(o, (function() {
                        throw 2
                    }
                ))
        } catch (t) {}
        t.exports = function(t, e) {
            if (!e && !r)
                return !1;
            var n = !1;
            try {
                var a = {};
                a[i] = function() {
                    return {
                        next: function() {
                            return {
                                done: n = !0
                            }
                        }
                    }
                }
                    ,
                    t(a)
            } catch (t) {}
            return n
        }
    }
    , function(t, e, n) {
        var i = n(55);
        t.exports = i("navigator", "userAgent") || ""
    }
    , function(t, e, n) {
        function i(t) {
            return function(e, n, i, c) {
                r(n);
                var u = a(e)
                    , l = o(u)
                    , h = s(u.length)
                    , p = t ? h - 1 : 0
                    , f = t ? -1 : 1;
                if (i < 2)
                    for (; ; ) {
                        if (p in l) {
                            c = l[p],
                                p += f;
                            break
                        }
                        if (p += f,
                            t ? p < 0 : h <= p)
                            throw TypeError("Reduce of empty array with no initial value")
                    }
                for (; t ? 0 <= p : p < h; p += f)
                    p in l && (c = n(c, l[p], p, u));
                return c
            }
        }
        var r = n(47)
            , a = n(32)
            , o = n(100)
            , s = n(26);
        t.exports = {
            left: i(!1),
            right: i(!0)
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(49)
            , r = n(79)
            , a = n(109)
            , o = n(44)
            , s = n(175)
            , c = "Array Iterator"
            , u = o.set
            , l = o.getterFor(c);
        t.exports = s(Array, "Array", (function(t, e) {
                u(this, {
                    type: c,
                    target: i(t),
                    index: 0,
                    kind: e
                })
            }
        ), (function() {
                var t = l(this)
                    , e = t.target
                    , n = t.kind
                    , i = t.index++;
                return !e || i >= e.length ? {
                    value: t.target = void 0,
                    done: !0
                } : "keys" == n ? {
                    value: i,
                    done: !1
                } : "values" == n ? {
                    value: e[i],
                    done: !1
                } : {
                    value: [i, e[i]],
                    done: !1
                }
            }
        ), "values"),
            a.Arguments = a.Array,
            r("keys"),
            r("values"),
            r("entries")
    }
    , function(t, e, n) {
        function i(t) {
            return function(e, n) {
                var i, o, s = String(a(e)), c = r(n), u = s.length;
                return c < 0 || u <= c ? t ? "" : void 0 : (i = s.charCodeAt(c)) < 55296 || 56319 < i || c + 1 === u || (o = s.charCodeAt(c + 1)) < 56320 || 57343 < o ? t ? s.charAt(c) : i : t ? s.slice(c, c + 2) : o - 56320 + (i - 55296 << 10) + 65536
            }
        }
        var r = n(56)
            , a = n(42);
        t.exports = {
            codeAt: i(!1),
            charAt: i(!0)
        }
    }
    , function(t, e, n) {
        var i = n(21)
            , r = n(54)
            , a = n(25)("match");
        t.exports = function(t) {
            var e;
            return i(t) && (void 0 !== (e = t[a]) ? !!e : "RegExp" == r(t))
        }
    }
    , function(t, e, n) {
        "use strict";
        n(179);
        var i = n(39)
            , r = n(12)
            , a = n(25)
            , o = n(128)
            , s = n(43)
            , c = a("species")
            , u = !r((function() {
                var t = /./;
                return t.exec = function() {
                    var t = [];
                    return t.groups = {
                        a: "7"
                    },
                        t
                }
                    ,
                "7" !== "".replace(t, "$<a>")
            }
        ))
            , l = "$0" === "a".replace(/./, "$0")
            , h = a("replace")
            , p = !!/./[h] && "" === /./[h]("a", "$0")
            , f = !r((function() {
                var t = /(?:)/
                    , e = t.exec;
                t.exec = function() {
                    return e.apply(this, arguments)
                }
                ;
                var n = "ab".split(t);
                return 2 !== n.length || "a" !== n[0] || "b" !== n[1]
            }
        ));
        t.exports = function(t, e, n, h) {
            var d = a(t)
                , m = !r((function() {
                    var e = {};
                    return e[d] = function() {
                        return 7
                    }
                        ,
                    7 != ""[t](e)
                }
            ))
                , g = m && !r((function() {
                    var e = !1
                        , n = /a/;
                    return "split" === t && ((n = {
                        constructor: {}
                    }).constructor[c] = function() {
                        return n
                    }
                        ,
                        n.flags = "",
                        n[d] = /./[d]),
                        n.exec = function() {
                            return e = !0,
                                null
                        }
                        ,
                        n[d](""),
                        !e
                }
            ));
            if (!m || !g || "replace" === t && (!u || !l || p) || "split" === t && !f) {
                var v = /./[d]
                    , y = n(d, ""[t], (function(t, e, n, i, r) {
                        return e.exec === o ? m && !r ? {
                            done: !0,
                            value: v.call(e, n, i)
                        } : {
                            done: !0,
                            value: t.call(n, e, i)
                        } : {
                            done: !1
                        }
                    }
                ), {
                    REPLACE_KEEPS_$0: l,
                    REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: p
                })
                    , x = y[0]
                    , _ = y[1];
                i(String.prototype, t, x),
                    i(RegExp.prototype, d, 2 == e ? function(t, e) {
                                return _.call(t, this, e)
                            }
                            : function(t) {
                                return _.call(t, this)
                            }
                    )
            }
            h && s(RegExp.prototype[d], "sham", !0)
        }
    }
    , function(t, e, n) {
        "use strict";
        var i, r, a = n(113), o = n(129), s = RegExp.prototype.exec, c = String.prototype.replace, u = s, l = (i = /a/,
            r = /b*/g,
            s.call(i, "a"),
            s.call(r, "a"),
        0 !== i.lastIndex || 0 !== r.lastIndex), h = o.UNSUPPORTED_Y || o.BROKEN_CARET, p = void 0 !== /()??/.exec("")[1];
        (l || p || h) && (u = function(t) {
                var e, n, i, r, o = this, u = h && o.sticky, f = a.call(o), d = o.source, m = 0, g = t;
                return u && (-1 === (f = f.replace("y", "")).indexOf("g") && (f += "g"),
                    g = String(t).slice(o.lastIndex),
                0 < o.lastIndex && (!o.multiline || o.multiline && "\n" !== t[o.lastIndex - 1]) && (d = "(?: " + d + ")",
                    g = " " + g,
                    m++),
                    n = new RegExp("^(?:" + d + ")",f)),
                p && (n = new RegExp("^" + d + "$(?!\\s)",f)),
                l && (e = o.lastIndex),
                    i = s.call(u ? n : o, g),
                    u ? i ? (i.input = i.input.slice(m),
                        i[0] = i[0].slice(m),
                        i.index = o.lastIndex,
                        o.lastIndex += i[0].length) : o.lastIndex = 0 : l && i && (o.lastIndex = o.global ? i.index + i[0].length : e),
                p && i && 1 < i.length && c.call(i[0], n, (function() {
                        for (r = 1; r < arguments.length - 2; r++)
                            void 0 === arguments[r] && (i[r] = void 0)
                    }
                )),
                    i
            }
        ),
            t.exports = u
    }
    , function(t, e, n) {
        "use strict";
        var i = n(12);
        function r(t, e) {
            return RegExp(t, e)
        }
        e.UNSUPPORTED_Y = i((function() {
                var t = r("a", "y");
                return t.lastIndex = 2,
                null != t.exec("abcd")
            }
        )),
            e.BROKEN_CARET = i((function() {
                    var t = r("^r", "gy");
                    return t.lastIndex = 2,
                    null != t.exec("str")
                }
            ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(125).charAt;
        t.exports = function(t, e, n) {
            return e + (n ? i(t, e).length : 1)
        }
    }
    , function(t, e, n) {
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        var r = n(54)
            , a = n(128);
        t.exports = function(t, e) {
            var n = t.exec;
            if ("function" == typeof n) {
                var o = n.call(t, e);
                if ("object" !== i(o))
                    throw TypeError("RegExp exec method returned something other than an Object or null");
                return o
            }
            if ("RegExp" !== r(t))
                throw TypeError("RegExp#exec called on incompatible receiver");
            return a.call(t, e)
        }
    }
    , function(t, e) {
        t.exports = "\t\n\v\f\r                　\u2028\u2029\ufeff"
    }
    , function(t, e, n) {
        var i = n(21)
            , r = n(89);
        t.exports = function(t, e, n) {
            var a, o;
            return r && "function" == typeof (a = e.constructor) && a !== n && i(o = a.prototype) && o !== n.prototype && r(t, o),
                t
        }
    }
    , function(t, e) {
        var n = Math.expm1
            , i = Math.exp;
        t.exports = !n || 22025.465794806718 < n(10) || n(10) < 22025.465794806718 || -2e-17 != n(-2e-17) ? function(t) {
                return 0 == (t = +t) ? t : -1e-6 < t && t < 1e-6 ? t + t * t / 2 : i(t) - 1
            }
            : n
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(16)
            , a = n(105)
            , o = n(39)
            , s = n(87)
            , c = n(91)
            , u = n(80)
            , l = n(21)
            , h = n(12)
            , p = n(121)
            , f = n(65)
            , d = n(133);
        t.exports = function(t, e, n) {
            function m(t) {
                var e = _[t];
                o(_, t, "add" == t ? function(t) {
                            return e.call(this, 0 === t ? 0 : t),
                                this
                        }
                        : "delete" == t ? function(t) {
                                return !(v && !l(t)) && e.call(this, 0 === t ? 0 : t)
                            }
                            : "get" == t ? function(t) {
                                    return v && !l(t) ? void 0 : e.call(this, 0 === t ? 0 : t)
                                }
                                : "has" == t ? function(t) {
                                        return !(v && !l(t)) && e.call(this, 0 === t ? 0 : t)
                                    }
                                    : function(t, n) {
                                        return e.call(this, 0 === t ? 0 : t, n),
                                            this
                                    }
                )
            }
            var g = -1 !== t.indexOf("Map")
                , v = -1 !== t.indexOf("Weak")
                , y = g ? "set" : "add"
                , x = r[t]
                , _ = x && x.prototype
                , b = x
                , M = {};
            if (a(t, "function" != typeof x || !(v || _.forEach && !h((function() {
                    (new x).entries().next()
                }
            )))))
                b = n.getConstructor(e, t, g, y),
                    s.REQUIRED = !0;
            else if (a(t, !0)) {
                var w = new b
                    , S = w[y](v ? {} : -0, 1) != w
                    , A = h((function() {
                        w.has(1)
                    }
                ))
                    , T = p((function(t) {
                        new x(t)
                    }
                ))
                    , L = !v && h((function() {
                        for (var t = new x, e = 5; e--; )
                            t[y](e, e);
                        return !t.has(-0)
                    }
                ));
                T || (((b = e((function(e, n) {
                        u(e, b, t);
                        var i = d(new x, e, b);
                        return null != n && c(n, i[y], i, g),
                            i
                    }
                ))).prototype = _).constructor = b),
                (A || L) && (m("delete"),
                    m("has"),
                g && m("get")),
                (L || S) && m(y),
                v && _.clear && delete _.clear
            }
            return M[t] = b,
                i({
                    global: !0,
                    forced: b != x
                }, M),
                f(b, t),
            v || n.setStrong(b, t, g),
                b
        }
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return [255 & t]
        }
        function r(t) {
            return [255 & t, t >> 8 & 255]
        }
        function a(t) {
            return [255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255]
        }
        function o(t) {
            return t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0]
        }
        function s(t) {
            return j(t, 23, 4)
        }
        function c(t) {
            return j(t, 52, 8)
        }
        function u(t, e) {
            T(t[D], e, {
                get: function() {
                    return C(this)[e]
                }
            })
        }
        function l(t, e, n, i) {
            var r = b(n)
                , a = C(t);
            if (r + e > a.byteLength)
                throw k(R);
            var o = C(a.buffer).bytes
                , s = r + a.byteOffset
                , c = o.slice(s, s + e);
            return i ? c : c.reverse()
        }
        function h(t, e, n, i, r, a) {
            var o = b(n)
                , s = C(t);
            if (o + e > s.byteLength)
                throw k(R);
            for (var c = C(s.buffer).bytes, u = o + s.byteOffset, l = i(+r), h = 0; h < e; h++)
                c[u + h] = l[a ? h : e - h - 1]
        }
        var p = n(16)
            , f = n(23)
            , d = n(186)
            , m = n(43)
            , g = n(94)
            , v = n(12)
            , y = n(80)
            , x = n(56)
            , _ = n(26)
            , b = n(232)
            , M = n(581)
            , w = n(62)
            , S = n(89)
            , A = n(85).f
            , T = n(30).f
            , L = n(174)
            , E = n(65)
            , P = n(44)
            , C = P.get
            , O = P.set
            , I = "ArrayBuffer"
            , N = "DataView"
            , D = "prototype"
            , R = "Wrong index"
            , z = p[I]
            , F = z
            , B = p[N]
            , U = B && B[D]
            , G = Object.prototype
            , k = p.RangeError
            , j = M.pack
            , V = M.unpack;
        if (d) {
            if (!v((function() {
                    z(1)
                }
            )) || !v((function() {
                    new z(-1)
                }
            )) || v((function() {
                    return new z,
                        new z(1.5),
                        new z(NaN),
                    z.name != I
                }
            ))) {
                for (var W, H = (F = function(t) {
                        return y(this, F),
                            new z(b(t))
                    }
                )[D] = z[D], q = A(z), X = 0; q.length > X; )
                    (W = q[X++])in F || m(F, W, z[W]);
                H.constructor = F
            }
            S && w(U) !== G && S(U, G);
            var Y = new B(new F(2))
                , Z = U.setInt8;
            Y.setInt8(0, 2147483648),
                Y.setInt8(1, 2147483649),
            !Y.getInt8(0) && Y.getInt8(1) || g(U, {
                setInt8: function(t, e) {
                    Z.call(this, t, e << 24 >> 24)
                },
                setUint8: function(t, e) {
                    Z.call(this, t, e << 24 >> 24)
                }
            }, {
                unsafe: !0
            })
        } else
            F = function(t) {
                y(this, F, I);
                var e = b(t);
                O(this, {
                    bytes: L.call(new Array(e), 0),
                    byteLength: e
                }),
                f || (this.byteLength = e)
            }
                ,
                B = function(t, e, n) {
                    y(this, B, N),
                        y(t, F, N);
                    var i = C(t).byteLength
                        , r = x(e);
                    if (r < 0 || i < r)
                        throw k("Wrong offset");
                    if (i < r + (n = void 0 === n ? i - r : _(n)))
                        throw k("Wrong length");
                    O(this, {
                        buffer: t,
                        byteLength: n,
                        byteOffset: r
                    }),
                    f || (this.buffer = t,
                        this.byteLength = n,
                        this.byteOffset = r)
                }
                ,
            f && (u(F, "byteLength"),
                u(B, "buffer"),
                u(B, "byteLength"),
                u(B, "byteOffset")),
                g(B[D], {
                    getInt8: function(t) {
                        return l(this, 1, t)[0] << 24 >> 24
                    },
                    getUint8: function(t) {
                        return l(this, 1, t)[0]
                    },
                    getInt16: function(t, e) {
                        var n = l(this, 2, t, 1 < arguments.length ? e : void 0);
                        return (n[1] << 8 | n[0]) << 16 >> 16
                    },
                    getUint16: function(t, e) {
                        var n = l(this, 2, t, 1 < arguments.length ? e : void 0);
                        return n[1] << 8 | n[0]
                    },
                    getInt32: function(t, e) {
                        return o(l(this, 4, t, 1 < arguments.length ? e : void 0))
                    },
                    getUint32: function(t, e) {
                        return o(l(this, 4, t, 1 < arguments.length ? e : void 0)) >>> 0
                    },
                    getFloat32: function(t, e) {
                        return V(l(this, 4, t, 1 < arguments.length ? e : void 0), 23)
                    },
                    getFloat64: function(t, e) {
                        return V(l(this, 8, t, 1 < arguments.length ? e : void 0), 52)
                    },
                    setInt8: function(t, e) {
                        h(this, 1, t, i, e)
                    },
                    setUint8: function(t, e) {
                        h(this, 1, t, i, e)
                    },
                    setInt16: function(t, e, n) {
                        h(this, 2, t, r, e, 2 < arguments.length ? n : void 0)
                    },
                    setUint16: function(t, e, n) {
                        h(this, 2, t, r, e, 2 < arguments.length ? n : void 0)
                    },
                    setInt32: function(t, e, n) {
                        h(this, 4, t, a, e, 2 < arguments.length ? n : void 0)
                    },
                    setUint32: function(t, e, n) {
                        h(this, 4, t, a, e, 2 < arguments.length ? n : void 0)
                    },
                    setFloat32: function(t, e, n) {
                        h(this, 4, t, s, e, 2 < arguments.length ? n : void 0)
                    },
                    setFloat64: function(t, e, n) {
                        h(this, 8, t, c, e, 2 < arguments.length ? n : void 0)
                    }
                });
        E(F, I),
            E(B, N),
            t.exports = {
                ArrayBuffer: F,
                DataView: B
            }
    }
    , , , , , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
        var i = n(16)
            , r = n(21)
            , a = i.document
            , o = r(a) && r(a.createElement);
        t.exports = function(t) {
            return o ? a.createElement(t) : {}
        }
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(43);
        t.exports = function(t, e) {
            try {
                r(i, t, e)
            } catch (n) {
                i[t] = e
            }
            return e
        }
    }
    , function(t, e, n) {
        var i = n(198)
            , r = Function.toString;
        "function" != typeof i.inspectSource && (i.inspectSource = function(t) {
                return r.call(t)
            }
        ),
            t.exports = i.inspectSource
    }
    , function(t, e, n) {
        var i = n(61)
            , r = n(198);
        (t.exports = function(t, e) {
                return r[t] || (r[t] = void 0 !== e ? e : {})
            }
        )("versions", []).push({
            version: "3.6.4",
            mode: i ? "pure" : "global",
            copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
        })
    }
    , function(t, e, n) {
        var i = n(55)
            , r = n(85)
            , a = n(167)
            , o = n(22);
        t.exports = i("Reflect", "ownKeys") || function(t) {
            var e = r.f(o(t))
                , n = a.f;
            return n ? e.concat(n(t)) : e
        }
    }
    , function(t, e) {
        t.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]
    }
    , function(t, e) {
        e.f = Object.getOwnPropertySymbols
    }
    , function(t, e, n) {
        var i = n(12);
        t.exports = !!Object.getOwnPropertySymbols && !i((function() {
                return !String(Symbol())
            }
        ))
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(30)
            , a = n(22)
            , o = n(106);
        t.exports = i ? Object.defineProperties : function(t, e) {
            a(t);
            for (var n, i = o(e), s = i.length, c = 0; c < s; )
                r.f(t, n = i[c++], e[n]);
            return t
        }
    }
    , function(t, e, n) {
        var i = n(25)
            , r = n(109)
            , a = i("iterator")
            , o = Array.prototype;
        t.exports = function(t) {
            return void 0 !== t && (r.Array === t || o[a] === t)
        }
    }
    , function(t, e, n) {
        var i = {};
        i[n(25)("toStringTag")] = "z",
            t.exports = "[object z]" === String(i)
    }
    , function(t, e, n) {
        var i = n(12);
        t.exports = !i((function() {
                function t() {}
                return t.prototype.constructor = null,
                Object.getPrototypeOf(new t) !== t.prototype
            }
        ))
    }
    , function(t, e, n) {
        var i, r, a = n(16), o = n(122), s = a.process, c = s && s.versions, u = c && c.v8;
        u ? r = (i = u.split("."))[0] + i[1] : o && (!(i = o.match(/Edge\/(\d+)/)) || 74 <= i[1]) && (i = o.match(/Chrome\/(\d+)/)) && (r = i[1]),
            t.exports = r && +r
    }
    , function(t, e, n) {
        "use strict";
        var i = n(32)
            , r = n(77)
            , a = n(26);
        t.exports = function(t, e, n) {
            for (var o = i(this), s = a(o.length), c = arguments.length, u = r(1 < c ? e : void 0, s), l = 2 < c ? n : void 0, h = void 0 === l ? s : r(l, s); u < h; )
                o[u++] = t;
            return o
        }
    }
    , function(t, e, n) {
        "use strict";
        function i() {
            return this
        }
        var r = n(3)
            , a = n(176)
            , o = n(62)
            , s = n(89)
            , c = n(65)
            , u = n(43)
            , l = n(39)
            , h = n(25)
            , p = n(61)
            , f = n(109)
            , d = n(217)
            , m = d.IteratorPrototype
            , g = d.BUGGY_SAFARI_ITERATORS
            , v = h("iterator")
            , y = "values"
            , x = "entries";
        t.exports = function(t, e, n, h, d, _, b) {
            function M(t) {
                if (t === d && C)
                    return C;
                if (!g && t in E)
                    return E[t];
                switch (t) {
                    case "keys":
                    case y:
                    case x:
                        return function() {
                            return new n(this,t)
                        }
                }
                return function() {
                    return new n(this)
                }
            }
            a(n, e, h);
            var w, S, A, T = e + " Iterator", L = !1, E = t.prototype, P = E[v] || E["@@iterator"] || d && E[d], C = !g && P || M(d), O = "Array" == e && E.entries || P;
            if (O && (w = o(O.call(new t)),
            m !== Object.prototype && w.next && (p || o(w) === m || (s ? s(w, m) : "function" != typeof w[v] && u(w, v, i)),
                c(w, T, !0, !0),
            p && (f[T] = i))),
            d == y && P && P.name !== y && (L = !0,
                    C = function() {
                        return P.call(this)
                    }
            ),
            p && !b || E[v] === C || u(E, v, C),
                f[e] = C,
                d)
                if (S = {
                    values: M(y),
                    keys: _ ? C : M("keys"),
                    entries: M(x)
                },
                    b)
                    for (A in S)
                        !g && !L && A in E || l(E, A, S[A]);
                else
                    r({
                        target: e,
                        proto: !0,
                        forced: g || L
                    }, S);
            return S
        }
    }
    , function(t, e, n) {
        "use strict";
        function i() {
            return this
        }
        var r = n(217).IteratorPrototype
            , a = n(70)
            , o = n(76)
            , s = n(65)
            , c = n(109);
        t.exports = function(t, e, n) {
            var u = e + " Iterator";
            return t.prototype = a(r, {
                next: o(1, n)
            }),
                s(t, u, !1, !0),
                c[u] = i,
                t
        }
    }
    , function(t, e, n) {
        var i = n(126);
        t.exports = function(t) {
            if (i(t))
                throw TypeError("The method doesn't accept regular expressions");
            return t
        }
    }
    , function(t, e, n) {
        var i = n(25)("match");
        t.exports = function(t) {
            var e = /./;
            try {
                "/./"[t](e)
            } catch (n) {
                try {
                    return e[i] = !1,
                        "/./"[t](e)
                } catch (t) {}
            }
            return !1
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(128);
        i({
            target: "RegExp",
            proto: !0,
            forced: /./.exec !== r
        }, {
            exec: r
        })
    }
    , function(t, e, n) {
        function i(t) {
            return function(e, n, i) {
                var c, u, l = String(o(e)), h = l.length, p = void 0 === i ? " " : String(i), f = r(n);
                return f <= h || "" == p ? l : (c = f - h,
                (u = a.call(p, s(c / p.length))).length > c && (u = u.slice(0, c)),
                    t ? l + u : u + l)
            }
        }
        var r = n(26)
            , a = n(181)
            , o = n(42)
            , s = Math.ceil;
        t.exports = {
            start: i(!1),
            end: i(!0)
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(56)
            , r = n(42);
        t.exports = "".repeat || function(t) {
            var e = String(r(this))
                , n = ""
                , a = i(t);
            if (a < 0 || a == 1 / 0)
                throw RangeError("Wrong number of repetitions");
            for (; 0 < a; (a >>>= 1) && (e += e))
                1 & a && (n += e);
            return n
        }
    }
    , function(t, e, n) {
        var i = n(12)
            , r = n(132);
        t.exports = function(t) {
            return i((function() {
                    return !!r[t]() || "​᠎" != "​᠎"[t]() || r[t].name !== t
                }
            ))
        }
    }
    , function(t, e) {
        t.exports = Math.sign || function(t) {
            return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1
        }
    }
    , function(t, e, n) {
        function i(t) {
            if (S.hasOwnProperty(t)) {
                var e = S[t];
                delete S[t],
                    e()
            }
        }
        function r(t) {
            return function() {
                i(t)
            }
        }
        function a(t) {
            i(t.data)
        }
        function o(t) {
            l.postMessage(t + "", v.protocol + "//" + v.host)
        }
        var s, c, u, l = n(16), h = n(12), p = n(54), f = n(78), d = n(203), m = n(161), g = n(226), v = l.location, y = l.setImmediate, x = l.clearImmediate, _ = l.process, b = l.MessageChannel, M = l.Dispatch, w = 0, S = {}, A = "onreadystatechange";
        y && x || (y = function(t) {
            for (var e = [], n = 1; n < arguments.length; )
                e.push(arguments[n++]);
            return S[++w] = function() {
                ("function" == typeof t ? t : Function(t)).apply(void 0, e)
            }
                ,
                s(w),
                w
        }
            ,
            x = function(t) {
                delete S[t]
            }
            ,
            "process" == p(_) ? s = function(t) {
                    _.nextTick(r(t))
                }
                : M && M.now ? s = function(t) {
                        M.now(r(t))
                    }
                    : b && !g ? (u = (c = new b).port2,
                        c.port1.onmessage = a,
                        s = f(u.postMessage, u, 1)) : !l.addEventListener || "function" != typeof postMessage || l.importScripts || h(o) ? s = A in m("script") ? function(t) {
                                d.appendChild(m("script"))[A] = function() {
                                    d.removeChild(this),
                                        i(t)
                                }
                            }
                            : function(t) {
                                setTimeout(r(t), 0)
                            }
                        : (s = o,
                            l.addEventListener("message", a, !1))),
            t.exports = {
                set: y,
                clear: x
            }
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            var e, n;
            this.promise = new t((function(t, i) {
                    if (void 0 !== e || void 0 !== n)
                        throw TypeError("Bad Promise constructor");
                    e = t,
                        n = i
                }
            )),
                this.resolve = r(e),
                this.reject = r(n)
        }
        var r = n(47);
        t.exports.f = function(t) {
            return new i(t)
        }
    }
    , function(t, e) {
        t.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(12)
            , a = n(121)
            , o = n(27).NATIVE_ARRAY_BUFFER_VIEWS
            , s = i.ArrayBuffer
            , c = i.Int8Array;
        t.exports = !o || !r((function() {
                c(1)
            }
        )) || !r((function() {
                new c(-1)
            }
        )) || !a((function(t) {
                new c,
                    new c(null),
                    new c(1.5),
                    new c(t)
            }
        ), !0) || r((function() {
                return 1 !== new c(new s(2),1,void 0).length
            }
        ))
    }
    , , , , , , , , , , function(t, e, n) {
        var i = n(23)
            , r = n(12)
            , a = n(161);
        t.exports = !i && !r((function() {
                return 7 != Object.defineProperty(a("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            }
        ))
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(162)
            , a = "__core-js_shared__"
            , o = i[a] || r(a, {});
        t.exports = o
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(163)
            , a = i.WeakMap;
        t.exports = "function" == typeof a && /native code/.test(r(a))
    }
    , function(t, e, n) {
        var i = n(33)
            , r = n(165)
            , a = n(38)
            , o = n(30);
        t.exports = function(t, e) {
            for (var n = r(e), s = o.f, c = a.f, u = 0; u < n.length; u++) {
                var l = n[u];
                i(t, l) || s(t, l, c(e, l))
            }
        }
    }
    , function(t, e, n) {
        var i = n(33)
            , r = n(49)
            , a = n(104).indexOf
            , o = n(102);
        t.exports = function(t, e) {
            var n, s = r(t), c = 0, u = [];
            for (n in s)
                !i(o, n) && i(s, n) && u.push(n);
            for (; e.length > c; )
                i(s, n = e[c++]) && (~a(u, n) || u.push(n));
            return u
        }
    }
    , function(t, e, n) {
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        var r = n(168);
        t.exports = r && !Symbol.sham && "symbol" == i(Symbol.iterator)
    }
    , function(t, e, n) {
        var i = n(55);
        t.exports = i("document", "documentElement")
    }
    , function(t, e, n) {
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        var r = n(49)
            , a = n(85).f
            , o = {}.toString
            , s = "object" == ("undefined" == typeof window ? "undefined" : i(window)) && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        t.exports.f = function(t) {
            return s && "[object Window]" == o.call(t) ? function(t) {
                try {
                    return a(t)
                } catch (t) {
                    return s.slice()
                }
            }(t) : a(r(t))
        }
    }
    , function(t, e, n) {
        var i = n(25);
        e.f = i
    }
    , function(t, e, n) {
        "use strict";
        var i = n(23)
            , r = n(12)
            , a = n(106)
            , o = n(167)
            , s = n(118)
            , c = n(32)
            , u = n(100)
            , l = Object.assign
            , h = Object.defineProperty;
        t.exports = !l || r((function() {
                if (i && 1 !== l({
                    b: 1
                }, l(h({}, "a", {
                    enumerable: !0,
                    get: function() {
                        h(this, "b", {
                            value: 3,
                            enumerable: !1
                        })
                    }
                }), {
                    b: 2
                })).b)
                    return !0;
                var t = {}
                    , e = {}
                    , n = Symbol()
                    , r = "abcdefghijklmnopqrst";
                return t[n] = 7,
                    r.split("").forEach((function(t) {
                            e[t] = t
                        }
                    )),
                7 != l({}, t)[n] || a(l({}, e)).join("") != r
            }
        )) ? function(t, e) {
                for (var n = c(t), r = arguments.length, l = 1, h = o.f, p = s.f; l < r; )
                    for (var f, d = u(arguments[l++]), m = h ? a(d).concat(h(d)) : a(d), g = m.length, v = 0; v < g; )
                        f = m[v++],
                        i && !p.call(d, f) || (n[f] = d[f]);
                return n
            }
            : l
    }
    , function(t, e, n) {
        function i(t) {
            return function(e) {
                for (var n, i = o(e), c = a(i), u = c.length, l = 0, h = []; l < u; )
                    n = c[l++],
                    r && !s.call(i, n) || h.push(t ? [n, i[n]] : i[n]);
                return h
            }
        }
        var r = n(23)
            , a = n(106)
            , o = n(49)
            , s = n(118).f;
        t.exports = {
            entries: i(!0),
            values: i(!1)
        }
    }
    , function(t, e, n) {
        var i = n(22);
        t.exports = function(t, e, n, r) {
            try {
                return r ? e(i(n)[0], n[1]) : e(n)
            } catch (e) {
                var a = t.return;
                throw void 0 !== a && i(a.call(t)),
                    e
            }
        }
    }
    , function(t, e) {
        t.exports = Object.is || function(t, e) {
            return t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e
        }
    }
    , function(t, e, n) {
        var i = n(21);
        t.exports = function(t) {
            if (!i(t) && null !== t)
                throw TypeError("Can't set " + String(t) + " as a prototype");
            return t
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(47)
            , r = n(21)
            , a = [].slice
            , o = {};
        t.exports = Function.bind || function(t) {
            var e = i(this)
                , n = a.call(arguments, 1)
                , s = function() {
                var i = n.concat(a.call(arguments));
                return this instanceof s ? function(t, e, n) {
                    if (!(e in o)) {
                        for (var i = [], r = 0; r < e; r++)
                            i[r] = "a[" + r + "]";
                        o[e] = Function("C,a", "return new C(" + i.join(",") + ")")
                    }
                    return o[e](t, n)
                }(e, i.length, i) : e.apply(t, i)
            };
            return r(e.prototype) && (s.prototype = e.prototype),
                s
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(78)
            , r = n(32)
            , a = n(208)
            , o = n(170)
            , s = n(26)
            , c = n(88)
            , u = n(110);
        t.exports = function(t, e, n) {
            var l, h, p, f, d, m, g = r(t), v = "function" == typeof this ? this : Array, y = arguments.length, x = 1 < y ? e : void 0, _ = void 0 !== x, b = u(g), M = 0;
            if (_ && (x = i(x, 2 < y ? n : void 0, 2)),
            null == b || v == Array && o(b))
                for (h = new v(l = s(g.length)); M < l; M++)
                    m = _ ? x(g[M], M) : g[M],
                        c(h, M, m);
            else
                for (d = (f = b.call(g)).next,
                         h = new v; !(p = d.call(f)).done; M++)
                    m = _ ? a(f, x, [p.value, M], !0) : p.value,
                        c(h, M, m);
            return h.length = M,
                h
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(32)
            , r = n(77)
            , a = n(26)
            , o = Math.min;
        t.exports = [].copyWithin || function(t, e, n) {
            var s = i(this)
                , c = a(s.length)
                , u = r(t, c)
                , l = r(e, c)
                , h = 2 < arguments.length ? n : void 0
                , p = o((void 0 === h ? c : r(h, c)) - l, c - u)
                , f = 1;
            for (l < u && u < l + p && (f = -1,
                l += p - 1,
                u += p - 1); 0 < p--; )
                l in s ? s[u] = s[l] : delete s[u],
                    u += f,
                    l += f;
            return s
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(86)
            , r = n(26)
            , a = n(78);
        t.exports = function t(e, n, o, s, c, u, l, h) {
            for (var p, f = c, d = 0, m = !!l && a(l, h, 3); d < s; ) {
                if (d in o) {
                    if (p = m ? m(o[d], d, n) : o[d],
                    0 < u && i(p))
                        f = t(e, n, p, r(p.length), f, u - 1) - 1;
                    else {
                        if (9007199254740991 <= f)
                            throw TypeError("Exceed the acceptable array length");
                        e[f] = p
                    }
                    f++
                }
                d++
            }
            return f
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(35).forEach
            , r = n(71)
            , a = n(48)
            , o = r("forEach")
            , s = a("forEach");
        t.exports = o && s ? [].forEach : function(t, e) {
            return i(this, t, 1 < arguments.length ? e : void 0)
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(49)
            , r = n(56)
            , a = n(26)
            , o = n(71)
            , s = n(48)
            , c = Math.min
            , u = [].lastIndexOf
            , l = !!u && 1 / [1].lastIndexOf(1, -0) < 0
            , h = o("lastIndexOf")
            , p = s("indexOf", {
            ACCESSORS: !0,
            1: 0
        })
            , f = l || !h || !p;
        t.exports = f ? function(t, e) {
                if (l)
                    return u.apply(this, arguments) || 0;
                var n = i(this)
                    , o = a(n.length)
                    , s = o - 1;
                for (1 < arguments.length && (s = c(s, r(e))),
                     s < 0 && (s = o + s); 0 <= s; s--)
                    if (s in n && n[s] === t)
                        return s || 0;
                return -1
            }
            : u
    }
    , function(t, e, n) {
        "use strict";
        var i, r, a, o = n(62), s = n(43), c = n(33), u = n(25), l = n(61), h = u("iterator"), p = !1;
        [].keys && ("next"in (a = [].keys()) ? (r = o(o(a))) !== Object.prototype && (i = r) : p = !0),
        null == i && (i = {}),
        l || c(i, h) || s(i, h, (function() {
                return this
            }
        )),
            t.exports = {
                IteratorPrototype: i,
                BUGGY_SAFARI_ITERATORS: p
            }
    }
    , function(t, e, n) {
        var i = n(122);
        t.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(125).charAt
            , r = n(44)
            , a = n(175)
            , o = "String Iterator"
            , s = r.set
            , c = r.getterFor(o);
        a(String, "String", (function(t) {
                s(this, {
                    type: o,
                    string: String(t),
                    index: 0
                })
            }
        ), (function() {
                var t, e = c(this), n = e.string, r = e.index;
                return r >= n.length ? {
                    value: void 0,
                    done: !0
                } : (t = i(n, r),
                    e.index += t.length,
                    {
                        value: t,
                        done: !1
                    })
            }
        ))
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(93).trim
            , a = n(132)
            , o = i.parseInt
            , s = /^[+-]?0[Xx]/
            , c = 8 !== o(a + "08") || 22 !== o(a + "0x16");
        t.exports = c ? function(t, e) {
                var n = r(String(t));
                return o(n, e >>> 0 || (s.test(n) ? 16 : 10))
            }
            : o
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(93).trim
            , a = n(132)
            , o = i.parseFloat
            , s = 1 / o(a + "-0") != -1 / 0;
        t.exports = s ? function(t) {
                var e = r(String(t))
                    , n = o(e);
                return 0 === n && "-" == e.charAt(0) ? -0 : n
            }
            : o
    }
    , function(t, e, n) {
        var i = n(21)
            , r = Math.floor;
        t.exports = function(t) {
            return !i(t) && isFinite(t) && r(t) === t
        }
    }
    , function(t, e, n) {
        var i = n(54);
        t.exports = function(t) {
            if ("number" != typeof t && "Number" != i(t))
                throw TypeError("Incorrect invocation");
            return +t
        }
    }
    , function(t, e) {
        var n = Math.log;
        t.exports = Math.log1p || function(t) {
            return -1e-8 < (t = +t) && t < 1e-8 ? t - t * t / 2 : n(1 + t)
        }
    }
    , function(t, e, n) {
        var i = n(16);
        t.exports = i.Promise
    }
    , function(t, e, n) {
        var i = n(122);
        t.exports = /(iphone|ipod|ipad).*applewebkit/i.test(i)
    }
    , function(t, e, n) {
        var i, r, a, o, s, c, u, l, h = n(16), p = n(38).f, f = n(54), d = n(184).set, m = n(226), g = h.MutationObserver || h.WebKitMutationObserver, v = h.process, y = h.Promise, x = "process" == f(v), _ = p(h, "queueMicrotask"), b = _ && _.value;
        b || (i = function() {
                var t, e;
                for (x && (t = v.domain) && t.exit(); r; ) {
                    e = r.fn,
                        r = r.next;
                    try {
                        e()
                    } catch (t) {
                        throw r ? o() : a = void 0,
                            t
                    }
                }
                a = void 0,
                t && t.enter()
            }
                ,
                o = x ? function() {
                        v.nextTick(i)
                    }
                    : g && !m ? (s = !0,
                            c = document.createTextNode(""),
                            new g(i).observe(c, {
                                characterData: !0
                            }),
                            function() {
                                c.data = s = !s
                            }
                    ) : y && y.resolve ? (u = y.resolve(void 0),
                            l = u.then,
                            function() {
                                l.call(u, i)
                            }
                    ) : function() {
                        d.call(h, i)
                    }
        ),
            t.exports = b || function(t) {
                var e = {
                    fn: t,
                    next: void 0
                };
                a && (a.next = e),
                r || (r = e,
                    o()),
                    a = e
            }
    }
    , function(t, e, n) {
        var i = n(22)
            , r = n(21)
            , a = n(185);
        t.exports = function(t, e) {
            if (i(t),
            r(e) && e.constructor === t)
                return e;
            var n = a.f(t);
            return (0,
                n.resolve)(e),
                n.promise
        }
    }
    , function(t, e) {
        t.exports = function(t) {
            try {
                return {
                    error: !1,
                    value: t()
                }
            } catch (t) {
                return {
                    error: !0,
                    value: t
                }
            }
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(30).f
            , r = n(70)
            , a = n(94)
            , o = n(78)
            , s = n(80)
            , c = n(91)
            , u = n(175)
            , l = n(92)
            , h = n(23)
            , p = n(87).fastKey
            , f = n(44)
            , d = f.set
            , m = f.getterFor;
        t.exports = {
            getConstructor: function(t, e, n, u) {
                function l(t, e, n) {
                    var i, r, a = g(t), o = v(t, e);
                    return o ? o.value = n : (a.last = o = {
                        index: r = p(e, !0),
                        key: e,
                        value: n,
                        previous: i = a.last,
                        next: void 0,
                        removed: !1
                    },
                    a.first || (a.first = o),
                    i && (i.next = o),
                        h ? a.size++ : t.size++,
                    "F" !== r && (a.index[r] = o)),
                        t
                }
                var f = t((function(t, i) {
                        s(t, f, e),
                            d(t, {
                                type: e,
                                index: r(null),
                                first: void 0,
                                last: void 0,
                                size: 0
                            }),
                        h || (t.size = 0),
                        null != i && c(i, t[u], t, n)
                    }
                ))
                    , g = m(e)
                    , v = function(t, e) {
                    var n, i = g(t), r = p(e);
                    if ("F" !== r)
                        return i.index[r];
                    for (n = i.first; n; n = n.next)
                        if (n.key == e)
                            return n
                };
                return a(f.prototype, {
                    clear: function() {
                        for (var t = g(this), e = t.index, n = t.first; n; )
                            n.removed = !0,
                            n.previous && (n.previous = n.previous.next = void 0),
                                delete e[n.index],
                                n = n.next;
                        t.first = t.last = void 0,
                            h ? t.size = 0 : this.size = 0
                    },
                    delete: function(t) {
                        var e = g(this)
                            , n = v(this, t);
                        if (n) {
                            var i = n.next
                                , r = n.previous;
                            delete e.index[n.index],
                                n.removed = !0,
                            r && (r.next = i),
                            i && (i.previous = r),
                            e.first == n && (e.first = i),
                            e.last == n && (e.last = r),
                                h ? e.size-- : this.size--
                        }
                        return !!n
                    },
                    forEach: function(t, e) {
                        for (var n, i = g(this), r = o(t, 1 < arguments.length ? e : void 0, 3); n = n ? n.next : i.first; )
                            for (r(n.value, n.key, this); n && n.removed; )
                                n = n.previous
                    },
                    has: function(t) {
                        return !!v(this, t)
                    }
                }),
                    a(f.prototype, n ? {
                        get: function(t) {
                            var e = v(this, t);
                            return e && e.value
                        },
                        set: function(t, e) {
                            return l(this, 0 === t ? 0 : t, e)
                        }
                    } : {
                        add: function(t) {
                            return l(this, t = 0 === t ? 0 : t, t)
                        }
                    }),
                h && i(f.prototype, "size", {
                    get: function() {
                        return g(this).size
                    }
                }),
                    f
            },
            setStrong: function(t, e, n) {
                var i = e + " Iterator"
                    , r = m(e)
                    , a = m(i);
                u(t, e, (function(t, e) {
                        d(this, {
                            type: i,
                            target: t,
                            state: r(t),
                            kind: e,
                            last: void 0
                        })
                    }
                ), (function() {
                        for (var t = a(this), e = t.kind, n = t.last; n && n.removed; )
                            n = n.previous;
                        return t.target && (t.last = n = n ? n.next : t.state.first) ? "keys" == e ? {
                            value: n.key,
                            done: !1
                        } : "values" == e ? {
                            value: n.value,
                            done: !1
                        } : {
                            value: [n.key, n.value],
                            done: !1
                        } : {
                            value: t.target = void 0,
                            done: !0
                        }
                    }
                ), n ? "entries" : "values", !n, !0),
                    l(e)
            }
        }
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return t.frozen || (t.frozen = new x)
        }
        function r(t, e) {
            return g(t.entries, (function(t) {
                    return t[0] === e
                }
            ))
        }
        var a = n(94)
            , o = n(87).getWeakData
            , s = n(22)
            , c = n(21)
            , u = n(80)
            , l = n(91)
            , h = n(35)
            , p = n(33)
            , f = n(44)
            , d = f.set
            , m = f.getterFor
            , g = h.find
            , v = h.findIndex
            , y = 0
            , x = function() {
            this.entries = []
        };
        x.prototype = {
            get: function(t) {
                var e = r(this, t);
                if (e)
                    return e[1]
            },
            has: function(t) {
                return !!r(this, t)
            },
            set: function(t, e) {
                var n = r(this, t);
                n ? n[1] = e : this.entries.push([t, e])
            },
            delete: function(t) {
                var e = v(this.entries, (function(e) {
                        return e[0] === t
                    }
                ));
                return ~e && this.entries.splice(e, 1),
                    !!~e
            }
        },
            t.exports = {
                getConstructor: function(t, e, n, r) {
                    function h(t, e, n) {
                        var r = g(t)
                            , a = o(s(e), !0);
                        return !0 === a ? i(r).set(e, n) : a[r.id] = n,
                            t
                    }
                    var f = t((function(t, i) {
                            u(t, f, e),
                                d(t, {
                                    type: e,
                                    id: y++,
                                    frozen: void 0
                                }),
                            null != i && l(i, t[r], t, n)
                        }
                    ))
                        , g = m(e);
                    return a(f.prototype, {
                        delete: function(t) {
                            var e = g(this);
                            if (!c(t))
                                return !1;
                            var n = o(t);
                            return !0 === n ? i(e).delete(t) : n && p(n, e.id) && delete n[e.id]
                        },
                        has: function(t) {
                            var e = g(this);
                            if (!c(t))
                                return !1;
                            var n = o(t);
                            return !0 === n ? i(e).has(t) : n && p(n, e.id)
                        }
                    }),
                        a(f.prototype, n ? {
                            get: function(t) {
                                var e = g(this);
                                if (c(t)) {
                                    var n = o(t);
                                    return !0 === n ? i(e).get(t) : n ? n[e.id] : void 0
                                }
                            },
                            set: function(t, e) {
                                return h(this, t, e)
                            }
                        } : {
                            add: function(t) {
                                return h(this, t, !0)
                            }
                        }),
                        f
                }
            }
    }
    , function(t, e, n) {
        var i = n(56)
            , r = n(26);
        t.exports = function(t) {
            if (void 0 === t)
                return 0;
            var e = i(t)
                , n = r(e);
            if (e !== n)
                throw RangeError("Wrong length or index");
            return n
        }
    }
    , function(t, e, n) {
        var i = n(586);
        t.exports = function(t, e) {
            var n = i(t);
            if (n % e)
                throw RangeError("Wrong offset");
            return n
        }
    }
    , function(t, e, n) {
        var i = n(32)
            , r = n(26)
            , a = n(110)
            , o = n(170)
            , s = n(78)
            , c = n(27).aTypedArrayConstructor;
        t.exports = function(t, e, n) {
            var u, l, h, p, f, d, m = i(t), g = arguments.length, v = 1 < g ? e : void 0, y = void 0 !== v, x = a(m);
            if (null != x && !o(x))
                for (d = (f = x.call(m)).next,
                         m = []; !(p = d.call(f)).done; )
                    m.push(p.value);
            for (y && 2 < g && (v = s(v, n, 2)),
                     l = r(m.length),
                     h = new (c(this))(l),
                     u = 0; u < l; u++)
                h[u] = y ? v(m[u], u) : m[u];
            return h
        }
    }
    , function(t, e) {
        t.exports = {
            CSSRuleList: 0,
            CSSStyleDeclaration: 0,
            CSSValueList: 0,
            ClientRectList: 0,
            DOMRectList: 0,
            DOMStringList: 0,
            DOMTokenList: 1,
            DataTransferItemList: 0,
            FileList: 0,
            HTMLAllCollection: 0,
            HTMLCollection: 0,
            HTMLFormElement: 0,
            HTMLSelectElement: 0,
            MediaList: 0,
            MimeTypeArray: 0,
            NamedNodeMap: 0,
            NodeList: 1,
            PaintRequestList: 0,
            Plugin: 0,
            PluginArray: 0,
            SVGLengthList: 0,
            SVGNumberList: 0,
            SVGPathSegList: 0,
            SVGPointList: 0,
            SVGStringList: 0,
            SVGTransformList: 0,
            SourceBufferList: 0,
            StyleSheetList: 0,
            TextTrackCueList: 0,
            TextTrackList: 0,
            TouchList: 0
        }
    }
    , function(t, e, n) {
        var i = n(12)
            , r = n(25)
            , a = n(61)
            , o = r("iterator");
        t.exports = !i((function() {
                var t = new URL("b?a=1&b=2&c=3","http://a")
                    , e = t.searchParams
                    , n = "";
                return t.pathname = "c%20d",
                    e.forEach((function(t, i) {
                            e.delete("b"),
                                n += i + t
                        }
                    )),
                a && !t.toJSON || !e.sort || "http://a/c%20d?a=1&c=3" !== t.href || "3" !== e.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !e[o] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://тест").host || "#%D0%B1" !== new URL("http://a#б").hash || "a1c3" !== n || "x" !== new URL("http://x",void 0).host
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            try {
                return decodeURIComponent(t)
            } catch (e) {
                return t
            }
        }
        function r(t) {
            var e, n = t.replace(F, " "), r = 4;
            try {
                return decodeURIComponent(n)
            } catch (t) {
                for (; r; )
                    n = n.replace((e = r--,
                    B[e - 1] || (B[e - 1] = RegExp("((?:%[\\da-f]{2}){" + e + "})", "gi"))), i);
                return n
            }
        }
        function a(t) {
            return G[t]
        }
        function o(t) {
            return encodeURIComponent(t).replace(U, a)
        }
        function s(t, e) {
            if (e)
                for (var n, i, a = e.split("&"), o = 0; o < a.length; )
                    (n = a[o++]).length && (i = n.split("="),
                        t.push({
                            key: r(i.shift()),
                            value: r(i.join("="))
                        }))
        }
        function c(t) {
            this.entries.length = 0,
                s(this.entries, t)
        }
        function u(t, e) {
            if (t < e)
                throw TypeError("Not enough arguments")
        }
        n(124);
        var l = n(3)
            , h = n(55)
            , p = n(236)
            , f = n(39)
            , d = n(94)
            , m = n(65)
            , g = n(176)
            , v = n(44)
            , y = n(80)
            , x = n(33)
            , _ = n(78)
            , b = n(111)
            , M = n(22)
            , w = n(21)
            , S = n(70)
            , A = n(76)
            , T = n(641)
            , L = n(110)
            , E = n(25)
            , P = h("fetch")
            , C = h("Headers")
            , O = E("iterator")
            , I = "URLSearchParams"
            , N = I + "Iterator"
            , D = v.set
            , R = v.getterFor(I)
            , z = v.getterFor(N)
            , F = /\+/g
            , B = Array(4)
            , U = /[!'()~]|%20/g
            , G = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+"
        }
            , k = g((function(t, e) {
                D(this, {
                    type: N,
                    iterator: T(R(t).entries),
                    kind: e
                })
            }
        ), "Iterator", (function() {
                var t = z(this)
                    , e = t.kind
                    , n = t.iterator.next()
                    , i = n.value;
                return n.done || (n.value = "keys" === e ? i.key : "values" === e ? i.value : [i.key, i.value]),
                    n
            }
        ))
            , j = function(t) {
            y(this, j, I);
            var e, n, i, r, a, o, u, l, h, p = 0 < arguments.length ? t : void 0, f = [];
            if (D(this, {
                type: I,
                entries: f,
                updateURL: function() {},
                updateSearchParams: c
            }),
            void 0 !== p)
                if (w(p))
                    if ("function" == typeof (e = L(p)))
                        for (i = (n = e.call(p)).next; !(r = i.call(n)).done; ) {
                            if ((u = (o = (a = T(M(r.value))).next).call(a)).done || (l = o.call(a)).done || !o.call(a).done)
                                throw TypeError("Expected sequence with length 2");
                            f.push({
                                key: u.value + "",
                                value: l.value + ""
                            })
                        }
                    else
                        for (h in p)
                            x(p, h) && f.push({
                                key: h,
                                value: p[h] + ""
                            });
                else
                    s(f, "string" == typeof p ? "?" === p.charAt(0) ? p.slice(1) : p : p + "")
        }
            , V = j.prototype;
        d(V, {
            append: function(t, e) {
                u(arguments.length, 2);
                var n = R(this);
                n.entries.push({
                    key: t + "",
                    value: e + ""
                }),
                    n.updateURL()
            },
            delete: function(t) {
                u(arguments.length, 1);
                for (var e = R(this), n = e.entries, i = t + "", r = 0; r < n.length; )
                    n[r].key === i ? n.splice(r, 1) : r++;
                e.updateURL()
            },
            get: function(t) {
                u(arguments.length, 1);
                for (var e = R(this).entries, n = t + "", i = 0; i < e.length; i++)
                    if (e[i].key === n)
                        return e[i].value;
                return null
            },
            getAll: function(t) {
                u(arguments.length, 1);
                for (var e = R(this).entries, n = t + "", i = [], r = 0; r < e.length; r++)
                    e[r].key === n && i.push(e[r].value);
                return i
            },
            has: function(t) {
                u(arguments.length, 1);
                for (var e = R(this).entries, n = t + "", i = 0; i < e.length; )
                    if (e[i++].key === n)
                        return !0;
                return !1
            },
            set: function(t, e) {
                u(arguments.length, 1);
                for (var n, i = R(this), r = i.entries, a = !1, o = t + "", s = e + "", c = 0; c < r.length; c++)
                    (n = r[c]).key === o && (a ? r.splice(c--, 1) : (a = !0,
                        n.value = s));
                a || r.push({
                    key: o,
                    value: s
                }),
                    i.updateURL()
            },
            sort: function() {
                var t, e, n, i = R(this), r = i.entries, a = r.slice();
                for (n = r.length = 0; n < a.length; n++) {
                    for (t = a[n],
                             e = 0; e < n; e++)
                        if (r[e].key > t.key) {
                            r.splice(e, 0, t);
                            break
                        }
                    e === n && r.push(t)
                }
                i.updateURL()
            },
            forEach: function(t, e) {
                for (var n, i = R(this).entries, r = _(t, 1 < arguments.length ? e : void 0, 3), a = 0; a < i.length; )
                    r((n = i[a++]).value, n.key, this)
            },
            keys: function() {
                return new k(this,"keys")
            },
            values: function() {
                return new k(this,"values")
            },
            entries: function() {
                return new k(this,"entries")
            }
        }, {
            enumerable: !0
        }),
            f(V, O, V.entries),
            f(V, "toString", (function() {
                    for (var t, e = R(this).entries, n = [], i = 0; i < e.length; )
                        t = e[i++],
                            n.push(o(t.key) + "=" + o(t.value));
                    return n.join("&")
                }
            ), {
                enumerable: !0
            }),
            m(j, I),
            l({
                global: !0,
                forced: !p
            }, {
                URLSearchParams: j
            }),
        p || "function" != typeof P || "function" != typeof C || l({
            global: !0,
            enumerable: !0,
            forced: !0
        }, {
            fetch: function(t, e) {
                var n, i, r, a = [t];
                return 1 < arguments.length && (w(n = e) && (i = n.body,
                b(i) === I && ((r = n.headers ? new C(n.headers) : new C).has("content-type") || r.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"),
                    n = S(n, {
                        body: A(0, String(i)),
                        headers: A(0, r)
                    }))),
                    a.push(n)),
                    P.apply(this, a)
            }
        }),
            t.exports = {
                URLSearchParams: j,
                getState: R
            }
    }
    , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
        "use strict";
        n.r(e),
            n(419),
            n(643),
            n(644),
            n(645),
            n(646),
            n(647),
            n(648),
            n(649),
            n(650),
            n(651),
            n(652),
            n(653),
            n(654),
            n(655),
            n(656),
            n(657),
            n(658),
            n(659),
            n(660),
            n(661),
            n(662),
            n(663),
            n(664),
            n(665),
            n(666),
            n(667),
            n(668),
            n(669),
            n(670),
            n(671),
            n(672),
            n(673),
            n(674),
            n(675),
            window.THREE = n(676)
    }
    , function(t, e, n) {
        n(420),
            n(633);
        var i = n(103);
        t.exports = i
    }
    , function(t, e, n) {
        n(421),
            n(422),
            n(423),
            n(424),
            n(425),
            n(426),
            n(427),
            n(428),
            n(429),
            n(430),
            n(431),
            n(432),
            n(433),
            n(434),
            n(435),
            n(436),
            n(437),
            n(438),
            n(439),
            n(440),
            n(441),
            n(442),
            n(443),
            n(444),
            n(445),
            n(446),
            n(447),
            n(448),
            n(449),
            n(450),
            n(451),
            n(452),
            n(453),
            n(454),
            n(455),
            n(456),
            n(458),
            n(459),
            n(460),
            n(461),
            n(462),
            n(463),
            n(464),
            n(465),
            n(466),
            n(467),
            n(468),
            n(469),
            n(470),
            n(471),
            n(472),
            n(473),
            n(474),
            n(475),
            n(476),
            n(477),
            n(478),
            n(479),
            n(480),
            n(481),
            n(482),
            n(483),
            n(484),
            n(485),
            n(486),
            n(487),
            n(488),
            n(489),
            n(490),
            n(491),
            n(492),
            n(493),
            n(124),
            n(494),
            n(495),
            n(496),
            n(497),
            n(498),
            n(499),
            n(500),
            n(501),
            n(502),
            n(503),
            n(504),
            n(505),
            n(506),
            n(507),
            n(508),
            n(509),
            n(510),
            n(219),
            n(511),
            n(512),
            n(513),
            n(514),
            n(515),
            n(516),
            n(517),
            n(518),
            n(519),
            n(520),
        n(521),
        n(522),
        n(523),
        n(524),
        n(179),
        n(525),
        n(526),
        n(527),
        n(528),
        n(529),
        n(530),
        n(531),
        n(532),
        n(533),
        n(535),
        n(536),
        n(537),
        n(538),
        n(539),
        n(540),
        n(541),
        n(542),
        n(543),
        n(544),
        n(545),
        n(546),
        n(547),
        n(548),
        n(549),
        n(550),
        n(551),
        n(553),
        n(554),
        n(555),
        n(556),
        n(557),
        n(558),
        n(559),
        n(560),
        n(561),
        n(562),
        n(563),
        n(564),
        n(565),
        n(567),
        n(568),
        n(570),
        n(571),
        n(572),
        n(574),
        n(575),
        n(576),
        n(577),
        n(578),
        n(579),
        n(580),
        n(582),
        n(583),
        n(584),
        n(585),
        n(587),
        n(588),
        n(589),
        n(590),
        n(591),
        n(592),
        n(593),
        n(594),
        n(595),
        n(596),
        n(597),
        n(598),
        n(599),
        n(600),
        n(601),
        n(602),
        n(603),
        n(604),
        n(605),
        n(606),
        n(607),
        n(608),
        n(609),
        n(610),
        n(611),
        n(612),
        n(613),
        n(614),
        n(615),
        n(616),
        n(617),
        n(618),
        n(619),
        n(620),
        n(621),
        n(622),
        n(623),
        n(624),
        n(625),
        n(626),
        n(627),
        n(628),
        n(629),
        n(630),
        n(631),
        n(632);
        var i = n(103);
        t.exports = i
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t, e) {
            var n = it[t] = S(K[q]);
            return Y(n, {
                type: H,
                tag: t,
                description: e
            }),
            p || (n.description = e),
                n
        }
        function a(t, e) {
            x(t);
            var n = b(e)
                , i = A(n).concat(dt(n));
            return V(i, (function(e) {
                    p && !ft.call(n, e) || pt(t, e, n[e])
                }
            )),
                t
        }
        function o(t, e) {
            var n = b(t)
                , i = M(e, !0);
            if (n !== J || !g(it, i) || g(rt, i)) {
                var r = $(n, i);
                return !r || !g(it, i) || g(n, W) && n[W][i] || (r.enumerable = !0),
                    r
            }
        }
        function s(t) {
            var e = et(b(t))
                , n = [];
            return V(e, (function(t) {
                    g(it, t) || g(z, t) || n.push(t)
                }
            )),
                n
        }
        var c = n(3)
            , u = n(16)
            , l = n(55)
            , h = n(61)
            , p = n(23)
            , f = n(168)
            , d = n(202)
            , m = n(12)
            , g = n(33)
            , v = n(86)
            , y = n(21)
            , x = n(22)
            , _ = n(32)
            , b = n(49)
            , M = n(60)
            , w = n(76)
            , S = n(70)
            , A = n(106)
            , T = n(85)
            , L = n(204)
            , E = n(167)
            , P = n(38)
            , C = n(30)
            , O = n(118)
            , I = n(43)
            , N = n(39)
            , D = n(164)
            , R = n(119)
            , z = n(102)
            , F = n(101)
            , B = n(25)
            , U = n(205)
            , G = n(46)
            , k = n(65)
            , j = n(44)
            , V = n(35).forEach
            , W = R("hidden")
            , H = "Symbol"
            , q = "prototype"
            , X = B("toPrimitive")
            , Y = j.set
            , Z = j.getterFor(H)
            , J = Object[q]
            , K = u.Symbol
            , Q = l("JSON", "stringify")
            , $ = P.f
            , tt = C.f
            , et = L.f
            , nt = O.f
            , it = D("symbols")
            , rt = D("op-symbols")
            , at = D("string-to-symbol-registry")
            , ot = D("symbol-to-string-registry")
            , st = D("wks")
            , ct = u.QObject
            , ut = !ct || !ct[q] || !ct[q].findChild
            , lt = p && m((function() {
                return 7 != S(tt({}, "a", {
                    get: function() {
                        return tt(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            }
        )) ? function(t, e, n) {
                var i = $(J, e);
                i && delete J[e],
                    tt(t, e, n),
                i && t !== J && tt(J, e, i)
            }
            : tt
            , ht = d ? function(t) {
                return "symbol" == i(t)
            }
            : function(t) {
                return Object(t)instanceof K
            }
            , pt = function(t, e, n) {
            t === J && pt(rt, e, n),
                x(t);
            var i = M(e, !0);
            return x(n),
                g(it, i) ? (n.enumerable ? (g(t, W) && t[W][i] && (t[W][i] = !1),
                    n = S(n, {
                        enumerable: w(0, !1)
                    })) : (g(t, W) || tt(t, W, w(1, {})),
                    t[W][i] = !0),
                    lt(t, i, n)) : tt(t, i, n)
        }
            , ft = function(t) {
            var e = M(t, !0)
                , n = nt.call(this, e);
            return !(this === J && g(it, e) && !g(rt, e)) && (!(n || !g(this, e) || !g(it, e) || g(this, W) && this[W][e]) || n)
        }
            , dt = function(t) {
            var e = t === J
                , n = et(e ? rt : b(t))
                , i = [];
            return V(n, (function(t) {
                    !g(it, t) || e && !g(J, t) || i.push(it[t])
                }
            )),
                i
        };
        f || (N((K = function(t) {
                if (this instanceof K)
                    throw TypeError("Symbol is not a constructor");
                var e = arguments.length && void 0 !== t ? String(t) : void 0
                    , n = F(e);
                return p && ut && lt(J, n, {
                    configurable: !0,
                    set: function t(e) {
                        this === J && t.call(rt, e),
                        g(this, W) && g(this[W], n) && (this[W][n] = !1),
                            lt(this, n, w(1, e))
                    }
                }),
                    r(n, e)
            }
        )[q], "toString", (function() {
                return Z(this).tag
            }
        )),
            N(K, "withoutSetter", (function(t) {
                    return r(F(t), t)
                }
            )),
            O.f = ft,
            C.f = pt,
            P.f = o,
            T.f = L.f = s,
            E.f = dt,
            U.f = function(t) {
                return r(B(t), t)
            }
            ,
        p && (tt(K[q], "description", {
            configurable: !0,
            get: function() {
                return Z(this).description
            }
        }),
        h || N(J, "propertyIsEnumerable", ft, {
            unsafe: !0
        }))),
            c({
                global: !0,
                wrap: !0,
                forced: !f,
                sham: !f
            }, {
                Symbol: K
            }),
            V(A(st), (function(t) {
                    G(t)
                }
            )),
            c({
                target: H,
                stat: !0,
                forced: !f
            }, {
                for: function(t) {
                    var e = String(t);
                    if (g(at, e))
                        return at[e];
                    var n = K(e);
                    return at[e] = n,
                        ot[n] = e,
                        n
                },
                keyFor: function(t) {
                    if (!ht(t))
                        throw TypeError(t + " is not a symbol");
                    if (g(ot, t))
                        return ot[t]
                },
                useSetter: function() {
                    ut = !0
                },
                useSimple: function() {
                    ut = !1
                }
            }),
            c({
                target: "Object",
                stat: !0,
                forced: !f,
                sham: !p
            }, {
                create: function(t, e) {
                    return void 0 === e ? S(t) : a(S(t), e)
                },
                defineProperty: pt,
                defineProperties: a,
                getOwnPropertyDescriptor: o
            }),
            c({
                target: "Object",
                stat: !0,
                forced: !f
            }, {
                getOwnPropertyNames: s,
                getOwnPropertySymbols: dt
            }),
            c({
                target: "Object",
                stat: !0,
                forced: m((function() {
                        E.f(1)
                    }
                ))
            }, {
                getOwnPropertySymbols: function(t) {
                    return E.f(_(t))
                }
            }),
        Q && c({
            target: "JSON",
            stat: !0,
            forced: !f || m((function() {
                    var t = K();
                    return "[null]" != Q([t]) || "{}" != Q({
                        a: t
                    }) || "{}" != Q(Object(t))
                }
            ))
        }, {
            stringify: function(t, e, n) {
                for (var i, r = [t], a = 1; a < arguments.length; )
                    r.push(arguments[a++]);
                if ((y(i = e) || void 0 !== t) && !ht(t))
                    return v(e) || (e = function(t, e) {
                            if ("function" == typeof i && (e = i.call(this, t, e)),
                                !ht(e))
                                return e
                        }
                    ),
                        r[1] = e,
                        Q.apply(null, r)
            }
        }),
        K[q][X] || I(K[q], X, K[q].valueOf),
            k(K, H),
            z[W] = !0
    }
    , function(t, e, n) {
        n(46)("asyncIterator")
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(23)
            , a = n(16)
            , o = n(33)
            , s = n(21)
            , c = n(30).f
            , u = n(200)
            , l = a.Symbol;
        if (r && "function" == typeof l && (!("description"in l.prototype) || void 0 !== l().description)) {
            var h = {}
                , p = function(t) {
                var e = arguments.length < 1 || void 0 === t ? void 0 : String(t)
                    , n = this instanceof p ? new l(e) : void 0 === e ? l() : l(e);
                return "" === e && (h[n] = !0),
                    n
            };
            u(p, l);
            var f = p.prototype = l.prototype;
            f.constructor = p;
            var d = f.toString
                , m = "Symbol(test)" == String(l("test"))
                , g = /^Symbol\((.*)\)[^)]+$/;
            c(f, "description", {
                configurable: !0,
                get: function() {
                    var t = s(this) ? this.valueOf() : this
                        , e = d.call(t);
                    if (o(h, t))
                        return "";
                    var n = m ? e.slice(7, -1) : e.replace(g, "$1");
                    return "" === n ? void 0 : n
                }
            }),
                i({
                    global: !0,
                    forced: !0
                }, {
                    Symbol: p
                })
        }
    }
    , function(t, e, n) {
        n(46)("hasInstance")
    }
    , function(t, e, n) {
        n(46)("isConcatSpreadable")
    }
    , function(t, e, n) {
        n(46)("iterator")
    }
    , function(t, e, n) {
        n(46)("match")
    }
    , function(t, e, n) {
        n(46)("matchAll")
    }
    , function(t, e, n) {
        n(46)("replace")
    }
    , function(t, e, n) {
        n(46)("search")
    }
    , function(t, e, n) {
        n(46)("species")
    }
    , function(t, e, n) {
        n(46)("split")
    }
    , function(t, e, n) {
        n(46)("toPrimitive")
    }
    , function(t, e, n) {
        n(46)("toStringTag")
    }
    , function(t, e, n) {
        n(46)("unscopables")
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(206);
        i({
            target: "Object",
            stat: !0,
            forced: Object.assign !== r
        }, {
            assign: r
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Object",
            stat: !0,
            sham: !n(23)
        }, {
            create: n(70)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(23);
        i({
            target: "Object",
            stat: !0,
            forced: !r,
            sham: !r
        }, {
            defineProperty: n(30).f
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(23);
        i({
            target: "Object",
            stat: !0,
            forced: !r,
            sham: !r
        }, {
            defineProperties: n(169)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(207).entries;
        i({
            target: "Object",
            stat: !0
        }, {
            entries: function(t) {
                return r(t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(108)
            , a = n(12)
            , o = n(21)
            , s = n(87).onFreeze
            , c = Object.freeze;
        i({
            target: "Object",
            stat: !0,
            forced: a((function() {
                    c(1)
                }
            )),
            sham: !r
        }, {
            freeze: function(t) {
                return c && o(t) ? c(s(t)) : t
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(91)
            , a = n(88);
        i({
            target: "Object",
            stat: !0
        }, {
            fromEntries: function(t) {
                var e = {};
                return r(t, (function(t, n) {
                        a(e, t, n)
                    }
                ), void 0, !0),
                    e
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(49)
            , o = n(38).f
            , s = n(23)
            , c = r((function() {
                o(1)
            }
        ));
        i({
            target: "Object",
            stat: !0,
            forced: !s || c,
            sham: !s
        }, {
            getOwnPropertyDescriptor: function(t, e) {
                return o(a(t), e)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(23)
            , a = n(165)
            , o = n(49)
            , s = n(38)
            , c = n(88);
        i({
            target: "Object",
            stat: !0,
            sham: !r
        }, {
            getOwnPropertyDescriptors: function(t) {
                for (var e, n, i = o(t), r = s.f, u = a(i), l = {}, h = 0; u.length > h; )
                    void 0 !== (n = r(i, e = u[h++])) && c(l, e, n);
                return l
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(204).f;
        i({
            target: "Object",
            stat: !0,
            forced: r((function() {
                    return !Object.getOwnPropertyNames(1)
                }
            ))
        }, {
            getOwnPropertyNames: a
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(32)
            , o = n(62)
            , s = n(172);
        i({
            target: "Object",
            stat: !0,
            forced: r((function() {
                    o(1)
                }
            )),
            sham: !s
        }, {
            getPrototypeOf: function(t) {
                return o(a(t))
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Object",
            stat: !0
        }, {
            is: n(209)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(21)
            , o = Object.isExtensible;
        i({
            target: "Object",
            stat: !0,
            forced: r((function() {
                    o(1)
                }
            ))
        }, {
            isExtensible: function(t) {
                return !!a(t) && (!o || o(t))
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(21)
            , o = Object.isFrozen;
        i({
            target: "Object",
            stat: !0,
            forced: r((function() {
                    o(1)
                }
            ))
        }, {
            isFrozen: function(t) {
                return !a(t) || !!o && o(t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(21)
            , o = Object.isSealed;
        i({
            target: "Object",
            stat: !0,
            forced: r((function() {
                    o(1)
                }
            ))
        }, {
            isSealed: function(t) {
                return !a(t) || !!o && o(t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(32)
            , a = n(106);
        i({
            target: "Object",
            stat: !0,
            forced: n(12)((function() {
                    a(1)
                }
            ))
        }, {
            keys: function(t) {
                return a(r(t))
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(21)
            , a = n(87).onFreeze
            , o = n(108)
            , s = n(12)
            , c = Object.preventExtensions;
        i({
            target: "Object",
            stat: !0,
            forced: s((function() {
                    c(1)
                }
            )),
            sham: !o
        }, {
            preventExtensions: function(t) {
                return c && r(t) ? c(a(t)) : t
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(21)
            , a = n(87).onFreeze
            , o = n(108)
            , s = n(12)
            , c = Object.seal;
        i({
            target: "Object",
            stat: !0,
            forced: s((function() {
                    c(1)
                }
            )),
            sham: !o
        }, {
            seal: function(t) {
                return c && r(t) ? c(a(t)) : t
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Object",
            stat: !0
        }, {
            setPrototypeOf: n(89)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(207).values;
        i({
            target: "Object",
            stat: !0
        }, {
            values: function(t) {
                return r(t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(171)
            , r = n(39)
            , a = n(457);
        i || r(Object.prototype, "toString", a, {
            unsafe: !0
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(171)
            , r = n(111);
        t.exports = i ? {}.toString : function() {
            return "[object " + r(this) + "]"
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(23)
            , a = n(120)
            , o = n(32)
            , s = n(47)
            , c = n(30);
        r && i({
            target: "Object",
            proto: !0,
            forced: a
        }, {
            __defineGetter__: function(t, e) {
                c.f(o(this), t, {
                    get: s(e),
                    enumerable: !0,
                    configurable: !0
                })
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(23)
            , a = n(120)
            , o = n(32)
            , s = n(47)
            , c = n(30);
        r && i({
            target: "Object",
            proto: !0,
            forced: a
        }, {
            __defineSetter__: function(t, e) {
                c.f(o(this), t, {
                    set: s(e),
                    enumerable: !0,
                    configurable: !0
                })
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(23)
            , a = n(120)
            , o = n(32)
            , s = n(60)
            , c = n(62)
            , u = n(38).f;
        r && i({
            target: "Object",
            proto: !0,
            forced: a
        }, {
            __lookupGetter__: function(t) {
                var e, n = o(this), i = s(t, !0);
                do {
                    if (e = u(n, i))
                        return e.get
                } while (n = c(n))
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(23)
            , a = n(120)
            , o = n(32)
            , s = n(60)
            , c = n(62)
            , u = n(38).f;
        r && i({
            target: "Object",
            proto: !0,
            forced: a
        }, {
            __lookupSetter__: function(t) {
                var e, n = o(this), i = s(t, !0);
                do {
                    if (e = u(n, i))
                        return e.set
                } while (n = c(n))
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Function",
            proto: !0
        }, {
            bind: n(211)
        })
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(30).f
            , a = Function.prototype
            , o = a.toString
            , s = /^\s*function ([^ (]*)/;
        !i || "name"in a || r(a, "name", {
            configurable: !0,
            get: function() {
                try {
                    return o.call(this).match(s)[1]
                } catch (t) {
                    return ""
                }
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(21)
            , r = n(30)
            , a = n(62)
            , o = n(25)("hasInstance")
            , s = Function.prototype;
        o in s || r.f(s, o, {
            value: function(t) {
                if ("function" != typeof this || !i(t))
                    return !1;
                if (!i(this.prototype))
                    return t instanceof this;
                for (; t = a(t); )
                    if (this.prototype === t)
                        return !0;
                return !1
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            global: !0
        }, {
            globalThis: n(16)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(212);
        i({
            target: "Array",
            stat: !0,
            forced: !n(121)((function(t) {
                    Array.from(t)
                }
            ))
        }, {
            from: r
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Array",
            stat: !0
        }, {
            isArray: n(86)
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(12)
            , a = n(88);
        i({
            target: "Array",
            stat: !0,
            forced: r((function() {
                    function t() {}
                    return !(Array.of.call(t)instanceof t)
                }
            ))
        }, {
            of: function() {
                for (var t = 0, e = arguments.length, n = new ("function" == typeof this ? this : Array)(e); t < e; )
                    a(n, t, arguments[t++]);
                return n.length = e,
                    n
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            if (s(t)) {
                var e = t[m];
                return void 0 !== e ? !!e : o(t)
            }
        }
        var r = n(3)
            , a = n(12)
            , o = n(86)
            , s = n(21)
            , c = n(32)
            , u = n(26)
            , l = n(88)
            , h = n(107)
            , p = n(112)
            , f = n(25)
            , d = n(173)
            , m = f("isConcatSpreadable")
            , g = 9007199254740991
            , v = "Maximum allowed index exceeded"
            , y = 51 <= d || !a((function() {
                var t = [];
                return t[m] = !1,
                t.concat()[0] !== t
            }
        ))
            , x = p("concat");
        r({
            target: "Array",
            proto: !0,
            forced: !y || !x
        }, {
            concat: function(t) {
                var e, n, r, a, o, s = c(this), p = h(s, 0), f = 0;
                for (e = -1,
                         r = arguments.length; e < r; e++)
                    if (i(o = -1 === e ? s : arguments[e])) {
                        if (a = u(o.length),
                        g < f + a)
                            throw TypeError(v);
                        for (n = 0; n < a; n++,
                            f++)
                            n in o && l(p, f, o[n])
                    } else {
                        if (g <= f)
                            throw TypeError(v);
                        l(p, f++, o)
                    }
                return p.length = f,
                    p
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(213)
            , a = n(79);
        i({
            target: "Array",
            proto: !0
        }, {
            copyWithin: r
        }),
            a("copyWithin")
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).every
            , a = n(71)
            , o = n(48)
            , s = a("every")
            , c = o("every");
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            every: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(174)
            , a = n(79);
        i({
            target: "Array",
            proto: !0
        }, {
            fill: r
        }),
            a("fill")
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).filter
            , a = n(112)
            , o = n(48)
            , s = a("filter")
            , c = o("filter");
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            filter: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).find
            , a = n(79)
            , o = n(48)
            , s = "find"
            , c = !0
            , u = o(s);
        s in [] && Array(1)[s]((function() {
                c = !1
            }
        )),
            i({
                target: "Array",
                proto: !0,
                forced: c || !u
            }, {
                find: function(t, e) {
                    return r(this, t, 1 < arguments.length ? e : void 0)
                }
            }),
            a(s)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).findIndex
            , a = n(79)
            , o = n(48)
            , s = "findIndex"
            , c = !0
            , u = o(s);
        s in [] && Array(1)[s]((function() {
                c = !1
            }
        )),
            i({
                target: "Array",
                proto: !0,
                forced: c || !u
            }, {
                findIndex: function(t, e) {
                    return r(this, t, 1 < arguments.length ? e : void 0)
                }
            }),
            a(s)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(214)
            , a = n(32)
            , o = n(26)
            , s = n(56)
            , c = n(107);
        i({
            target: "Array",
            proto: !0
        }, {
            flat: function(t) {
                var e = arguments.length ? t : void 0
                    , n = a(this)
                    , i = o(n.length)
                    , u = c(n, 0);
                return u.length = r(u, n, n, i, 0, void 0 === e ? 1 : s(e)),
                    u
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(214)
            , a = n(32)
            , o = n(26)
            , s = n(47)
            , c = n(107);
        i({
            target: "Array",
            proto: !0
        }, {
            flatMap: function(t, e) {
                var n, i = a(this), u = o(i.length);
                return s(t),
                    (n = c(i, 0)).length = r(n, i, i, u, 0, 1, t, 1 < arguments.length ? e : void 0),
                    n
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(215);
        i({
            target: "Array",
            proto: !0,
            forced: [].forEach != r
        }, {
            forEach: r
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(104).includes
            , a = n(79);
        i({
            target: "Array",
            proto: !0,
            forced: !n(48)("indexOf", {
                ACCESSORS: !0,
                1: 0
            })
        }, {
            includes: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        }),
            a("includes")
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(104).indexOf
            , a = n(71)
            , o = n(48)
            , s = [].indexOf
            , c = !!s && 1 / [1].indexOf(1, -0) < 0
            , u = a("indexOf")
            , l = o("indexOf", {
            ACCESSORS: !0,
            1: 0
        });
        i({
            target: "Array",
            proto: !0,
            forced: c || !u || !l
        }, {
            indexOf: function(t, e) {
                return c ? s.apply(this, arguments) || 0 : r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(100)
            , a = n(49)
            , o = n(71)
            , s = [].join
            , c = r != Object
            , u = o("join", ",");
        i({
            target: "Array",
            proto: !0,
            forced: c || !u
        }, {
            join: function(t) {
                return s.call(a(this), void 0 === t ? "," : t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(216);
        i({
            target: "Array",
            proto: !0,
            forced: r !== [].lastIndexOf
        }, {
            lastIndexOf: r
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).map
            , a = n(112)
            , o = n(48)
            , s = a("map")
            , c = o("map");
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            map: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(123).left
            , a = n(71)
            , o = n(48)
            , s = a("reduce")
            , c = o("reduce", {
            1: 0
        });
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            reduce: function(t, e) {
                return r(this, t, arguments.length, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(123).right
            , a = n(71)
            , o = n(48)
            , s = a("reduceRight")
            , c = o("reduce", {
            1: 0
        });
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            reduceRight: function(t, e) {
                return r(this, t, arguments.length, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(86)
            , a = [].reverse
            , o = [1, 2];
        i({
            target: "Array",
            proto: !0,
            forced: String(o) === String(o.reverse())
        }, {
            reverse: function() {
                return r(this) && (this.length = this.length),
                    a.call(this)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(21)
            , a = n(86)
            , o = n(77)
            , s = n(26)
            , c = n(49)
            , u = n(88)
            , l = n(25)
            , h = n(112)
            , p = n(48)
            , f = h("slice")
            , d = p("slice", {
            ACCESSORS: !0,
            0: 0,
            1: 2
        })
            , m = l("species")
            , g = [].slice
            , v = Math.max;
        i({
            target: "Array",
            proto: !0,
            forced: !f || !d
        }, {
            slice: function(t, e) {
                var n, i, l, h = c(this), p = s(h.length), f = o(t, p), d = o(void 0 === e ? p : e, p);
                if (a(h) && (("function" == typeof (n = h.constructor) && (n === Array || a(n.prototype)) || r(n) && null === (n = n[m])) && (n = void 0),
                n === Array || void 0 === n))
                    return g.call(h, f, d);
                for (i = new (void 0 === n ? Array : n)(v(d - f, 0)),
                         l = 0; f < d; f++,
                         l++)
                    f in h && u(i, l, h[f]);
                return i.length = l,
                    i
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(35).some
            , a = n(71)
            , o = n(48)
            , s = a("some")
            , c = o("some");
        i({
            target: "Array",
            proto: !0,
            forced: !s || !c
        }, {
            some: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(47)
            , a = n(32)
            , o = n(12)
            , s = n(71)
            , c = []
            , u = c.sort
            , l = o((function() {
                c.sort(void 0)
            }
        ))
            , h = o((function() {
                c.sort(null)
            }
        ))
            , p = s("sort");
        i({
            target: "Array",
            proto: !0,
            forced: l || !h || !p
        }, {
            sort: function(t) {
                return void 0 === t ? u.call(a(this)) : u.call(a(this), r(t))
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(77)
            , a = n(56)
            , o = n(26)
            , s = n(32)
            , c = n(107)
            , u = n(88)
            , l = n(112)
            , h = n(48)
            , p = l("splice")
            , f = h("splice", {
            ACCESSORS: !0,
            0: 0,
            1: 2
        })
            , d = Math.max
            , m = Math.min;
        i({
            target: "Array",
            proto: !0,
            forced: !p || !f
        }, {
            splice: function(t, e) {
                var n, i, l, h, p, f, g = s(this), v = o(g.length), y = r(t, v), x = arguments.length;
                if (0 === x ? n = i = 0 : i = 1 === x ? (n = 0,
                v - y) : (n = x - 2,
                    m(d(a(e), 0), v - y)),
                9007199254740991 < v + n - i)
                    throw TypeError("Maximum allowed length exceeded");
                for (l = c(g, i),
                         h = 0; h < i; h++)
                    (p = y + h)in g && u(l, h, g[p]);
                if (n < (l.length = i)) {
                    for (h = y; h < v - i; h++)
                        f = h + n,
                            (p = h + i)in g ? g[f] = g[p] : delete g[f];
                    for (h = v; v - i + n < h; h--)
                        delete g[h - 1]
                } else if (i < n)
                    for (h = v - i; y < h; h--)
                        f = h + n - 1,
                            (p = h + i - 1)in g ? g[f] = g[p] : delete g[f];
                for (h = 0; h < n; h++)
                    g[h + y] = arguments[h + 2];
                return g.length = v - i + n,
                    l
            }
        })
    }
    , function(t, e, n) {
        n(92)("Array")
    }
    , function(t, e, n) {
        n(79)("flat")
    }
    , function(t, e, n) {
        n(79)("flatMap")
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(77)
            , a = String.fromCharCode
            , o = String.fromCodePoint;
        i({
            target: "String",
            stat: !0,
            forced: !!o && 1 != o.length
        }, {
            fromCodePoint: function(t) {
                for (var e, n = [], i = arguments.length, o = 0; o < i; ) {
                    if (e = +arguments[o++],
                    r(e, 1114111) !== e)
                        throw RangeError(e + " is not a valid code point");
                    n.push(e < 65536 ? a(e) : a(55296 + ((e -= 65536) >> 10), e % 1024 + 56320))
                }
                return n.join("")
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(49)
            , a = n(26);
        i({
            target: "String",
            stat: !0
        }, {
            raw: function(t) {
                for (var e = r(t.raw), n = a(e.length), i = arguments.length, o = [], s = 0; s < n; )
                    o.push(String(e[s++])),
                    s < i && o.push(String(arguments[s]));
                return o.join("")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(125).codeAt;
        i({
            target: "String",
            proto: !0
        }, {
            codePointAt: function(t) {
                return r(this, t)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i, r = n(3), a = n(38).f, o = n(26), s = n(177), c = n(42), u = n(178), l = n(61), h = "".endsWith, p = Math.min, f = u("endsWith");
        r({
            target: "String",
            proto: !0,
            forced: !(!l && !f && (i = a(String.prototype, "endsWith")) && !i.writable || f)
        }, {
            endsWith: function(t, e) {
                var n = String(c(this));
                s(t);
                var i = 1 < arguments.length ? e : void 0
                    , r = o(n.length)
                    , a = void 0 === i ? r : p(o(i), r)
                    , u = String(t);
                return h ? h.call(n, u, a) : n.slice(a - u.length, a) === u
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(177)
            , a = n(42);
        i({
            target: "String",
            proto: !0,
            forced: !n(178)("includes")
        }, {
            includes: function(t, e) {
                return !!~String(a(this)).indexOf(r(t), 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(127)
            , r = n(22)
            , a = n(26)
            , o = n(42)
            , s = n(130)
            , c = n(131);
        i("match", 1, (function(t, e, n) {
                return [function(e) {
                    var n = o(this)
                        , i = null == e ? void 0 : e[t];
                    return void 0 !== i ? i.call(e, n) : new RegExp(e)[t](String(n))
                }
                    , function(t) {
                        var i = n(e, t, this);
                        if (i.done)
                            return i.value;
                        var o = r(t)
                            , u = String(this);
                        if (!o.global)
                            return c(o, u);
                        for (var l, h = o.unicode, p = [], f = o.lastIndex = 0; null !== (l = c(o, u)); ) {
                            var d = String(l[0]);
                            "" === (p[f] = d) && (o.lastIndex = s(u, a(o.lastIndex), h)),
                                f++
                        }
                        return 0 === f ? null : p
                    }
                ]
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t) {
            var e, n, i, r, a, o, s = l(this), u = String(t);
            return e = v(s, RegExp),
            void 0 === (n = s.flags) && s instanceof RegExp && !("flags"in T) && (n = f.call(s)),
                i = void 0 === n ? "" : String(n),
                r = new e(e === RegExp ? s.source : s,i),
                a = !!~i.indexOf("g"),
                o = !!~i.indexOf("u"),
                r.lastIndex = c(s.lastIndex),
                new C(r,u,a,o)
        }
        var a = n(3)
            , o = n(176)
            , s = n(42)
            , c = n(26)
            , u = n(47)
            , l = n(22)
            , h = n(54)
            , p = n(126)
            , f = n(113)
            , d = n(43)
            , m = n(12)
            , g = n(25)
            , v = n(72)
            , y = n(130)
            , x = n(44)
            , _ = n(61)
            , b = g("matchAll")
            , M = "RegExp String"
            , w = M + " Iterator"
            , S = x.set
            , A = x.getterFor(w)
            , T = RegExp.prototype
            , L = T.exec
            , E = "".matchAll
            , P = !!E && !m((function() {
                "a".matchAll(/./)
            }
        ))
            , C = o((function(t, e, n, i) {
                S(this, {
                    type: w,
                    regexp: t,
                    string: e,
                    global: n,
                    unicode: i,
                    done: !1
                })
            }
        ), M, (function() {
                var t = A(this);
                if (t.done)
                    return {
                        value: void 0,
                        done: !0
                    };
                var e = t.regexp
                    , n = t.string
                    , r = function(t, e) {
                    var n, r = t.exec;
                    if ("function" != typeof r)
                        return L.call(t, e);
                    if ("object" != i(n = r.call(t, e)))
                        throw TypeError("Incorrect exec result");
                    return n
                }(e, n);
                return null === r ? {
                    value: void 0,
                    done: t.done = !0
                } : t.global ? ("" == String(r[0]) && (e.lastIndex = y(n, c(e.lastIndex), t.unicode)),
                    {
                        value: r,
                        done: !1
                    }) : {
                    value: r,
                    done: !(t.done = !0)
                }
            }
        ));
        a({
            target: "String",
            proto: !0,
            forced: P
        }, {
            matchAll: function(t) {
                var e, n, i, a = s(this);
                if (null != t) {
                    if (p(t) && !~String(s("flags"in T ? t.flags : f.call(t))).indexOf("g"))
                        throw TypeError("`.matchAll` does not allow non-global regexes");
                    if (P)
                        return E.apply(a, arguments);
                    if (void 0 === (n = t[b]) && _ && "RegExp" == h(t) && (n = r),
                    null != n)
                        return u(n).call(t, a)
                } else if (P)
                    return E.apply(a, arguments);
                return e = String(a),
                    i = new RegExp(t,"g"),
                    _ ? r.call(i, e) : i[b](e)
            }
        }),
        _ || b in T || d(T, b, r)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(180).end;
        i({
            target: "String",
            proto: !0,
            forced: n(218)
        }, {
            padEnd: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(180).start;
        i({
            target: "String",
            proto: !0,
            forced: n(218)
        }, {
            padStart: function(t, e) {
                return r(this, t, 1 < arguments.length ? e : void 0)
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "String",
            proto: !0
        }, {
            repeat: n(181)
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(127)
            , r = n(22)
            , a = n(32)
            , o = n(26)
            , s = n(56)
            , c = n(42)
            , u = n(130)
            , l = n(131)
            , h = Math.max
            , p = Math.min
            , f = Math.floor
            , d = /\$([$&'`]|\d\d?|<[^>]*>)/g
            , m = /\$([$&'`]|\d\d?)/g;
        i("replace", 2, (function(t, e, n, i) {
                var g = i.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
                    , v = i.REPLACE_KEEPS_$0
                    , y = g ? "$" : "$0";
                return [function(n, i) {
                    var r = c(this)
                        , a = null == n ? void 0 : n[t];
                    return void 0 !== a ? a.call(n, r, i) : e.call(String(r), n, i)
                }
                    , function(t, i) {
                        if (!g && v || "string" == typeof i && -1 === i.indexOf(y)) {
                            var a = n(e, t, this, i);
                            if (a.done)
                                return a.value
                        }
                        var c = r(t)
                            , f = String(this)
                            , d = "function" == typeof i;
                        d || (i = String(i));
                        var m = c.global;
                        if (m) {
                            var _ = c.unicode;
                            c.lastIndex = 0
                        }
                        for (var b = []; ; ) {
                            var M = l(c, f);
                            if (null === M)
                                break;
                            if (b.push(M),
                                !m)
                                break;
                            "" === String(M[0]) && (c.lastIndex = u(f, o(c.lastIndex), _))
                        }
                        for (var w, S = "", A = 0, T = 0; T < b.length; T++) {
                            M = b[T];
                            for (var L = String(M[0]), E = h(p(s(M.index), f.length), 0), P = [], C = 1; C < M.length; C++)
                                P.push(void 0 === (w = M[C]) ? w : String(w));
                            var O = M.groups;
                            if (d) {
                                var I = [L].concat(P, E, f);
                                void 0 !== O && I.push(O);
                                var N = String(i.apply(void 0, I))
                            } else
                                N = x(L, f, E, P, O, i);
                            A <= E && (S += f.slice(A, E) + N,
                                A = E + L.length)
                        }
                        return S + f.slice(A)
                    }
                ];
                function x(t, n, i, r, o, s) {
                    var c = i + t.length
                        , u = r.length
                        , l = m;
                    return void 0 !== o && (o = a(o),
                        l = d),
                        e.call(s, l, (function(e, a) {
                                var s;
                                switch (a.charAt(0)) {
                                    case "$":
                                        return "$";
                                    case "&":
                                        return t;
                                    case "`":
                                        return n.slice(0, i);
                                    case "'":
                                        return n.slice(c);
                                    case "<":
                                        s = o[a.slice(1, -1)];
                                        break;
                                    default:
                                        var l = +a;
                                        if (0 == l)
                                            return e;
                                        if (u < l) {
                                            var h = f(l / 10);
                                            return 0 === h ? e : h <= u ? void 0 === r[h - 1] ? a.charAt(1) : r[h - 1] + a.charAt(1) : e
                                        }
                                        s = r[l - 1]
                                }
                                return void 0 === s ? "" : s
                            }
                        ))
                }
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(127)
            , r = n(22)
            , a = n(42)
            , o = n(209)
            , s = n(131);
        i("search", 1, (function(t, e, n) {
                return [function(e) {
                    var n = a(this)
                        , i = null == e ? void 0 : e[t];
                    return void 0 !== i ? i.call(e, n) : new RegExp(e)[t](String(n))
                }
                    , function(t) {
                        var i = n(e, t, this);
                        if (i.done)
                            return i.value;
                        var a = r(t)
                            , c = String(this)
                            , u = a.lastIndex;
                        o(u, 0) || (a.lastIndex = 0);
                        var l = s(a, c);
                        return o(a.lastIndex, u) || (a.lastIndex = u),
                            null === l ? -1 : l.index
                    }
                ]
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(127)
            , r = n(126)
            , a = n(22)
            , o = n(42)
            , s = n(72)
            , c = n(130)
            , u = n(26)
            , l = n(131)
            , h = n(128)
            , p = n(12)
            , f = [].push
            , d = Math.min
            , m = 4294967295
            , g = !p((function() {
                return !RegExp(m, "y")
            }
        ));
        i("split", 2, (function(t, e, n) {
                var i;
                return i = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(t, n) {
                        var i = String(o(this))
                            , a = void 0 === n ? m : n >>> 0;
                        if (0 == a)
                            return [];
                        if (void 0 === t)
                            return [i];
                        if (!r(t))
                            return e.call(i, t, a);
                        for (var s, c, u, l = [], p = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""), d = 0, g = new RegExp(t.source,p + "g"); (s = h.call(g, i)) && !(d < (c = g.lastIndex) && (l.push(i.slice(d, s.index)),
                        1 < s.length && s.index < i.length && f.apply(l, s.slice(1)),
                            u = s[0].length,
                            d = c,
                        l.length >= a)); )
                            g.lastIndex === s.index && g.lastIndex++;
                        return d === i.length ? !u && g.test("") || l.push("") : l.push(i.slice(d)),
                            l.length > a ? l.slice(0, a) : l
                    }
                    : "0".split(void 0, 0).length ? function(t, n) {
                            return void 0 === t && 0 === n ? [] : e.call(this, t, n)
                        }
                        : e,
                    [function(e, n) {
                        var r = o(this)
                            , a = null == e ? void 0 : e[t];
                        return void 0 !== a ? a.call(e, r, n) : i.call(String(r), e, n)
                    }
                        , function(t, r) {
                        var o = n(i, t, this, r, i !== e);
                        if (o.done)
                            return o.value;
                        var h = a(t)
                            , p = String(this)
                            , f = s(h, RegExp)
                            , v = h.unicode
                            , y = (h.ignoreCase ? "i" : "") + (h.multiline ? "m" : "") + (h.unicode ? "u" : "") + (g ? "y" : "g")
                            , x = new f(g ? h : "^(?:" + h.source + ")",y)
                            , _ = void 0 === r ? m : r >>> 0;
                        if (0 == _)
                            return [];
                        if (0 === p.length)
                            return null === l(x, p) ? [p] : [];
                        for (var b = 0, M = 0, w = []; M < p.length; ) {
                            x.lastIndex = g ? M : 0;
                            var S, A = l(x, g ? p : p.slice(M));
                            if (null === A || (S = d(u(x.lastIndex + (g ? 0 : M)), p.length)) === b)
                                M = c(p, M, v);
                            else {
                                if (w.push(p.slice(b, M)),
                                w.length === _)
                                    return w;
                                for (var T = 1; T <= A.length - 1; T++)
                                    if (w.push(A[T]),
                                    w.length === _)
                                        return w;
                                M = b = S
                            }
                        }
                        return w.push(p.slice(b)),
                            w
                    }
                    ]
            }
        ), !g)
    }
    , function(t, e, n) {
        "use strict";
        var i, r = n(3), a = n(38).f, o = n(26), s = n(177), c = n(42), u = n(178), l = n(61), h = "".startsWith, p = Math.min, f = u("startsWith");
        r({
            target: "String",
            proto: !0,
            forced: !(!l && !f && (i = a(String.prototype, "startsWith")) && !i.writable || f)
        }, {
            startsWith: function(t, e) {
                var n = String(c(this));
                s(t);
                var i = o(p(1 < arguments.length ? e : void 0, n.length))
                    , r = String(t);
                return h ? h.call(n, r, i) : n.slice(i, i + r.length) === r
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(93).trim;
        i({
            target: "String",
            proto: !0,
            forced: n(182)("trim")
        }, {
            trim: function() {
                return r(this)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(93).start
            , a = n(182)("trimStart")
            , o = a ? function() {
                return r(this)
            }
            : "".trimStart;
        i({
            target: "String",
            proto: !0,
            forced: a
        }, {
            trimStart: o,
            trimLeft: o
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(93).end
            , a = n(182)("trimEnd")
            , o = a ? function() {
                return r(this)
            }
            : "".trimEnd;
        i({
            target: "String",
            proto: !0,
            forced: a
        }, {
            trimEnd: o,
            trimRight: o
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("anchor")
        }, {
            anchor: function(t) {
                return r(this, "a", "name", t)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("big")
        }, {
            big: function() {
                return r(this, "big", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("blink")
        }, {
            blink: function() {
                return r(this, "blink", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("bold")
        }, {
            bold: function() {
                return r(this, "b", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("fixed")
        }, {
            fixed: function() {
                return r(this, "tt", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("fontcolor")
        }, {
            fontcolor: function(t) {
                return r(this, "font", "color", t)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("fontsize")
        }, {
            fontsize: function(t) {
                return r(this, "font", "size", t)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("italics")
        }, {
            italics: function() {
                return r(this, "i", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("link")
        }, {
            link: function(t) {
                return r(this, "a", "href", t)
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("small")
        }, {
            small: function() {
                return r(this, "small", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("strike")
        }, {
            strike: function() {
                return r(this, "strike", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("sub")
        }, {
            sub: function() {
                return r(this, "sub", "", "")
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(50);
        i({
            target: "String",
            proto: !0,
            forced: n(51)("sup")
        }, {
            sup: function() {
                return r(this, "sup", "", "")
            }
        })
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(16)
            , a = n(105)
            , o = n(133)
            , s = n(30).f
            , c = n(85).f
            , u = n(126)
            , l = n(113)
            , h = n(129)
            , p = n(39)
            , f = n(12)
            , d = n(44).set
            , m = n(92)
            , g = n(25)("match")
            , v = r.RegExp
            , y = v.prototype
            , x = /a/g
            , _ = /a/g
            , b = new v(x) !== x
            , M = h.UNSUPPORTED_Y;
        if (i && a("RegExp", !b || M || f((function() {
                return _[g] = !1,
                v(x) != x || v(_) == _ || "/a/i" != v(x, "i")
            }
        )))) {
            function w(t) {
                t in S || s(S, t, {
                    configurable: !0,
                    get: function() {
                        return v[t]
                    },
                    set: function(e) {
                        v[t] = e
                    }
                })
            }
            for (var S = function(t, e) {
                var n, i = this instanceof S, r = u(t), a = void 0 === e;
                if (!i && r && t.constructor === S && a)
                    return t;
                b ? r && !a && (t = t.source) : t instanceof S && (a && (e = l.call(t)),
                    t = t.source),
                M && (n = !!e && -1 < e.indexOf("y")) && (e = e.replace(/y/g, ""));
                var s = o(b ? new v(t,e) : v(t, e), i ? this : y, S);
                return M && n && d(s, {
                    sticky: n
                }),
                    s
            }, A = c(v), T = 0; A.length > T; )
                w(A[T++]);
            (y.constructor = S).prototype = y,
                p(r, "RegExp", S)
        }
        m("RegExp")
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(30)
            , a = n(113)
            , o = n(129).UNSUPPORTED_Y;
        i && ("g" != /./g.flags || o) && r.f(RegExp.prototype, "flags", {
            configurable: !0,
            get: a
        })
    }
    , function(t, e, n) {
        var i = n(23)
            , r = n(129).UNSUPPORTED_Y
            , a = n(30).f
            , o = n(44).get
            , s = RegExp.prototype;
        i && r && a(RegExp.prototype, "sticky", {
            configurable: !0,
            get: function() {
                if (this !== s) {
                    if (this instanceof RegExp)
                        return !!o(this).sticky;
                    throw TypeError("Incompatible receiver, RegExp required")
                }
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        n(179);
        var i, r, a = n(3), o = n(21), s = (i = !1,
            (r = /[ac]/).exec = function() {
                return i = !0,
                    /./.exec.apply(this, arguments)
            }
            ,
        !0 === r.test("abc") && i), c = /./.test;
        a({
            target: "RegExp",
            proto: !0,
            forced: !s
        }, {
            test: function(t) {
                if ("function" != typeof this.exec)
                    return c.call(this, t);
                var e = this.exec(t);
                if (null !== e && !o(e))
                    throw new Error("RegExp exec method returned something other than an Object or null");
                return !!e
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(39)
            , r = n(22)
            , a = n(12)
            , o = n(113)
            , s = "toString"
            , c = RegExp.prototype
            , u = c[s]
            , l = a((function() {
                return "/a/b" != u.call({
                    source: "a",
                    flags: "b"
                })
            }
        ))
            , h = u.name != s;
        (l || h) && i(RegExp.prototype, s, (function() {
                var t = r(this)
                    , e = String(t.source)
                    , n = t.flags;
                return "/" + e + "/" + String(void 0 === n && t instanceof RegExp && !("flags"in c) ? o.call(t) : n)
            }
        ), {
            unsafe: !0
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(220);
        i({
            global: !0,
            forced: parseInt != r
        }, {
            parseInt: r
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(221);
        i({
            global: !0,
            forced: parseFloat != r
        }, {
            parseFloat: r
        })
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            var e, n, i, r, a, o, s, c, u = h(t, !1);
            if ("string" == typeof u && 2 < u.length)
                if (43 === (e = (u = v(u)).charCodeAt(0)) || 45 === e) {
                    if (88 === (n = u.charCodeAt(2)) || 120 === n)
                        return NaN
                } else if (48 === e) {
                    switch (u.charCodeAt(1)) {
                        case 66:
                        case 98:
                            i = 2,
                                r = 49;
                            break;
                        case 79:
                        case 111:
                            i = 8,
                                r = 55;
                            break;
                        default:
                            return +u
                    }
                    for (o = (a = u.slice(2)).length,
                             s = 0; s < o; s++)
                        if ((c = a.charCodeAt(s)) < 48 || r < c)
                            return NaN;
                    return parseInt(a, i)
                }
            return +u
        }
        var r = n(23)
            , a = n(16)
            , o = n(105)
            , s = n(39)
            , c = n(33)
            , u = n(54)
            , l = n(133)
            , h = n(60)
            , p = n(12)
            , f = n(70)
            , d = n(85).f
            , m = n(38).f
            , g = n(30).f
            , v = n(93).trim
            , y = "Number"
            , x = a[y]
            , _ = x.prototype
            , b = u(f(_)) == y;
        if (o(y, !x(" 0o1") || !x("0b1") || x("+0x1"))) {
            for (var M, w = function(t) {
                var e = arguments.length < 1 ? 0 : t
                    , n = this;
                return n instanceof w && (b ? p((function() {
                        _.valueOf.call(n)
                    }
                )) : u(n) != y) ? l(new x(i(e)), n, w) : i(e)
            }, S = r ? d(x) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), A = 0; S.length > A; A++)
                c(x, M = S[A]) && !c(w, M) && g(w, M, m(x, M));
            (w.prototype = _).constructor = w,
                s(a, y, w)
        }
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            EPSILON: Math.pow(2, -52)
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            isFinite: n(534)
        })
    }
    , function(t, e, n) {
        var i = n(16).isFinite;
        t.exports = Number.isFinite || function(t) {
            return "number" == typeof t && i(t)
        }
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            isInteger: n(222)
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            isNaN: function(t) {
                return t != t
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(222)
            , a = Math.abs;
        i({
            target: "Number",
            stat: !0
        }, {
            isSafeInteger: function(t) {
                return r(t) && a(t) <= 9007199254740991
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            MAX_SAFE_INTEGER: 9007199254740991
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Number",
            stat: !0
        }, {
            MIN_SAFE_INTEGER: -9007199254740991
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(221);
        i({
            target: "Number",
            stat: !0,
            forced: Number.parseFloat != r
        }, {
            parseFloat: r
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(220);
        i({
            target: "Number",
            stat: !0,
            forced: Number.parseInt != r
        }, {
            parseInt: r
        })
    }
    , function(t, e, n) {
        "use strict";
        function i(t, e, n) {
            return 0 === e ? n : e % 2 == 1 ? i(t, e - 1, n * t) : i(t * t, e / 2, n)
        }
        var r = n(3)
            , a = n(56)
            , o = n(223)
            , s = n(181)
            , c = n(12)
            , u = 1..toFixed
            , l = Math.floor;
        r({
            target: "Number",
            proto: !0,
            forced: u && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)) || !c((function() {
                    u.call({})
                }
            ))
        }, {
            toFixed: function(t) {
                function e(t, e) {
                    for (var n = -1, i = e; ++n < 6; )
                        i += t * m[n],
                            m[n] = i % 1e7,
                            i = l(i / 1e7)
                }
                function n(t) {
                    for (var e = 6, n = 0; 0 <= --e; )
                        n += m[e],
                            m[e] = l(n / t),
                            n = n % t * 1e7
                }
                function r() {
                    for (var t = 6, e = ""; 0 <= --t; )
                        if ("" !== e || 0 === t || 0 !== m[t]) {
                            var n = String(m[t]);
                            e = "" === e ? n : e + s.call("0", 7 - n.length) + n
                        }
                    return e
                }
                var c, u, h, p, f = o(this), d = a(t), m = [0, 0, 0, 0, 0, 0], g = "", v = "0";
                if (d < 0 || 20 < d)
                    throw RangeError("Incorrect fraction digits");
                if (f != f)
                    return "NaN";
                if (f <= -1e21 || 1e21 <= f)
                    return String(f);
                if (f < 0 && (g = "-",
                    f = -f),
                1e-21 < f)
                    if (u = (c = function(t) {
                        for (var e = 0, n = t; 4096 <= n; )
                            e += 12,
                                n /= 4096;
                        for (; 2 <= n; )
                            e += 1,
                                n /= 2;
                        return e
                    }(f * i(2, 69, 1)) - 69) < 0 ? f * i(2, -c, 1) : f / i(2, c, 1),
                        u *= 4503599627370496,
                    0 < (c = 52 - c)) {
                        for (e(0, u),
                                 h = d; 7 <= h; )
                            e(1e7, 0),
                                h -= 7;
                        for (e(i(10, h, 1), 0),
                                 h = c - 1; 23 <= h; )
                            n(1 << 23),
                                h -= 23;
                        n(1 << h),
                            e(1, 1),
                            n(2),
                            v = r()
                    } else
                        e(0, u),
                            e(1 << -c, 0),
                            v = r() + s.call("0", d);
                return 0 < d ? g + ((p = v.length) <= d ? "0." + s.call("0", d - p) + v : v.slice(0, p - d) + "." + v.slice(p - d)) : g + v
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(12)
            , a = n(223)
            , o = 1..toPrecision;
        i({
            target: "Number",
            proto: !0,
            forced: r((function() {
                    return "1" !== o.call(1, void 0)
                }
            )) || !r((function() {
                    o.call({})
                }
            ))
        }, {
            toPrecision: function(t) {
                return void 0 === t ? o.call(a(this)) : o.call(a(this), t)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(224)
            , a = Math.acosh
            , o = Math.log
            , s = Math.sqrt
            , c = Math.LN2;
        i({
            target: "Math",
            stat: !0,
            forced: !a || 710 != Math.floor(a(Number.MAX_VALUE)) || a(1 / 0) != 1 / 0
        }, {
            acosh: function(t) {
                return (t = +t) < 1 ? NaN : 94906265.62425156 < t ? o(t) + c : r(t - 1 + s(t - 1) * s(t + 1))
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.asinh
            , a = Math.log
            , o = Math.sqrt;
        i({
            target: "Math",
            stat: !0,
            forced: !(r && 0 < 1 / r(0))
        }, {
            asinh: function t(e) {
                return isFinite(e = +e) && 0 != e ? e < 0 ? -t(-e) : a(e + o(e * e + 1)) : e
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.atanh
            , a = Math.log;
        i({
            target: "Math",
            stat: !0,
            forced: !(r && 1 / r(-0) < 0)
        }, {
            atanh: function(t) {
                return 0 == (t = +t) ? t : a((1 + t) / (1 - t)) / 2
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(183)
            , a = Math.abs
            , o = Math.pow;
        i({
            target: "Math",
            stat: !0
        }, {
            cbrt: function(t) {
                return r(t = +t) * o(a(t), 1 / 3)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.floor
            , a = Math.log
            , o = Math.LOG2E;
        i({
            target: "Math",
            stat: !0
        }, {
            clz32: function(t) {
                return (t >>>= 0) ? 31 - r(a(t + .5) * o) : 32
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(134)
            , a = Math.cosh
            , o = Math.abs
            , s = Math.E;
        i({
            target: "Math",
            stat: !0,
            forced: !a || a(710) === 1 / 0
        }, {
            cosh: function(t) {
                var e = r(o(t) - 1) + 1;
                return (e + 1 / (e * s * s)) * (s / 2)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(134);
        i({
            target: "Math",
            stat: !0,
            forced: r != Math.expm1
        }, {
            expm1: r
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Math",
            stat: !0
        }, {
            fround: n(552)
        })
    }
    , function(t, e, n) {
        var i = n(183)
            , r = Math.abs
            , a = Math.pow
            , o = a(2, -52)
            , s = a(2, -23)
            , c = a(2, 127) * (2 - s)
            , u = a(2, -126);
        t.exports = Math.fround || function(t) {
            var e, n, a = r(t), l = i(t);
            return a < u ? l * (a / u / s + 1 / o - 1 / o) * u * s : c < (n = (e = (1 + s / o) * a) - (e - a)) || n != n ? l * (1 / 0) : l * n
        }
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.hypot
            , a = Math.abs
            , o = Math.sqrt;
        i({
            target: "Math",
            stat: !0,
            forced: !!r && r(1 / 0, NaN) !== 1 / 0
        }, {
            hypot: function(t, e) {
                for (var n, i, r = 0, s = 0, c = arguments.length, u = 0; s < c; )
                    u < (n = a(arguments[s++])) ? (r = r * (i = u / n) * i + 1,
                        u = n) : r += 0 < n ? (i = n / u) * i : n;
                return u === 1 / 0 ? 1 / 0 : u * o(r)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = Math.imul;
        i({
            target: "Math",
            stat: !0,
            forced: r((function() {
                    return -5 != a(4294967295, 5) || 2 != a.length
                }
            ))
        }, {
            imul: function(t, e) {
                var n = +t
                    , i = +e
                    , r = 65535 & n
                    , a = 65535 & i;
                return 0 | r * a + ((65535 & n >>> 16) * a + r * (65535 & i >>> 16) << 16 >>> 0)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.log
            , a = Math.LOG10E;
        i({
            target: "Math",
            stat: !0
        }, {
            log10: function(t) {
                return r(t) * a
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Math",
            stat: !0
        }, {
            log1p: n(224)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.log
            , a = Math.LN2;
        i({
            target: "Math",
            stat: !0
        }, {
            log2: function(t) {
                return r(t) / a
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Math",
            stat: !0
        }, {
            sign: n(183)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(12)
            , a = n(134)
            , o = Math.abs
            , s = Math.exp
            , c = Math.E;
        i({
            target: "Math",
            stat: !0,
            forced: r((function() {
                    return -2e-17 != Math.sinh(-2e-17)
                }
            ))
        }, {
            sinh: function(t) {
                return o(t = +t) < 1 ? (a(t) - a(-t)) / 2 : (s(t - 1) - s(-t - 1)) * (c / 2)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(134)
            , a = Math.exp;
        i({
            target: "Math",
            stat: !0
        }, {
            tanh: function(t) {
                var e = r(t = +t)
                    , n = r(-t);
                return e == 1 / 0 ? 1 : n == 1 / 0 ? -1 : (e - n) / (a(t) + a(-t))
            }
        })
    }
    , function(t, e, n) {
        n(65)(Math, "Math", !0)
    }
    , function(t, e, n) {
        var i = n(3)
            , r = Math.ceil
            , a = Math.floor;
        i({
            target: "Math",
            stat: !0
        }, {
            trunc: function(t) {
                return (0 < t ? a : r)(t)
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Date",
            stat: !0
        }, {
            now: function() {
                return (new Date).getTime()
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(12)
            , a = n(32)
            , o = n(60);
        i({
            target: "Date",
            proto: !0,
            forced: r((function() {
                    return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
                        toISOString: function() {
                            return 1
                        }
                    })
                }
            ))
        }, {
            toJSON: function() {
                var t = a(this)
                    , e = o(t);
                return "number" != typeof e || isFinite(e) ? t.toISOString() : null
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(566);
        i({
            target: "Date",
            proto: !0,
            forced: Date.prototype.toISOString !== r
        }, {
            toISOString: r
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(12)
            , r = n(180).start
            , a = Math.abs
            , o = Date.prototype
            , s = o.getTime
            , c = o.toISOString;
        t.exports = i((function() {
                return "0385-07-25T07:06:39.999Z" != c.call(new Date(-50000000000001))
            }
        )) || !i((function() {
                c.call(new Date(NaN))
            }
        )) ? function() {
                if (!isFinite(s.call(this)))
                    throw RangeError("Invalid time value");
                var t = this.getUTCFullYear()
                    , e = this.getUTCMilliseconds()
                    , n = t < 0 ? "-" : 9999 < t ? "+" : "";
                return n + r(a(t), n ? 6 : 4, 0) + "-" + r(this.getUTCMonth() + 1, 2, 0) + "-" + r(this.getUTCDate(), 2, 0) + "T" + r(this.getUTCHours(), 2, 0) + ":" + r(this.getUTCMinutes(), 2, 0) + ":" + r(this.getUTCSeconds(), 2, 0) + "." + r(e, 3, 0) + "Z"
            }
            : c
    }
    , function(t, e, n) {
        var i = n(39)
            , r = Date.prototype
            , a = "Invalid Date"
            , o = r.toString
            , s = r.getTime;
        new Date(NaN) + "" != a && i(r, "toString", (function() {
                var t = s.call(this);
                return t == t ? o.call(this) : a
            }
        ))
    }
    , function(t, e, n) {
        var i = n(43)
            , r = n(569)
            , a = n(25)("toPrimitive")
            , o = Date.prototype;
        a in o || i(o, a, r)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(22)
            , r = n(60);
        t.exports = function(t) {
            if ("string" !== t && "number" !== t && "default" !== t)
                throw TypeError("Incorrect hint");
            return r(i(this), "number" !== t)
        }
    }
    , function(t, e, n) {
        function i(t, e, n) {
            var i = n.charAt(e - 1)
                , r = n.charAt(e + 1);
            return u.test(t) && !l.test(r) || l.test(t) && !u.test(i) ? "\\u" + t.charCodeAt(0).toString(16) : t
        }
        var r = n(3)
            , a = n(55)
            , o = n(12)
            , s = a("JSON", "stringify")
            , c = /[\uD800-\uDFFF]/g
            , u = /^[\uD800-\uDBFF]$/
            , l = /^[\uDC00-\uDFFF]$/
            , h = o((function() {
                return '"\\udf06\\ud834"' !== s("\udf06\ud834") || '"\\udead"' !== s("\udead")
            }
        ));
        s && r({
            target: "JSON",
            stat: !0,
            forced: h
        }, {
            stringify: function(t, e, n) {
                var r = s.apply(null, arguments);
                return "string" == typeof r ? r.replace(c, i) : r
            }
        })
    }
    , function(t, e, n) {
        var i = n(16);
        n(65)(i.JSON, "JSON", !0)
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            var e;
            return !(!M(t) || "function" != typeof (e = t.then)) && e
        }
        function r(t, e, n) {
            if (!e.notified) {
                e.notified = !0;
                var r = e.reactions;
                O((function() {
                        for (var a = e.value, o = 1 == e.state, s = 0; r.length > s; ) {
                            var c, u, l, h = r[s++], p = o ? h.ok : h.fail, f = h.resolve, d = h.reject, m = h.domain;
                            try {
                                p ? (o || (2 === e.rejection && at(t, e),
                                    e.rejection = 1),
                                    !0 === p ? c = a : (m && m.enter(),
                                        c = p(a),
                                    m && (m.exit(),
                                        l = !0)),
                                    c === h.promise ? d(q("Promise-chain cycle")) : (u = i(c)) ? u.call(c, f, d) : f(c)) : d(a)
                            } catch (a) {
                                m && !l && m.exit(),
                                    d(a)
                            }
                        }
                        e.reactions = [],
                            e.notified = !1,
                        n && !e.rejection && it(t, e)
                    }
                ))
            }
        }
        function a(t, e, n) {
            var i, r;
            $ ? ((i = X.createEvent("Event")).promise = e,
                i.reason = n,
                i.initEvent(t, !1, !0),
                m.dispatchEvent(i)) : i = {
                promise: e,
                reason: n
            },
                (r = m["on" + t]) ? r(i) : t === tt && N("Unhandled promise rejection", n)
        }
        function o(t, e, n, i) {
            return function(r) {
                t(e, n, r, i)
            }
        }
        function s(t, e, n, i) {
            e.done || (e.done = !0,
            i && (e = i),
                e.value = n,
                e.state = 2,
                r(t, e, !0))
        }
        function c(t, e, n, a) {
            if (!e.done) {
                e.done = !0,
                a && (e = a);
                try {
                    if (t === n)
                        throw q("Promise can't be resolved itself");
                    var u = i(n);
                    u ? O((function() {
                            var i = {
                                done: !1
                            };
                            try {
                                u.call(n, o(c, t, i, e), o(s, t, i, e))
                            } catch (n) {
                                s(t, i, n, e)
                            }
                        }
                    )) : (e.value = n,
                        e.state = 1,
                        r(t, e, !1))
                } catch (n) {
                    s(t, {
                        done: !1
                    }, n, e)
                }
            }
        }
        var u, l, h, p, f = n(3), d = n(61), m = n(16), g = n(55), v = n(225), y = n(39), x = n(94), _ = n(65), b = n(92), M = n(21), w = n(47), S = n(80), A = n(54), T = n(163), L = n(91), E = n(121), P = n(72), C = n(184).set, O = n(227), I = n(228), N = n(573), D = n(185), R = n(229), z = n(44), F = n(105), B = n(25), U = n(173), G = B("species"), k = "Promise", j = z.get, V = z.set, W = z.getterFor(k), H = v, q = m.TypeError, X = m.document, Y = m.process, Z = g("fetch"), J = D.f, K = J, Q = "process" == A(Y), $ = !!(X && X.createEvent && m.dispatchEvent), tt = "unhandledrejection", et = F(k, (function() {
                if (T(H) === String(H)) {
                    if (66 === U)
                        return !0;
                    if (!Q && "function" != typeof PromiseRejectionEvent)
                        return !0
                }
                if (d && !H.prototype.finally)
                    return !0;
                if (51 <= U && /native code/.test(H))
                    return !1;
                function t(t) {
                    t((function() {}
                    ), (function() {}
                    ))
                }
                var e = H.resolve(1);
                return (e.constructor = {})[G] = t,
                    !(e.then((function() {}
                    ))instanceof t)
            }
        )), nt = et || !E((function(t) {
                H.all(t).catch((function() {}
                ))
            }
        )), it = function(t, e) {
            C.call(m, (function() {
                    var n, i = e.value;
                    if (rt(e) && (n = R((function() {
                            Q ? Y.emit("unhandledRejection", i, t) : a(tt, t, i)
                        }
                    )),
                        e.rejection = Q || rt(e) ? 2 : 1,
                        n.error))
                        throw n.value
                }
            ))
        }, rt = function(t) {
            return 1 !== t.rejection && !t.parent
        }, at = function(t, e) {
            C.call(m, (function() {
                    Q ? Y.emit("rejectionHandled", t) : a("rejectionhandled", t, e.value)
                }
            ))
        };
        et && (H = function(t) {
            S(this, H, k),
                w(t),
                u.call(this);
            var e = j(this);
            try {
                t(o(c, this, e), o(s, this, e))
            } catch (t) {
                s(this, e, t)
            }
        }
            ,
            (u = function() {
                    V(this, {
                        type: k,
                        done: !1,
                        notified: !1,
                        parent: !1,
                        reactions: [],
                        rejection: !1,
                        state: 0,
                        value: void 0
                    })
                }
            ).prototype = x(H.prototype, {
                then: function(t, e) {
                    var n = W(this)
                        , i = J(P(this, H));
                    return i.ok = "function" != typeof t || t,
                        i.fail = "function" == typeof e && e,
                        i.domain = Q ? Y.domain : void 0,
                        n.parent = !0,
                        n.reactions.push(i),
                    0 != n.state && r(this, n, !1),
                        i.promise
                },
                catch: function(t) {
                    return this.then(void 0, t)
                }
            }),
            l = function() {
                var t = new u
                    , e = j(t);
                this.promise = t,
                    this.resolve = o(c, t, e),
                    this.reject = o(s, t, e)
            }
            ,
            D.f = J = function(t) {
                return t === H || t === h ? new l : K(t)
            }
            ,
        d || "function" != typeof v || (p = v.prototype.then,
            y(v.prototype, "then", (function(t, e) {
                    var n = this;
                    return new H((function(t, e) {
                            p.call(n, t, e)
                        }
                    )).then(t, e)
                }
            ), {
                unsafe: !0
            }),
        "function" == typeof Z && f({
            global: !0,
            enumerable: !0,
            forced: !0
        }, {
            fetch: function(t) {
                return I(H, Z.apply(m, arguments))
            }
        }))),
            f({
                global: !0,
                wrap: !0,
                forced: et
            }, {
                Promise: H
            }),
            _(H, k, !1, !0),
            b(k),
            h = g(k),
            f({
                target: k,
                stat: !0,
                forced: et
            }, {
                reject: function(t) {
                    var e = J(this);
                    return e.reject.call(void 0, t),
                        e.promise
                }
            }),
            f({
                target: k,
                stat: !0,
                forced: d || et
            }, {
                resolve: function(t) {
                    return I(d && this === h ? H : this, t)
                }
            }),
            f({
                target: k,
                stat: !0,
                forced: nt
            }, {
                all: function(t) {
                    var e = this
                        , n = J(e)
                        , i = n.resolve
                        , r = n.reject
                        , a = R((function() {
                            var n = w(e.resolve)
                                , a = []
                                , o = 0
                                , s = 1;
                            L(t, (function(t) {
                                    var c = o++
                                        , u = !1;
                                    a.push(void 0),
                                        s++,
                                        n.call(e, t).then((function(t) {
                                                u || (u = !0,
                                                    a[c] = t,
                                                --s || i(a))
                                            }
                                        ), r)
                                }
                            )),
                            --s || i(a)
                        }
                    ));
                    return a.error && r(a.value),
                        n.promise
                },
                race: function(t) {
                    var e = this
                        , n = J(e)
                        , i = n.reject
                        , r = R((function() {
                            var r = w(e.resolve);
                            L(t, (function(t) {
                                    r.call(e, t).then(n.resolve, i)
                                }
                            ))
                        }
                    ));
                    return r.error && i(r.value),
                        n.promise
                }
            })
    }
    , function(t, e, n) {
        var i = n(16);
        t.exports = function(t, e) {
            var n = i.console;
            n && n.error && (1 === arguments.length ? n.error(t) : n.error(t, e))
        }
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(47)
            , a = n(185)
            , o = n(229)
            , s = n(91);
        i({
            target: "Promise",
            stat: !0
        }, {
            allSettled: function(t) {
                var e = this
                    , n = a.f(e)
                    , i = n.resolve
                    , c = n.reject
                    , u = o((function() {
                        var n = r(e.resolve)
                            , a = []
                            , o = 0
                            , c = 1;
                        s(t, (function(t) {
                                var r = o++
                                    , s = !1;
                                a.push(void 0),
                                    c++,
                                    n.call(e, t).then((function(t) {
                                            s || (s = !0,
                                                a[r] = {
                                                    status: "fulfilled",
                                                    value: t
                                                },
                                            --c || i(a))
                                        }
                                    ), (function(t) {
                                            s || (s = !0,
                                                a[r] = {
                                                    status: "rejected",
                                                    reason: t
                                                },
                                            --c || i(a))
                                        }
                                    ))
                            }
                        )),
                        --c || i(a)
                    }
                ));
                return u.error && c(u.value),
                    n.promise
            }
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(61)
            , a = n(225)
            , o = n(12)
            , s = n(55)
            , c = n(72)
            , u = n(228)
            , l = n(39);
        i({
            target: "Promise",
            proto: !0,
            real: !0,
            forced: !!a && o((function() {
                    a.prototype.finally.call({
                        then: function() {}
                    }, (function() {}
                    ))
                }
            ))
        }, {
            finally: function(t) {
                var e = c(this, s("Promise"))
                    , n = "function" == typeof t;
                return this.then(n ? function(n) {
                        return u(e, t()).then((function() {
                                return n
                            }
                        ))
                    }
                    : t, n ? function(n) {
                        return u(e, t()).then((function() {
                                throw n
                            }
                        ))
                    }
                    : t)
            }
        }),
        r || "function" != typeof a || a.prototype.finally || l(a.prototype, "finally", s("Promise").prototype.finally)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(135)
            , r = n(230);
        t.exports = i("Map", (function(t) {
                return function(e) {
                    return t(this, arguments.length ? e : void 0)
                }
            }
        ), r)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(135)
            , r = n(230);
        t.exports = i("Set", (function(t) {
                return function(e) {
                    return t(this, arguments.length ? e : void 0)
                }
            }
        ), r)
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return function(e) {
                return t(this, arguments.length ? e : void 0)
            }
        }
        var r, a = n(16), o = n(94), s = n(87), c = n(135), u = n(231), l = n(21), h = n(44).enforce, p = n(199), f = !a.ActiveXObject && "ActiveXObject"in a, d = Object.isExtensible, m = t.exports = c("WeakMap", i, u);
        if (p && f) {
            r = u.getConstructor(i, "WeakMap", !0),
                s.REQUIRED = !0;
            var g = m.prototype
                , v = g.delete
                , y = g.has
                , x = g.get
                , _ = g.set;
            o(g, {
                delete: function(t) {
                    if (!l(t) || d(t))
                        return v.call(this, t);
                    var e = h(this);
                    return e.frozen || (e.frozen = new r),
                    v.call(this, t) || e.frozen.delete(t)
                },
                has: function(t) {
                    if (!l(t) || d(t))
                        return y.call(this, t);
                    var e = h(this);
                    return e.frozen || (e.frozen = new r),
                    y.call(this, t) || e.frozen.has(t)
                },
                get: function(t) {
                    if (!l(t) || d(t))
                        return x.call(this, t);
                    var e = h(this);
                    return e.frozen || (e.frozen = new r),
                        y.call(this, t) ? x.call(this, t) : e.frozen.get(t)
                },
                set: function(t, e) {
                    if (l(t) && !d(t)) {
                        var n = h(this);
                        n.frozen || (n.frozen = new r),
                            y.call(this, t) ? _.call(this, t, e) : n.frozen.set(t, e)
                    } else
                        _.call(this, t, e);
                    return this
                }
            })
        }
    }
    , function(t, e, n) {
        "use strict";
        n(135)("WeakSet", (function(t) {
                return function(e) {
                    return t(this, arguments.length ? e : void 0)
                }
            }
        ), n(231))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(16)
            , a = n(136)
            , o = n(92)
            , s = "ArrayBuffer"
            , c = a[s];
        i({
            global: !0,
            forced: r[s] !== c
        }, {
            ArrayBuffer: c
        }),
            o(s)
    }
    , function(t, e) {
        var n = Math.abs
            , i = Math.pow
            , r = Math.floor
            , a = Math.log
            , o = Math.LN2;
        t.exports = {
            pack: function(t, e, s) {
                var c, u, l, h = new Array(s), p = 8 * s - e - 1, f = (1 << p) - 1, d = f >> 1, m = 23 === e ? i(2, -24) - i(2, -77) : 0, g = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0, v = 0;
                for ((t = n(t)) != t || t === 1 / 0 ? (u = t != t ? 1 : 0,
                    c = f) : (c = r(a(t) / o),
                t * (l = i(2, -c)) < 1 && (c--,
                    l *= 2),
                2 <= (t += 1 <= c + d ? m / l : m * i(2, 1 - d)) * l && (c++,
                    l /= 2),
                    f <= c + d ? (u = 0,
                        c = f) : 1 <= c + d ? (u = (t * l - 1) * i(2, e),
                        c += d) : (u = t * i(2, d - 1) * i(2, e),
                        c = 0)); 8 <= e; h[v++] = 255 & u,
                         u /= 256,
                         e -= 8)
                    ;
                for (c = c << e | u,
                         p += e; 0 < p; h[v++] = 255 & c,
                         c /= 256,
                         p -= 8)
                    ;
                return h[--v] |= 128 * g,
                    h
            },
            unpack: function(t, e) {
                var n, r = t.length, a = 8 * r - e - 1, o = (1 << a) - 1, s = o >> 1, c = a - 7, u = r - 1, l = t[u--], h = 127 & l;
                for (l >>= 7; 0 < c; h = 256 * h + t[u],
                    u--,
                    c -= 8)
                    ;
                for (n = h & (1 << -c) - 1,
                         h >>= -c,
                         c += e; 0 < c; n = 256 * n + t[u],
                         u--,
                         c -= 8)
                    ;
                if (0 === h)
                    h = 1 - s;
                else {
                    if (h === o)
                        return n ? NaN : l ? -1 / 0 : 1 / 0;
                    n += i(2, e),
                        h -= s
                }
                return (l ? -1 : 1) * n * i(2, h - e)
            }
        }
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(27);
        i({
            target: "ArrayBuffer",
            stat: !0,
            forced: !r.NATIVE_ARRAY_BUFFER_VIEWS
        }, {
            isView: r.isView
        })
    }
    , function(t, e, n) {
        "use strict";
        var i = n(3)
            , r = n(12)
            , a = n(136)
            , o = n(22)
            , s = n(77)
            , c = n(26)
            , u = n(72)
            , l = a.ArrayBuffer
            , h = a.DataView
            , p = l.prototype.slice;
        i({
            target: "ArrayBuffer",
            proto: !0,
            unsafe: !0,
            forced: r((function() {
                    return !new l(2).slice(1, void 0).byteLength
                }
            ))
        }, {
            slice: function(t, e) {
                if (void 0 !== p && void 0 === e)
                    return p.call(o(this), t);
                for (var n = o(this).byteLength, i = s(t, n), r = s(void 0 === e ? n : e, n), a = new (u(this, l))(c(r - i)), f = new h(this), d = new h(a), m = 0; i < r; )
                    d.setUint8(m++, f.getUint8(i++));
                return a
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(136);
        i({
            global: !0,
            forced: !n(186)
        }, {
            DataView: r.DataView
        })
    }
    , function(t, e, n) {
        n(73)("Int8", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        var i = n(56);
        t.exports = function(t) {
            var e = i(t);
            if (e < 0)
                throw RangeError("The argument can't be less than 0");
            return e
        }
    }
    , function(t, e, n) {
        n(73)("Uint8", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Uint8", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ), !0)
    }
    , function(t, e, n) {
        n(73)("Int16", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Uint16", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Int32", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Uint32", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Float32", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        n(73)("Float64", (function(t) {
                return function(e, n, i) {
                    return t(this, e, n, i)
                }
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(187);
        (0,
            n(27).exportTypedArrayStaticMethod)("from", n(234), i)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(187)
            , a = i.aTypedArrayConstructor;
        (0,
            i.exportTypedArrayStaticMethod)("of", (function() {
                for (var t = 0, e = arguments.length, n = new (a(this))(e); t < e; )
                    n[t] = arguments[t++];
                return n
            }
        ), r)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(213)
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("copyWithin", (function(t, e, n) {
                return r.call(a(this), t, e, 2 < arguments.length ? n : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).every
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("every", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(174)
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("fill", (function(t) {
                return r.apply(a(this), arguments)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).filter
            , a = n(72)
            , o = i.aTypedArray
            , s = i.aTypedArrayConstructor;
        (0,
            i.exportTypedArrayMethod)("filter", (function(t, e) {
                for (var n = r(o(this), t, 1 < arguments.length ? e : void 0), i = a(this, this.constructor), c = 0, u = n.length, l = new (s(i))(u); c < u; )
                    l[c] = n[c++];
                return l
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).find
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("find", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).findIndex
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("findIndex", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).forEach
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("forEach", (function(t, e) {
                r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(104).includes
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("includes", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(104).indexOf
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("indexOf", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        function i() {
            return u.call(p(this))
        }
        var r = n(16)
            , a = n(27)
            , o = n(124)
            , s = n(25)("iterator")
            , c = r.Uint8Array
            , u = o.values
            , l = o.keys
            , h = o.entries
            , p = a.aTypedArray
            , f = a.exportTypedArrayMethod
            , d = c && c.prototype[s]
            , m = !!d && ("values" == d.name || null == d.name);
        f("entries", (function() {
                return h.call(p(this))
            }
        )),
            f("keys", (function() {
                    return l.call(p(this))
                }
            )),
            f("values", i, !m),
            f(s, i, !m)
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = i.aTypedArray
            , a = i.exportTypedArrayMethod
            , o = [].join;
        a("join", (function(t) {
                return o.apply(r(this), arguments)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(216)
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("lastIndexOf", (function(t) {
                return r.apply(a(this), arguments)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).map
            , a = n(72)
            , o = i.aTypedArray
            , s = i.aTypedArrayConstructor;
        (0,
            i.exportTypedArrayMethod)("map", (function(t, e) {
                return r(o(this), t, 1 < arguments.length ? e : void 0, (function(t, e) {
                        return new (s(a(t, t.constructor)))(e)
                    }
                ))
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(123).left
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("reduce", (function(t, e) {
                return r(a(this), t, arguments.length, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(123).right
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("reduceRight", (function(t, e) {
                return r(a(this), t, arguments.length, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = i.aTypedArray
            , a = i.exportTypedArrayMethod
            , o = Math.floor;
        a("reverse", (function() {
                for (var t, e = r(this).length, n = o(e / 2), i = 0; i < n; )
                    t = this[i],
                        this[i++] = this[--e],
                        this[e] = t;
                return this
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(26)
            , a = n(233)
            , o = n(32)
            , s = n(12)
            , c = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("set", (function(t, e) {
                c(this);
                var n = a(1 < arguments.length ? e : void 0, 1)
                    , i = this.length
                    , s = o(t)
                    , u = r(s.length)
                    , l = 0;
                if (i < u + n)
                    throw RangeError("Wrong length");
                for (; l < u; )
                    this[n + l] = s[l++]
            }
        ), s((function() {
                new Int8Array(1).set({})
            }
        )))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(72)
            , a = n(12)
            , o = i.aTypedArray
            , s = i.aTypedArrayConstructor
            , c = i.exportTypedArrayMethod
            , u = [].slice;
        c("slice", (function(t, e) {
                for (var n = u.call(o(this), t, e), i = r(this, this.constructor), a = 0, c = n.length, l = new (s(i))(c); a < c; )
                    l[a] = n[a++];
                return l
            }
        ), a((function() {
                new Int8Array(1).slice()
            }
        )))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(35).some
            , a = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("some", (function(t, e) {
                return r(a(this), t, 1 < arguments.length ? e : void 0)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = i.aTypedArray
            , a = i.exportTypedArrayMethod
            , o = [].sort;
        a("sort", (function(t) {
                return o.call(r(this), t)
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27)
            , r = n(26)
            , a = n(77)
            , o = n(72)
            , s = i.aTypedArray;
        (0,
            i.exportTypedArrayMethod)("subarray", (function(t, e) {
                var n = s(this)
                    , i = n.length
                    , c = a(t, i);
                return new (o(n, n.constructor))(n.buffer,n.byteOffset + c * n.BYTES_PER_ELEMENT,r((void 0 === e ? i : a(e, i)) - c))
            }
        ))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(16)
            , r = n(27)
            , a = n(12)
            , o = i.Int8Array
            , s = r.aTypedArray
            , c = r.exportTypedArrayMethod
            , u = [].toLocaleString
            , l = [].slice
            , h = !!o && a((function() {
                u.call(new o(1))
            }
        ));
        c("toLocaleString", (function() {
                return u.apply(h ? l.call(s(this)) : s(this), arguments)
            }
        ), a((function() {
                return [1, 2].toLocaleString() != new o([1, 2]).toLocaleString()
            }
        )) || !a((function() {
                o.prototype.toLocaleString.call([1, 2])
            }
        )))
    }
    , function(t, e, n) {
        "use strict";
        var i = n(27).exportTypedArrayMethod
            , r = n(12)
            , a = n(16).Uint8Array
            , o = a && a.prototype || {}
            , s = [].toString
            , c = [].join;
        r((function() {
                s.call({})
            }
        )) && (s = function() {
                return c.call(this)
            }
        ),
            i("toString", s, o.toString != s)
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(55)
            , a = n(47)
            , o = n(22)
            , s = n(12)
            , c = r("Reflect", "apply")
            , u = Function.apply;
        i({
            target: "Reflect",
            stat: !0,
            forced: !s((function() {
                    c((function() {}
                    ))
                }
            ))
        }, {
            apply: function(t, e, n) {
                return a(t),
                    o(n),
                    c ? c(t, e, n) : u.call(t, e, n)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(55)
            , a = n(47)
            , o = n(22)
            , s = n(21)
            , c = n(70)
            , u = n(211)
            , l = n(12)
            , h = r("Reflect", "construct")
            , p = l((function() {
                function t() {}
                return !(h((function() {}
                ), [], t)instanceof t)
            }
        ))
            , f = !l((function() {
                h((function() {}
                ))
            }
        ))
            , d = p || f;
        i({
            target: "Reflect",
            stat: !0,
            forced: d,
            sham: d
        }, {
            construct: function(t, e, n) {
                a(t),
                    o(e);
                var i = arguments.length < 3 ? t : a(n);
                if (f && !p)
                    return h(t, e, i);
                if (t == i) {
                    switch (e.length) {
                        case 0:
                            return new t;
                        case 1:
                            return new t(e[0]);
                        case 2:
                            return new t(e[0],e[1]);
                        case 3:
                            return new t(e[0],e[1],e[2]);
                        case 4:
                            return new t(e[0],e[1],e[2],e[3])
                    }
                    var r = [null];
                    return r.push.apply(r, e),
                        new (u.apply(t, r))
                }
                var l = i.prototype
                    , d = c(s(l) ? l : Object.prototype)
                    , m = Function.apply.call(t, d, e);
                return s(m) ? m : d
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(23)
            , a = n(22)
            , o = n(60)
            , s = n(30);
        i({
            target: "Reflect",
            stat: !0,
            forced: n(12)((function() {
                    Reflect.defineProperty(s.f({}, 1, {
                        value: 1
                    }), 1, {
                        value: 2
                    })
                }
            )),
            sham: !r
        }, {
            defineProperty: function(t, e, n) {
                a(t);
                var i = o(e, !0);
                a(n);
                try {
                    return s.f(t, i, n),
                        !0
                } catch (t) {
                    return !1
                }
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(22)
            , a = n(38).f;
        i({
            target: "Reflect",
            stat: !0
        }, {
            deleteProperty: function(t, e) {
                var n = a(r(t), e);
                return !(n && !n.configurable) && delete t[e]
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(21)
            , a = n(22)
            , o = n(33)
            , s = n(38)
            , c = n(62);
        i({
            target: "Reflect",
            stat: !0
        }, {
            get: function t(e, n) {
                var i, u, l = arguments.length < 3 ? e : arguments[2];
                return a(e) === l ? e[n] : (i = s.f(e, n)) ? o(i, "value") ? i.value : void 0 === i.get ? void 0 : i.get.call(l) : r(u = c(e)) ? t(u, n, l) : void 0
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(23)
            , a = n(22)
            , o = n(38);
        i({
            target: "Reflect",
            stat: !0,
            sham: !r
        }, {
            getOwnPropertyDescriptor: function(t, e) {
                return o.f(a(t), e)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(22)
            , a = n(62);
        i({
            target: "Reflect",
            stat: !0,
            sham: !n(172)
        }, {
            getPrototypeOf: function(t) {
                return a(r(t))
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Reflect",
            stat: !0
        }, {
            has: function(t, e) {
                return e in t
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(22)
            , a = Object.isExtensible;
        i({
            target: "Reflect",
            stat: !0
        }, {
            isExtensible: function(t) {
                return r(t),
                !a || a(t)
            }
        })
    }
    , function(t, e, n) {
        n(3)({
            target: "Reflect",
            stat: !0
        }, {
            ownKeys: n(165)
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(55)
            , a = n(22);
        i({
            target: "Reflect",
            stat: !0,
            sham: !n(108)
        }, {
            preventExtensions: function(t) {
                a(t);
                try {
                    var e = r("Object", "preventExtensions");
                    return e && e(t),
                        !0
                } catch (t) {
                    return !1
                }
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(22)
            , a = n(21)
            , o = n(33)
            , s = n(12)
            , c = n(30)
            , u = n(38)
            , l = n(62)
            , h = n(76);
        i({
            target: "Reflect",
            stat: !0,
            forced: s((function() {
                    var t = c.f({}, "a", {
                        configurable: !0
                    });
                    return !1 !== Reflect.set(l(t), "a", 1, t)
                }
            ))
        }, {
            set: function t(e, n, i) {
                var s, p, f = arguments.length < 4 ? e : arguments[3], d = u.f(r(e), n);
                if (!d) {
                    if (a(p = l(e)))
                        return t(p, n, i, f);
                    d = h(0)
                }
                if (o(d, "value")) {
                    if (!1 === d.writable || !a(f))
                        return !1;
                    if (s = u.f(f, n)) {
                        if (s.get || s.set || !1 === s.writable)
                            return !1;
                        s.value = i,
                            c.f(f, n, s)
                    } else
                        c.f(f, n, h(0, i));
                    return !0
                }
                return void 0 !== d.set && (d.set.call(f, i),
                    !0)
            }
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(22)
            , a = n(210)
            , o = n(89);
        o && i({
            target: "Reflect",
            stat: !0
        }, {
            setPrototypeOf: function(t, e) {
                r(t),
                    a(e);
                try {
                    return o(t, e),
                        !0
                } catch (t) {
                    return !1
                }
            }
        })
    }
    , function(t, e, n) {
        n(634),
            n(635),
            n(636),
            n(637),
            n(638),
            n(639),
            n(642),
            n(237);
        var i = n(103);
        t.exports = i
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(235)
            , a = n(215)
            , o = n(43);
        for (var s in r) {
            var c = i[s]
                , u = c && c.prototype;
            if (u && u.forEach !== a)
                try {
                    o(u, "forEach", a)
                } catch (t) {
                    u.forEach = a
                }
        }
    }
    , function(t, e, n) {
        var i = n(16)
            , r = n(235)
            , a = n(124)
            , o = n(43)
            , s = n(25)
            , c = s("iterator")
            , u = s("toStringTag")
            , l = a.values;
        for (var h in r) {
            var p = i[h]
                , f = p && p.prototype;
            if (f) {
                if (f[c] !== l)
                    try {
                        o(f, c, l)
                    } catch (t) {
                        f[c] = l
                    }
                if (f[u] || o(f, u, h),
                    r[h])
                    for (var d in a)
                        if (f[d] !== a[d])
                            try {
                                o(f, d, a[d])
                            } catch (t) {
                                f[d] = a[d]
                            }
            }
        }
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(16)
            , a = n(184);
        i({
            global: !0,
            bind: !0,
            enumerable: !0,
            forced: !r.setImmediate || !r.clearImmediate
        }, {
            setImmediate: a.set,
            clearImmediate: a.clear
        })
    }
    , function(t, e, n) {
        var i = n(3)
            , r = n(16)
            , a = n(227)
            , o = n(54)
            , s = r.process
            , c = "process" == o(s);
        i({
            global: !0,
            enumerable: !0,
            noTargetGet: !0
        }, {
            queueMicrotask: function(t) {
                var e = c && s.domain;
                a(e ? e.bind(t) : t)
            }
        })
    }
    , function(t, e, n) {
        function i(t) {
            return function(e, n) {
                var i = 2 < arguments.length
                    , r = i ? s.call(arguments, 2) : void 0;
                return t(i ? function() {
                        ("function" == typeof e ? e : Function(e)).apply(this, r)
                    }
                    : e, n)
            }
        }
        var r = n(3)
            , a = n(16)
            , o = n(122)
            , s = [].slice;
        r({
            global: !0,
            bind: !0,
            forced: /MSIE .\./.test(o)
        }, {
            setTimeout: i(a.setTimeout),
            setInterval: i(a.setInterval)
        })
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        function r(t, e) {
            var n, i, r;
            if ("[" == e.charAt(0)) {
                if ("]" != e.charAt(e.length - 1))
                    return F;
                if (!(n = K(e.slice(1, -1))))
                    return F;
                t.host = n
            } else if (rt(t)) {
                if (e = A(e),
                    q.test(e))
                    return F;
                if (null === (n = J(e)))
                    return F;
                t.host = n
            } else {
                if (X.test(e))
                    return F;
                for (n = "",
                         i = w(e),
                         r = 0; r < i.length; r++)
                    n += nt(i[r], Q);
                t.host = n
            }
        }
        function a(t) {
            var e, n, r, a;
            if ("number" == typeof t) {
                for (e = [],
                         n = 0; n < 4; n++)
                    e.unshift(t % 256),
                        t = D(t / 256);
                return e.join(".")
            }
            if ("object" != i(t))
                return t;
            for (e = "",
                     r = function(t) {
                         for (var e = null, n = 1, i = null, r = 0, a = 0; a < 8; a++)
                             0 !== t[a] ? (n < r && (e = i,
                                 n = r),
                                 i = null,
                                 r = 0) : (null === i && (i = a),
                                 ++r);
                         return n < r && (e = i,
                             n = r),
                             e
                     }(t),
                     n = 0; n < 8; n++)
                a && 0 === t[n] || (a = a && !1,
                    r === n ? (e += n ? ":" : "::",
                        a = !0) : (e += t[n].toString(16),
                    n < 7 && (e += ":")));
            return "[" + e + "]"
        }
        function o(t) {
            return "" != t.username || "" != t.password
        }
        function s(t) {
            return !t.host || t.cannotBeABaseURL || "file" == t.scheme
        }
        function c(t, e) {
            var n;
            return 2 == t.length && U.test(t.charAt(0)) && (":" == (n = t.charAt(1)) || !e && "|" == n)
        }
        function u(t) {
            var e;
            return 1 < t.length && c(t.slice(0, 2)) && (2 == t.length || "/" === (e = t.charAt(2)) || "\\" === e || "?" === e || "#" === e)
        }
        function l(t) {
            var e = t.path
                , n = e.length;
            !n || "file" == t.scheme && 1 == n && c(e[0], !0) || e.pop()
        }
        function h(t, e, n, i) {
            var a, s, h, p, d, m, g = n || at, v = 0, y = "", x = !1, _ = !1, M = !1;
            for (n || (t.scheme = "",
                t.username = "",
                t.password = "",
                t.host = null,
                t.port = null,
                t.path = [],
                t.query = null,
                t.fragment = null,
                t.cannotBeABaseURL = !1,
                e = e.replace(Y, "")),
                     e = e.replace(Z, ""),
                     a = w(e); v <= a.length; ) {
                switch (s = a[v],
                    g) {
                    case at:
                        if (!s || !U.test(s)) {
                            if (n)
                                return z;
                            g = st;
                            continue
                        }
                        y += s.toLowerCase(),
                            g = ot;
                        break;
                    case ot:
                        if (s && (G.test(s) || "+" == s || "-" == s || "." == s))
                            y += s.toLowerCase();
                        else {
                            if (":" != s) {
                                if (n)
                                    return z;
                                y = "",
                                    g = st,
                                    v = 0;
                                continue
                            }
                            if (n && (rt(t) != b(it, y) || "file" == y && (o(t) || null !== t.port) || "file" == t.scheme && !t.host))
                                return;
                            if (t.scheme = y,
                                n)
                                return void (rt(t) && it[t.scheme] == t.port && (t.port = null));
                            y = "",
                                "file" == t.scheme ? g = yt : rt(t) && i && i.scheme == t.scheme ? g = ct : rt(t) ? g = pt : "/" == a[v + 1] ? (g = ut,
                                    v++) : (t.cannotBeABaseURL = !0,
                                    t.path.push(""),
                                    g = wt)
                        }
                        break;
                    case st:
                        if (!i || i.cannotBeABaseURL && "#" != s)
                            return z;
                        if (i.cannotBeABaseURL && "#" == s) {
                            t.scheme = i.scheme,
                                t.path = i.path.slice(),
                                t.query = i.query,
                                t.fragment = "",
                                t.cannotBeABaseURL = !0,
                                g = At;
                            break
                        }
                        g = "file" == i.scheme ? yt : lt;
                        continue;
                    case ct:
                        if ("/" != s || "/" != a[v + 1]) {
                            g = lt;
                            continue
                        }
                        g = ft,
                            v++;
                        break;
                    case ut:
                        if ("/" == s) {
                            g = dt;
                            break
                        }
                        g = Mt;
                        continue;
                    case lt:
                        if (t.scheme = i.scheme,
                        s == f)
                            t.username = i.username,
                                t.password = i.password,
                                t.host = i.host,
                                t.port = i.port,
                                t.path = i.path.slice(),
                                t.query = i.query;
                        else if ("/" == s || "\\" == s && rt(t))
                            g = ht;
                        else if ("?" == s)
                            t.username = i.username,
                                t.password = i.password,
                                t.host = i.host,
                                t.port = i.port,
                                t.path = i.path.slice(),
                                t.query = "",
                                g = St;
                        else {
                            if ("#" != s) {
                                t.username = i.username,
                                    t.password = i.password,
                                    t.host = i.host,
                                    t.port = i.port,
                                    t.path = i.path.slice(),
                                    t.path.pop(),
                                    g = Mt;
                                continue
                            }
                            t.username = i.username,
                                t.password = i.password,
                                t.host = i.host,
                                t.port = i.port,
                                t.path = i.path.slice(),
                                t.query = i.query,
                                t.fragment = "",
                                g = At
                        }
                        break;
                    case ht:
                        if (!rt(t) || "/" != s && "\\" != s) {
                            if ("/" != s) {
                                t.username = i.username,
                                    t.password = i.password,
                                    t.host = i.host,
                                    t.port = i.port,
                                    g = Mt;
                                continue
                            }
                            g = dt
                        } else
                            g = ft;
                        break;
                    case pt:
                        if (g = ft,
                        "/" != s || "/" != y.charAt(v + 1))
                            continue;
                        v++;
                        break;
                    case ft:
                        if ("/" == s || "\\" == s)
                            break;
                        g = dt;
                        continue;
                    case dt:
                        if ("@" == s) {
                            x && (y = "%40" + y),
                                x = !0,
                                h = w(y);
                            for (var S = 0; S < h.length; S++) {
                                var A = h[S];
                                if (":" != A || M) {
                                    var T = nt(A, et);
                                    M ? t.password += T : t.username += T
                                } else
                                    M = !0
                            }
                            y = ""
                        } else if (s == f || "/" == s || "?" == s || "#" == s || "\\" == s && rt(t)) {
                            if (x && "" == y)
                                return "Invalid authority";
                            v -= w(y).length + 1,
                                y = "",
                                g = mt
                        } else
                            y += s;
                        break;
                    case mt:
                    case gt:
                        if (n && "file" == t.scheme) {
                            g = _t;
                            continue
                        }
                        if (":" != s || _) {
                            if (s == f || "/" == s || "?" == s || "#" == s || "\\" == s && rt(t)) {
                                if (rt(t) && "" == y)
                                    return F;
                                if (n && "" == y && (o(t) || null !== t.port))
                                    return;
                                if (p = r(t, y))
                                    return p;
                                if (y = "",
                                    g = bt,
                                    n)
                                    return;
                                continue
                            }
                            "[" == s ? _ = !0 : "]" == s && (_ = !1),
                                y += s
                        } else {
                            if ("" == y)
                                return F;
                            if (p = r(t, y))
                                return p;
                            if (y = "",
                                g = vt,
                            n == gt)
                                return
                        }
                        break;
                    case vt:
                        if (!k.test(s)) {
                            if (s == f || "/" == s || "?" == s || "#" == s || "\\" == s && rt(t) || n) {
                                if ("" != y) {
                                    var L = parseInt(y, 10);
                                    if (65535 < L)
                                        return B;
                                    t.port = rt(t) && L === it[t.scheme] ? null : L,
                                        y = ""
                                }
                                if (n)
                                    return;
                                g = bt;
                                continue
                            }
                            return B
                        }
                        y += s;
                        break;
                    case yt:
                        if (t.scheme = "file",
                        "/" == s || "\\" == s)
                            g = xt;
                        else {
                            if (!i || "file" != i.scheme) {
                                g = Mt;
                                continue
                            }
                            if (s == f)
                                t.host = i.host,
                                    t.path = i.path.slice(),
                                    t.query = i.query;
                            else if ("?" == s)
                                t.host = i.host,
                                    t.path = i.path.slice(),
                                    t.query = "",
                                    g = St;
                            else {
                                if ("#" != s) {
                                    u(a.slice(v).join("")) || (t.host = i.host,
                                        t.path = i.path.slice(),
                                        l(t)),
                                        g = Mt;
                                    continue
                                }
                                t.host = i.host,
                                    t.path = i.path.slice(),
                                    t.query = i.query,
                                    t.fragment = "",
                                    g = At
                            }
                        }
                        break;
                    case xt:
                        if ("/" == s || "\\" == s) {
                            g = _t;
                            break
                        }
                        i && "file" == i.scheme && !u(a.slice(v).join("")) && (c(i.path[0], !0) ? t.path.push(i.path[0]) : t.host = i.host),
                            g = Mt;
                        continue;
                    case _t:
                        if (s == f || "/" == s || "\\" == s || "?" == s || "#" == s) {
                            if (!n && c(y))
                                g = Mt;
                            else if ("" == y) {
                                if (t.host = "",
                                    n)
                                    return;
                                g = bt
                            } else {
                                if (p = r(t, y))
                                    return p;
                                if ("localhost" == t.host && (t.host = ""),
                                    n)
                                    return;
                                y = "",
                                    g = bt
                            }
                            continue
                        }
                        y += s;
                        break;
                    case bt:
                        if (rt(t)) {
                            if (g = Mt,
                            "/" != s && "\\" != s)
                                continue
                        } else if (n || "?" != s)
                            if (n || "#" != s) {
                                if (s != f && (g = Mt,
                                "/" != s))
                                    continue
                            } else
                                t.fragment = "",
                                    g = At;
                        else
                            t.query = "",
                                g = St;
                        break;
                    case Mt:
                        if (s == f || "/" == s || "\\" == s && rt(t) || !n && ("?" == s || "#" == s)) {
                            if (".." === (m = (m = y).toLowerCase()) || "%2e." === m || ".%2e" === m || "%2e%2e" === m ? (l(t),
                            "/" == s || "\\" == s && rt(t) || t.path.push("")) : "." === (d = y) || "%2e" === d.toLowerCase() ? "/" == s || "\\" == s && rt(t) || t.path.push("") : ("file" == t.scheme && !t.path.length && c(y) && (t.host && (t.host = ""),
                                y = y.charAt(0) + ":"),
                                t.path.push(y)),
                                y = "",
                            "file" == t.scheme && (s == f || "?" == s || "#" == s))
                                for (; 1 < t.path.length && "" === t.path[0]; )
                                    t.path.shift();
                            "?" == s ? (t.query = "",
                                g = St) : "#" == s && (t.fragment = "",
                                g = At)
                        } else
                            y += nt(s, tt);
                        break;
                    case wt:
                        "?" == s ? (t.query = "",
                            g = St) : "#" == s ? (t.fragment = "",
                            g = At) : s != f && (t.path[0] += nt(s, Q));
                        break;
                    case St:
                        n || "#" != s ? s != f && ("'" == s && rt(t) ? t.query += "%27" : t.query += "#" == s ? "%23" : nt(s, Q)) : (t.fragment = "",
                            g = At);
                        break;
                    case At:
                        s != f && (t.fragment += nt(s, $))
                }
                v++
            }
        }
        function p(t, e) {
            return {
                get: t,
                set: e,
                configurable: !0,
                enumerable: !0
            }
        }
        n(219);
        var f, d = n(3), m = n(23), g = n(236), v = n(16), y = n(169), x = n(39), _ = n(80), b = n(33), M = n(206), w = n(212), S = n(125).codeAt, A = n(640), T = n(65), L = n(237), E = n(44), P = v.URL, C = L.URLSearchParams, O = L.getState, I = E.set, N = E.getterFor("URL"), D = Math.floor, R = Math.pow, z = "Invalid scheme", F = "Invalid host", B = "Invalid port", U = /[A-Za-z]/, G = /[\d+\-.A-Za-z]/, k = /\d/, j = /^(0x|0X)/, V = /^[0-7]+$/, W = /^\d+$/, H = /^[\dA-Fa-f]+$/, q = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, X = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, Y = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, Z = /[\u0009\u000A\u000D]/g, J = function(t) {
            var e, n, i, r, a, o, s, c = t.split(".");
            if (c.length && "" == c[c.length - 1] && c.pop(),
            4 < (e = c.length))
                return t;
            for (n = [],
                     i = 0; i < e; i++) {
                if ("" == (r = c[i]))
                    return t;
                if (a = 10,
                1 < r.length && "0" == r.charAt(0) && (a = j.test(r) ? 16 : 8,
                    r = r.slice(8 == a ? 1 : 2)),
                "" === r)
                    o = 0;
                else {
                    if (!(10 == a ? W : 8 == a ? V : H).test(r))
                        return t;
                    o = parseInt(r, a)
                }
                n.push(o)
            }
            for (i = 0; i < e; i++)
                if (o = n[i],
                i == e - 1) {
                    if (o >= R(256, 5 - e))
                        return null
                } else if (255 < o)
                    return null;
            for (s = n.pop(),
                     i = 0; i < n.length; i++)
                s += n[i] * R(256, 3 - i);
            return s
        }, K = function(t) {
            function e() {
                return t.charAt(p)
            }
            var n, i, r, a, o, s, c, u = [0, 0, 0, 0, 0, 0, 0, 0], l = 0, h = null, p = 0;
            if (":" == e()) {
                if (":" != t.charAt(1))
                    return;
                p += 2,
                    h = ++l
            }
            for (; e(); ) {
                if (8 == l)
                    return;
                if (":" != e()) {
                    for (n = i = 0; i < 4 && H.test(e()); )
                        n = 16 * n + parseInt(e(), 16),
                            p++,
                            i++;
                    if ("." == e()) {
                        if (0 == i)
                            return;
                        if (p -= i,
                        6 < l)
                            return;
                        for (r = 0; e(); ) {
                            if (a = null,
                            0 < r) {
                                if (!("." == e() && r < 4))
                                    return;
                                p++
                            }
                            if (!k.test(e()))
                                return;
                            for (; k.test(e()); ) {
                                if (o = parseInt(e(), 10),
                                null === a)
                                    a = o;
                                else {
                                    if (0 == a)
                                        return;
                                    a = 10 * a + o
                                }
                                if (255 < a)
                                    return;
                                p++
                            }
                            u[l] = 256 * u[l] + a,
                            2 != ++r && 4 != r || l++
                        }
                        if (4 != r)
                            return;
                        break
                    }
                    if (":" == e()) {
                        if (p++,
                            !e())
                            return
                    } else if (e())
                        return;
                    u[l++] = n
                } else {
                    if (null !== h)
                        return;
                    p++,
                        h = ++l
                }
            }
            if (null !== h)
                for (s = l - h,
                         l = 7; 0 != l && 0 < s; )
                    c = u[l],
                        u[l--] = u[h + s - 1],
                        u[h + --s] = c;
            else if (8 != l)
                return;
            return u
        }, Q = {}, $ = M({}, Q, {
            " ": 1,
            '"': 1,
            "<": 1,
            ">": 1,
            "`": 1
        }), tt = M({}, $, {
            "#": 1,
            "?": 1,
            "{": 1,
            "}": 1
        }), et = M({}, tt, {
            "/": 1,
            ":": 1,
            ";": 1,
            "=": 1,
            "@": 1,
            "[": 1,
            "\\": 1,
            "]": 1,
            "^": 1,
            "|": 1
        }), nt = function(t, e) {
            var n = S(t, 0);
            return 32 < n && n < 127 && !b(e, t) ? t : encodeURIComponent(t)
        }, it = {
            ftp: 21,
            file: null,
            http: 80,
            https: 443,
            ws: 80,
            wss: 443
        }, rt = function(t) {
            return b(it, t.scheme)
        }, at = {}, ot = {}, st = {}, ct = {}, ut = {}, lt = {}, ht = {}, pt = {}, ft = {}, dt = {}, mt = {}, gt = {}, vt = {}, yt = {}, xt = {}, _t = {}, bt = {}, Mt = {}, wt = {}, St = {}, At = {}, Tt = function(t, e) {
            var n, i, r = _(this, Tt, "URL"), a = 1 < arguments.length ? e : void 0, o = String(t), s = I(r, {
                type: "URL"
            });
            if (void 0 !== a)
                if (a instanceof Tt)
                    n = N(a);
                else if (i = h(n = {}, String(a)))
                    throw TypeError(i);
            if (i = h(s, o, null, n))
                throw TypeError(i);
            var c = s.searchParams = new C
                , u = O(c);
            u.updateSearchParams(s.query),
                u.updateURL = function() {
                    s.query = String(c) || null
                }
                ,
            m || (r.href = Et.call(r),
                r.origin = Pt.call(r),
                r.protocol = Ct.call(r),
                r.username = Ot.call(r),
                r.password = It.call(r),
                r.host = Nt.call(r),
                r.hostname = Dt.call(r),
                r.port = Rt.call(r),
                r.pathname = zt.call(r),
                r.search = Ft.call(r),
                r.searchParams = Bt.call(r),
                r.hash = Ut.call(r))
        }, Lt = Tt.prototype, Et = function() {
            var t = N(this)
                , e = t.scheme
                , n = t.username
                , i = t.password
                , r = t.host
                , s = t.port
                , c = t.path
                , u = t.query
                , l = t.fragment
                , h = e + ":";
            return null !== r ? (h += "//",
            o(t) && (h += n + (i ? ":" + i : "") + "@"),
                h += a(r),
            null !== s && (h += ":" + s)) : "file" == e && (h += "//"),
                h += t.cannotBeABaseURL ? c[0] : c.length ? "/" + c.join("/") : "",
            null !== u && (h += "?" + u),
            null !== l && (h += "#" + l),
                h
        }, Pt = function() {
            var t = N(this)
                , e = t.scheme
                , n = t.port;
            if ("blob" == e)
                try {
                    return new URL(e.path[0]).origin
                } catch (t) {
                    return "null"
                }
            return "file" != e && rt(t) ? e + "://" + a(t.host) + (null !== n ? ":" + n : "") : "null"
        }, Ct = function() {
            return N(this).scheme + ":"
        }, Ot = function() {
            return N(this).username
        }, It = function() {
            return N(this).password
        }, Nt = function() {
            var t = N(this)
                , e = t.host
                , n = t.port;
            return null === e ? "" : null === n ? a(e) : a(e) + ":" + n
        }, Dt = function() {
            var t = N(this).host;
            return null === t ? "" : a(t)
        }, Rt = function() {
            var t = N(this).port;
            return null === t ? "" : String(t)
        }, zt = function() {
            var t = N(this)
                , e = t.path;
            return t.cannotBeABaseURL ? e[0] : e.length ? "/" + e.join("/") : ""
        }, Ft = function() {
            var t = N(this).query;
            return t ? "?" + t : ""
        }, Bt = function() {
            return N(this).searchParams
        }, Ut = function() {
            var t = N(this).fragment;
            return t ? "#" + t : ""
        };
        if (m && y(Lt, {
            href: p(Et, (function(t) {
                    var e = N(this)
                        , n = h(e, String(t));
                    if (n)
                        throw TypeError(n);
                    O(e.searchParams).updateSearchParams(e.query)
                }
            )),
            origin: p(Pt),
            protocol: p(Ct, (function(t) {
                    h(N(this), String(t) + ":", at)
                }
            )),
            username: p(Ot, (function(t) {
                    var e = N(this)
                        , n = w(String(t));
                    if (!s(e)) {
                        e.username = "";
                        for (var i = 0; i < n.length; i++)
                            e.username += nt(n[i], et)
                    }
                }
            )),
            password: p(It, (function(t) {
                    var e = N(this)
                        , n = w(String(t));
                    if (!s(e)) {
                        e.password = "";
                        for (var i = 0; i < n.length; i++)
                            e.password += nt(n[i], et)
                    }
                }
            )),
            host: p(Nt, (function(t) {
                    var e = N(this);
                    e.cannotBeABaseURL || h(e, String(t), mt)
                }
            )),
            hostname: p(Dt, (function(t) {
                    var e = N(this);
                    e.cannotBeABaseURL || h(e, String(t), gt)
                }
            )),
            port: p(Rt, (function(t) {
                    var e = N(this);
                    s(e) || ("" == (t = String(t)) ? e.port = null : h(e, t, vt))
                }
            )),
            pathname: p(zt, (function(t) {
                    var e = N(this);
                    e.cannotBeABaseURL || (e.path = [],
                        h(e, t + "", bt))
                }
            )),
            search: p(Ft, (function(t) {
                    var e = N(this);
                    "" == (t = String(t)) ? e.query = null : ("?" == t.charAt(0) && (t = t.slice(1)),
                        e.query = "",
                        h(e, t, St)),
                        O(e.searchParams).updateSearchParams(e.query)
                }
            )),
            searchParams: p(Bt),
            hash: p(Ut, (function(t) {
                    var e = N(this);
                    "" != (t = String(t)) ? ("#" == t.charAt(0) && (t = t.slice(1)),
                        e.fragment = "",
                        h(e, t, At)) : e.fragment = null
                }
            ))
        }),
            x(Lt, "toJSON", (function() {
                    return Et.call(this)
                }
            ), {
                enumerable: !0
            }),
            x(Lt, "toString", (function() {
                    return Et.call(this)
                }
            ), {
                enumerable: !0
            }),
            P) {
            var Gt = P.createObjectURL
                , kt = P.revokeObjectURL;
            Gt && x(Tt, "createObjectURL", (function(t) {
                    return Gt.apply(P, arguments)
                }
            )),
            kt && x(Tt, "revokeObjectURL", (function(t) {
                    return kt.apply(P, arguments)
                }
            ))
        }
        T(Tt, "URL"),
            d({
                global: !0,
                forced: !g,
                sham: !m
            }, {
                URL: Tt
            })
    }
    , function(t, e, n) {
        "use strict";
        function i(t) {
            return t + 22 + 75 * (t < 26)
        }
        function r(t, e, n) {
            var i = 0;
            for (t = n ? l(t / 700) : t >> 1,
                     t += l(t / e); 455 < t; i += 36)
                t = l(t / 35);
            return l(i + 36 * t / (t + 38))
        }
        function a(t) {
            var e, n, a = [], s = (t = function(t) {
                for (var e = [], n = 0, i = t.length; n < i; ) {
                    var r = t.charCodeAt(n++);
                    if (55296 <= r && r <= 56319 && n < i) {
                        var a = t.charCodeAt(n++);
                        56320 == (64512 & a) ? e.push(((1023 & r) << 10) + (1023 & a) + 65536) : (e.push(r),
                            n--)
                    } else
                        e.push(r)
                }
                return e
            }(t)).length, c = 128, p = 0, f = 72;
            for (e = 0; e < t.length; e++)
                (n = t[e]) < 128 && a.push(h(n));
            var d = a.length
                , m = d;
            for (d && a.push("-"); m < s; ) {
                var g = o;
                for (e = 0; e < t.length; e++)
                    c <= (n = t[e]) && n < g && (g = n);
                var v = m + 1;
                if (g - c > l((o - p) / v))
                    throw RangeError(u);
                for (p += (g - c) * v,
                         c = g,
                         e = 0; e < t.length; e++) {
                    if ((n = t[e]) < c && ++p > o)
                        throw RangeError(u);
                    if (n == c) {
                        for (var y = p, x = 36; ; x += 36) {
                            var _ = x <= f ? 1 : f + 26 <= x ? 26 : x - f;
                            if (y < _)
                                break;
                            var b = y - _
                                , M = 36 - _;
                            a.push(h(i(_ + b % M))),
                                y = l(b / M)
                        }
                        a.push(h(i(y))),
                            f = r(p, v, m == d),
                            p = 0,
                            ++m
                    }
                }
                ++p,
                    ++c
            }
            return a.join("")
        }
        var o = 2147483647
            , s = /[^\0-\u007E]/
            , c = /[.\u3002\uFF0E\uFF61]/g
            , u = "Overflow: input needs wider integers to process"
            , l = Math.floor
            , h = String.fromCharCode;
        t.exports = function(t) {
            var e, n, i = [], r = t.toLowerCase().replace(c, ".").split(".");
            for (e = 0; e < r.length; e++)
                n = r[e],
                    i.push(s.test(n) ? "xn--" + a(n) : n);
            return i.join(".")
        }
    }
    , function(t, e, n) {
        var i = n(22)
            , r = n(110);
        t.exports = function(t) {
            var e = r(t);
            if ("function" != typeof e)
                throw TypeError(String(t) + " is not iterable");
            return i(e.call(t))
        }
    }
    , function(t, e, n) {
        "use strict";
        n(3)({
            target: "URL",
            proto: !0,
            enumerable: !0
        }, {
            toJSON: function() {
                return URL.prototype.toString.call(this)
            }
        })
    }
    , function(t, e, n) {
        (function(t) {
                function e(t) {
                    return (e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                                return typeof t
                            }
                            : function(t) {
                                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                            }
                    )(t)
                }
                !function(n) {
                    "use strict";
                    var i, r = Object.prototype, a = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, s = o.iterator || "@@iterator", c = o.asyncIterator || "@@asyncIterator", u = o.toStringTag || "@@toStringTag", l = "object" === e(t), h = n.regeneratorRuntime;
                    if (h)
                        l && (t.exports = h);
                    else {
                        (h = n.regeneratorRuntime = l ? t.exports : {}).wrap = b;
                        var p = "suspendedStart"
                            , f = "suspendedYield"
                            , d = "executing"
                            , m = "completed"
                            , g = {}
                            , v = {};
                        v[s] = function() {
                            return this
                        }
                        ;
                        var y = Object.getPrototypeOf
                            , x = y && y(y(I([])));
                        x && x !== r && a.call(x, s) && (v = x);
                        var _ = A.prototype = w.prototype = Object.create(v);
                        S.prototype = _.constructor = A,
                            A.constructor = S,
                            A[u] = S.displayName = "GeneratorFunction",
                            h.isGeneratorFunction = function(t) {
                                var e = "function" == typeof t && t.constructor;
                                return !!e && (e === S || "GeneratorFunction" === (e.displayName || e.name))
                            }
                            ,
                            h.mark = function(t) {
                                return Object.setPrototypeOf ? Object.setPrototypeOf(t, A) : (t.__proto__ = A,
                                u in t || (t[u] = "GeneratorFunction")),
                                    t.prototype = Object.create(_),
                                    t
                            }
                            ,
                            h.awrap = function(t) {
                                return {
                                    __await: t
                                }
                            }
                            ,
                            T(L.prototype),
                            L.prototype[c] = function() {
                                return this
                            }
                            ,
                            h.AsyncIterator = L,
                            h.async = function(t, e, n, i) {
                                var r = new L(b(t, e, n, i));
                                return h.isGeneratorFunction(e) ? r : r.next().then((function(t) {
                                        return t.done ? t.value : r.next()
                                    }
                                ))
                            }
                            ,
                            T(_),
                            _[u] = "Generator",
                            _[s] = function() {
                                return this
                            }
                            ,
                            _.toString = function() {
                                return "[object Generator]"
                            }
                            ,
                            h.keys = function(t) {
                                var e = [];
                                for (var n in t)
                                    e.push(n);
                                return e.reverse(),
                                    function n() {
                                        for (; e.length; ) {
                                            var i = e.pop();
                                            if (i in t)
                                                return n.value = i,
                                                    n.done = !1,
                                                    n
                                        }
                                        return n.done = !0,
                                            n
                                    }
                            }
                            ,
                            h.values = I,
                            O.prototype = {
                                constructor: O,
                                reset: function(t) {
                                    if (this.prev = 0,
                                        this.next = 0,
                                        this.sent = this._sent = i,
                                        this.done = !1,
                                        this.delegate = null,
                                        this.method = "next",
                                        this.arg = i,
                                        this.tryEntries.forEach(C),
                                        !t)
                                        for (var e in this)
                                            "t" === e.charAt(0) && a.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = i)
                                },
                                stop: function() {
                                    this.done = !0;
                                    var t = this.tryEntries[0].completion;
                                    if ("throw" === t.type)
                                        throw t.arg;
                                    return this.rval
                                },
                                dispatchException: function(t) {
                                    if (this.done)
                                        throw t;
                                    var e = this;
                                    function n(n, r) {
                                        return s.type = "throw",
                                            s.arg = t,
                                            e.next = n,
                                        r && (e.method = "next",
                                            e.arg = i),
                                            !!r
                                    }
                                    for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                                        var o = this.tryEntries[r]
                                            , s = o.completion;
                                        if ("root" === o.tryLoc)
                                            return n("end");
                                        if (o.tryLoc <= this.prev) {
                                            var c = a.call(o, "catchLoc")
                                                , u = a.call(o, "finallyLoc");
                                            if (c && u) {
                                                if (this.prev < o.catchLoc)
                                                    return n(o.catchLoc, !0);
                                                if (this.prev < o.finallyLoc)
                                                    return n(o.finallyLoc)
                                            } else if (c) {
                                                if (this.prev < o.catchLoc)
                                                    return n(o.catchLoc, !0)
                                            } else {
                                                if (!u)
                                                    throw new Error("try statement without catch or finally");
                                                if (this.prev < o.finallyLoc)
                                                    return n(o.finallyLoc)
                                            }
                                        }
                                    }
                                },
                                abrupt: function(t, e) {
                                    for (var n = this.tryEntries.length - 1; 0 <= n; --n) {
                                        var i = this.tryEntries[n];
                                        if (i.tryLoc <= this.prev && a.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                                            var r = i;
                                            break
                                        }
                                    }
                                    r && ("break" === t || "continue" === t) && r.tryLoc <= e && e <= r.finallyLoc && (r = null);
                                    var o = r ? r.completion : {};
                                    return o.type = t,
                                        o.arg = e,
                                        r ? (this.method = "next",
                                            this.next = r.finallyLoc,
                                            g) : this.complete(o)
                                },
                                complete: function(t, e) {
                                    if ("throw" === t.type)
                                        throw t.arg;
                                    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                                        this.method = "return",
                                        this.next = "end") : "normal" === t.type && e && (this.next = e),
                                        g
                                },
                                finish: function(t) {
                                    for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                                        var n = this.tryEntries[e];
                                        if (n.finallyLoc === t)
                                            return this.complete(n.completion, n.afterLoc),
                                                C(n),
                                                g
                                    }
                                },
                                catch: function(t) {
                                    for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                                        var n = this.tryEntries[e];
                                        if (n.tryLoc === t) {
                                            var i = n.completion;
                                            if ("throw" === i.type) {
                                                var r = i.arg;
                                                C(n)
                                            }
                                            return r
                                        }
                                    }
                                    throw new Error("illegal catch attempt")
                                },
                                delegateYield: function(t, e, n) {
                                    return this.delegate = {
                                        iterator: I(t),
                                        resultName: e,
                                        nextLoc: n
                                    },
                                    "next" === this.method && (this.arg = i),
                                        g
                                }
                            }
                    }
                    function b(t, e, n, i) {
                        var r, a, o, s, c = e && e.prototype instanceof w ? e : w, u = Object.create(c.prototype), l = new O(i || []);
                        return u._invoke = (r = t,
                                a = n,
                                o = l,
                                s = p,
                                function(t, e) {
                                    if (s === d)
                                        throw new Error("Generator is already running");
                                    if (s === m) {
                                        if ("throw" === t)
                                            throw e;
                                        return N()
                                    }
                                    for (o.method = t,
                                             o.arg = e; ; ) {
                                        var n = o.delegate;
                                        if (n) {
                                            var i = E(n, o);
                                            if (i) {
                                                if (i === g)
                                                    continue;
                                                return i
                                            }
                                        }
                                        if ("next" === o.method)
                                            o.sent = o._sent = o.arg;
                                        else if ("throw" === o.method) {
                                            if (s === p)
                                                throw s = m,
                                                    o.arg;
                                            o.dispatchException(o.arg)
                                        } else
                                            "return" === o.method && o.abrupt("return", o.arg);
                                        s = d;
                                        var c = M(r, a, o);
                                        if ("normal" === c.type) {
                                            if (s = o.done ? m : f,
                                            c.arg === g)
                                                continue;
                                            return {
                                                value: c.arg,
                                                done: o.done
                                            }
                                        }
                                        "throw" === c.type && (s = m,
                                            o.method = "throw",
                                            o.arg = c.arg)
                                    }
                                }
                        ),
                            u
                    }
                    function M(t, e, n) {
                        try {
                            return {
                                type: "normal",
                                arg: t.call(e, n)
                            }
                        } catch (t) {
                            return {
                                type: "throw",
                                arg: t
                            }
                        }
                    }
                    function w() {}
                    function S() {}
                    function A() {}
                    function T(t) {
                        ["next", "throw", "return"].forEach((function(e) {
                                t[e] = function(t) {
                                    return this._invoke(e, t)
                                }
                            }
                        ))
                    }
                    function L(t) {
                        var n;
                        this._invoke = function(i, r) {
                            function o() {
                                return new Promise((function(n, o) {
                                        !function n(i, r, o, s) {
                                            var c = M(t[i], t, r);
                                            if ("throw" !== c.type) {
                                                var u = c.arg
                                                    , l = u.value;
                                                return l && "object" === e(l) && a.call(l, "__await") ? Promise.resolve(l.__await).then((function(t) {
                                                        n("next", t, o, s)
                                                    }
                                                ), (function(t) {
                                                        n("throw", t, o, s)
                                                    }
                                                )) : Promise.resolve(l).then((function(t) {
                                                        u.value = t,
                                                            o(u)
                                                    }
                                                ), s)
                                            }
                                            s(c.arg)
                                        }(i, r, n, o)
                                    }
                                ))
                            }
                            return n = n ? n.then(o, o) : o()
                        }
                    }
                    function E(t, e) {
                        var n = t.iterator[e.method];
                        if (n === i) {
                            if (e.delegate = null,
                            "throw" === e.method) {
                                if (t.iterator.return && (e.method = "return",
                                    e.arg = i,
                                    E(t, e),
                                "throw" === e.method))
                                    return g;
                                e.method = "throw",
                                    e.arg = new TypeError("The iterator does not provide a 'throw' method")
                            }
                            return g
                        }
                        var r = M(n, t.iterator, e.arg);
                        if ("throw" === r.type)
                            return e.method = "throw",
                                e.arg = r.arg,
                                e.delegate = null,
                                g;
                        var a = r.arg;
                        return a ? a.done ? (e[t.resultName] = a.value,
                            e.next = t.nextLoc,
                        "return" !== e.method && (e.method = "next",
                            e.arg = i),
                            e.delegate = null,
                            g) : a : (e.method = "throw",
                            e.arg = new TypeError("iterator result is not an object"),
                            e.delegate = null,
                            g)
                    }
                    function P(t) {
                        var e = {
                            tryLoc: t[0]
                        };
                        1 in t && (e.catchLoc = t[1]),
                        2 in t && (e.finallyLoc = t[2],
                            e.afterLoc = t[3]),
                            this.tryEntries.push(e)
                    }
                    function C(t) {
                        var e = t.completion || {};
                        e.type = "normal",
                            delete e.arg,
                            t.completion = e
                    }
                    function O(t) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }],
                            t.forEach(P, this),
                            this.reset(!0)
                    }
                    function I(t) {
                        if (t) {
                            var e = t[s];
                            if (e)
                                return e.call(t);
                            if ("function" == typeof t.next)
                                return t;
                            if (!isNaN(t.length)) {
                                var n = -1
                                    , r = function e() {
                                    for (; ++n < t.length; )
                                        if (a.call(t, n))
                                            return e.value = t[n],
                                                e.done = !1,
                                                e;
                                    return e.value = i,
                                        e.done = !0,
                                        e
                                };
                                return r.next = r
                            }
                        }
                        return {
                            next: N
                        }
                    }
                    function N() {
                        return {
                            value: i,
                            done: !0
                        }
                    }
                }(function() {
                    return this
                }() || Function("return this")())
            }
        ).call(this, n(117)(t))
    }
    , function(t, e) {
        window.bindAll = function(t, e) {
            return function(t, e) {
                for (var n = 0, i = e.length; n < i; n++)
                    t[e[n]] = t[e[n]].bind(t)
            }(t, e)
        }
    }
    , function(t, e) {
        window.getURLFileExtension = function(t) {
            return function(t) {
                if (!t)
                    return null;
                var e = t;
                return -1 === (e = (e = (e = e.substr(1 + e.lastIndexOf("/"))).split("?")[0]).split("#")[0]).lastIndexOf(".") ? null : e.substring(e.lastIndexOf(".") + 1).toLowerCase()
            }(t)
        }
    }
    , function(t, e) {
        window.isArray = function(t) {
            return !(!(e = t) || e.constructor !== Array);
            var e
        }
    }
    , function(t, e) {
        window.isObject = function(t) {
            return (e = t) === Object(e) && !isArray(e);
            var e
        }
    }
    , function(t, e) {
        if ("undefined" != typeof Element && !Element.prototype.matches) {
            var n = Element.prototype;
            n.matches = n.matchesSelector || n.mozMatchesSelector || n.msMatchesSelector || n.oMatchesSelector || n.webkitMatchesSelector
        }
        window.closest = function(t, e) {
            return function(t, e) {
                for (; t && 9 !== t.nodeType; ) {
                    if (t.matches(e))
                        return t;
                    t = t.parentNode
                }
            }(t, e)
        }
    }
    , function(t, e) {
        window.delegate = function(t, e, n, i, r) {
            return function(t, e, n, i, r) {
                var a = function(t, e, n, i) {
                    return function(n) {
                        n.delegateTarget = closest(n.target, e),
                        n.delegateTarget && i.call(t, n)
                    }
                }
                    .apply(this, arguments);
                return t.addEventListener(n, a, r),
                    {
                        destroy: function() {
                            t.removeEventListener(n, a, r)
                        }
                    }
            }(t, e, n, i, r)
        }
    }
    , function(t, e) {
        window.findDOM = function(t, e) {
            return function(t, e) {
                return (1 < arguments.length && void 0 !== e ? e : document).querySelector(t)
            }(t, e)
        }
            ,
            window.findAllDOM = function(t, e) {
                return function(t, e) {
                    var n = 1 < arguments.length && void 0 !== e ? e : document;
                    return Array.prototype.slice.call(n.querySelectorAll(t), 0)
                }(t, e)
            }
    }
    , function(t, e) {
        window.getElementCenter = function(t) {
            return n = (e = t.getBoundingClientRect()).top,
                i = e.right,
                r = e.bottom,
                {
                    x: (e.left + i) / 2,
                    y: (n + r) / 2
                };
            var e, n, i, r
        }
    }
    , function(t, e) {
        window.getWindowPosition = function(t) {
            return function(t) {
                var e = 0 < arguments.length && void 0 !== t ? t : "y";
                return "y" == e || "vertical" == e ? window.pageYOffset || document.documentElement.scrollTop - (document.documentElement.clientTop || 0) : window.pageXOffset || document.documentElement.scrollLeft - (document.documentElement.clientLeft || 0)
            }(t)
        }
    }
    , function(t, e) {
        window.isElementVisible = function(t, e, n) {
            return function(t, e, n) {
                var i = 1 < arguments.length && void 0 !== e && e
                    , r = !(2 < arguments.length && void 0 !== n) || n
                    , a = t.getBoundingClientRect()
                    , o = a.width
                    , s = a.height
                    , c = a.top
                    , u = a.right
                    , l = !0
                    , h = !0;
                return i && (l = 0 < u + o && u < (window.innerWidth || document.documentElement.clientWidth)),
                r && (h = 0 < c + s && c < (window.innerHeight || document.documentElement.clientHeight)),
                l && h
            }(t, e, n)
        }
    }
    , function(t, e) {
        window.createHTMLElement = function(t) {
            var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}
                , n = e.className
                , i = e.text
                , r = e.attributes
                , a = document.createElement(t);
            if (n && (a.className = n),
                i) {
                var o = document.createTextNode(i);
                a.appendChild(o)
            }
            if (r)
                for (var s in r)
                    a.setAttribute(s, r[s]);
            return a
        }
    }
    , function(t, e) {
        function n(t, e) {
            for (var n = 0; n < e.length; n++) {
                var i = e[n];
                i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                "value"in i && (i.writable = !0),
                    Object.defineProperty(t, i.key, i)
            }
        }
        var i = function() {
            function t(e) {
                var n = this;
                if (function(t, e) {
                    if (!(t instanceof e))
                        throw new TypeError("Cannot call a class as a function")
                }(this, t),
                    this.hasBackgroundClip = this._hasBackgroundClip(),
                    this._fontSize = parseInt(window.getComputedStyle(e.textElement, null).getPropertyValue("font-size").split("px")[0]),
                    !this.hasBackgroundClip) {
                    var i = new Image;
                    i.addEventListener("load", (function(t) {
                            var i = n._createSVG({
                                id: e.patternID,
                                url: e.patternURL,
                                className: e.className,
                                width: t.target.width,
                                height: t.target.height,
                                text: e.textElement.innerHTML
                            });
                            e.textElement.style.height = 0,
                                e.textElement.style.overflow = "hidden",
                                e.textElement.parentNode.appendChild(i)
                        }
                    )),
                        i.src = e.patternURL
                }
            }
            var e, i;
            return e = t,
            (i = [{
                key: "_hasBackgroundClip",
                value: function() {
                    return null != document.body.style.webkitBackgroundClip
                }
            }, {
                key: "_createSVG",
                value: function(t) {
                    var e = this._createSvgElement("svg")
                        , n = this._createSvgElement("pattern")
                        , i = this._createSvgElement("image");
                    this._addAttributes(n, {
                        id: t.id,
                        patternUnits: "userSpaceOnUse",
                        width: t.width,
                        height: t.height
                    }),
                        this._addAttributes(i, {
                            width: t.width,
                            height: t.height
                        }),
                        i.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", t.url),
                        n.appendChild(i),
                        e.appendChild(n);
                    for (var r = t.text.split("<br>"), a = 0, o = r.length; a < o; a++) {
                        var s = r[a]
                            , c = this._createSvgElement("text");
                        this._addAttributes(c, {
                            x: "50%",
                            y: this._fontSize * a + this._fontSize,
                            class: t.className,
                            style: "fill:url(#" + t.id + ");"
                        }),
                            c.textContent = s,
                            e.appendChild(c)
                    }
                    return e.style.height = r.length * this._fontSize + "px",
                        e
                }
            }, {
                key: "_createSvgElement",
                value: function(t) {
                    return document.createElementNS("http://www.w3.org/2000/svg", t)
                }
            }, {
                key: "_addAttributes",
                value: function(t, e) {
                    for (var n in e)
                        e.hasOwnProperty(n) && t.setAttribute(n, e[n])
                }
            }]) && n(e.prototype, i),
                t
        }();
        window.BackgroundClipPolyfill = i
    }
    , function(t, e) {
        window.splitText = function(t) {
            return function(t, e) {
                var n = 1 < arguments.length && void 0 !== e ? e : ""
                    , i = [];
                t.length || (t = [t]);
                for (var r = 0, a = t.length; r < a; r++) {
                    for (var o = t[r], s = o.innerHTML.split(""), c = [], u = !1, l = "", h = 0, p = s.length; h < p; h++)
                        if (" " === s[h] && (s[h] = " "),
                            "<" === s[h] ? u = !0 : ">" === s[h - 1] && (u = !1),
                            u)
                            l += s[h];
                        else {
                            var f = "";
                            "" !== l ? (f = l + '<span class="'.concat(n, '">').concat(s[h], "</span>"),
                                l = "") : f = '<span class="'.concat(n, '">').concat(s[h], "</span>"),
                                c.push(f)
                        }
                    o.innerHTML = c.join(""),
                        i.push(o.querySelectorAll("span"))
                }
                return 1 < i.length ? i : i[0]
            }(t, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "")
        }
    }
    , function(t, e) {
        function n(t, e) {
            for (var n = 0; n < e.length; n++) {
                var i = e[n];
                i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                "value"in i && (i.writable = !0),
                    Object.defineProperty(t, i.key, i)
            }
        }
        var i = function() {
            function t(e, n) {
                var i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 30
                    , r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : ["left", "right"];
                !function(t, e) {
                    if (!(t instanceof e))
                        throw new TypeError("Cannot call a class as a function")
                }(this, t),
                    this._container = e,
                    this._callback = n,
                    this._sensibility = i,
                    this._params = r,
                    this._swipe = {
                        startX: 0
                    },
                    bindAll(this, ["_touchstartSwipe", "_touchendSwipe"]),
                    this._bind()
            }
            var e, i;
            return e = t,
            (i = [{
                key: "_bind",
                value: function() {
                    this._container.addEventListener("touchstart", this._touchstartSwipe),
                        this._container.addEventListener("touchend", this._touchendSwipe)
                }
            }, {
                key: "unbind",
                value: function() {
                    this._container.removeEventListener("touchstart", this._touchstartSwipe),
                        this._container.removeEventListener("touchend", this._touchendSwipe)
                }
            }, {
                key: "_touchstartSwipe",
                value: function(t) {
                    this._swipe.startX = t.changedTouches[0].pageX
                }
            }, {
                key: "_touchendSwipe",
                value: function(t) {
                    var e = t.changedTouches[0].pageX;
                    e > this._swipe.startX && e - this._swipe.startX > this._sensibility ? this._callback(this._params[0]) : e < this._swipe.startX && e - this._swipe.startX < -this._sensibility && this._callback(this._params[1])
                }
            }]) && n(e.prototype, i),
                t
        }();
        window.Swipe = i
    }
    , function(t, e) {
        window.clamp = function(t, e, n) {
            return a = n,
                (i = t) < (r = e) ? r : a < i ? a : i;
            var i, r, a
        }
    }
    , function(t, e) {
        window.lerp = function(t, e, n) {
            return (i = t) + (e - i) * n;
            var i
        }
    }
    , function(t, e) {
        window.loopIndex = function(t, e) {
            return i = e,
            (n = t) < 0 && (n = i + n % i),
                i <= n ? n % i : n;
            var n, i
        }
    }
    , function(t, e) {
        window.map = function(t, e, n, i, r) {
            return (t - (a = e)) / (n - a) * (r - (o = i)) + o;
            var a, o
        }
    }
    , function(t, e) {
        window.normalize = function(t, e, n) {
            return (t - (i = e)) / (n - i);
            var i
        }
    }
    , function(t, e) {
        window.smoothstep = function(t, e, n) {
            return i = t,
                r = e,
                a = n,
            (o = Math.max(0, Math.min(1, (i - r) / (a - r)))) * o * (3 - 2 * o);
            var i, r, a, o
        }
    }
    , function(t, e) {
        window.randomFloat = function(t, e, n) {
            return function(t, e, n) {
                var i = 2 < arguments.length && void 0 !== n ? n : 2;
                return parseFloat(Math.min(t + Math.random() * (e - t), e).toFixed(i))
            }(t, e, n)
        }
    }
    , function(t, e) {
        window.randomInt = function(t, e) {
            return n = t,
                i = e,
                Math.floor(Math.random() * (i - n + 1) + n);
            var n, i
        }
    }
    , function(t, e) {
        window.rgbToHex = function(t, e, n) {
            return function(t, e, n, i) {
                return (3 < arguments.length && void 0 !== i ? i : "") + ((t << 16) + (e << 8) + n).toString(16).padStart(6, "0")
            }(t, e, n)
        }
    }
    , function(t, e) {
        window.hexToRgb = function(t) {
            return (e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t)) ? {
                r: parseInt(e[1], 16),
                g: parseInt(e[2], 16),
                b: parseInt(e[3], 16)
            } : null;
            var e
        }
    }
    , function(t, e) {
        window.isEven = function(t) {
            return !(1 & t)
        }
    }
    , function(t, e) {
        window.isOdd = function(t) {
            return !!(1 & t)
        }
    }
    , function(t, e) {
        window.angle = function(t, e, n, i) {
            return r = t,
                a = e,
                o = n,
                s = i,
                Math.atan2(s - a, o - r);
            var r, a, o, s
        }
    }
    , function(t, e) {
        window.diagonal = function(t, e) {
            return n = t,
                i = e,
                Math.sqrt(n * n + i * i);
            var n, i
        }
    }
    , function(t, e) {
        window.distance = function(t, e, n, i) {
            return r = n - t,
                a = i - e,
                Math.sqrt(r * r + a * a);
            var r, a
        }
    }
    , function(t, e) {
        window.toDegrees = function(t) {
            return 180 * t / Math.PI
        }
    }
    , function(t, e) {
        window.toRadians = function(t) {
            return t * Math.PI / 180
        }
    }
    , function(t, e) {
        String.prototype.capitalize = function() {
            return this.charAt(0).toUpperCase() + this.slice(1)
        }
    }
    , function(t, e, n) {
        var i, r, a, o;
        function s(t) {
            return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
            )(t)
        }
        o = function(t) {
            function e() {}
            function n(t, e) {
                this.x = t || 0,
                    this.y = e || 0
            }
            function i() {
                this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]
            }
            function r(t, e, a, o, s, c, u, l, h, p) {
                Object.defineProperty(this, "id", {
                    value: Na++
                }),
                    this.uuid = Ca.generateUUID(),
                    this.name = "",
                    this.image = void 0 !== t ? t : r.DEFAULT_IMAGE,
                    this.mipmaps = [],
                    this.mapping = void 0 !== e ? e : r.DEFAULT_MAPPING,
                    this.wrapS = void 0 !== a ? a : 1001,
                    this.wrapT = void 0 !== o ? o : 1001,
                    this.magFilter = void 0 !== s ? s : 1006,
                    this.minFilter = void 0 !== c ? c : 1008,
                    this.anisotropy = void 0 !== h ? h : 1,
                    this.format = void 0 !== u ? u : 1023,
                    this.internalFormat = null,
                    this.type = void 0 !== l ? l : 1009,
                    this.offset = new n(0,0),
                    this.repeat = new n(1,1),
                    this.center = new n(0,0),
                    this.rotation = 0,
                    this.matrixAutoUpdate = !0,
                    this.matrix = new i,
                    this.generateMipmaps = !0,
                    this.premultiplyAlpha = !1,
                    this.flipY = !0,
                    this.unpackAlignment = 4,
                    this.encoding = void 0 !== p ? p : 3e3,
                    this.version = 0,
                    this.onUpdate = null
            }
            function a(t, e, n, i) {
                this.x = t || 0,
                    this.y = e || 0,
                    this.z = n || 0,
                    this.w = void 0 !== i ? i : 1
            }
            function o(t, e, n) {
                this.width = t,
                    this.height = e,
                    this.scissor = new a(0,0,t,e),
                    this.scissorTest = !1,
                    this.viewport = new a(0,0,t,e),
                    n = n || {},
                    this.texture = new r(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
                    this.texture.image = {},
                    this.texture.image.width = t,
                    this.texture.image.height = e,
                    this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps,
                    this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006,
                    this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
                    this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
                    this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
            }
            function c(t, e, n) {
                o.call(this, t, e, n),
                    this.samples = 4
            }
            function u(t, e, n, i) {
                this._x = t || 0,
                    this._y = e || 0,
                    this._z = n || 0,
                    this._w = void 0 !== i ? i : 1
            }
            function l(t, e, n) {
                this.x = t || 0,
                    this.y = e || 0,
                    this.z = n || 0
            }
            function h() {
                this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
            }
            function p(t, e, n, i) {
                this._x = t || 0,
                    this._y = e || 0,
                    this._z = n || 0,
                    this._order = i || p.DefaultOrder
            }
            function f() {
                this.mask = 1
            }
            function d() {
                Object.defineProperty(this, "id", {
                    value: Ha++
                }),
                    this.uuid = Ca.generateUUID(),
                    this.name = "",
                    this.type = "Object3D",
                    this.parent = null,
                    this.children = [],
                    this.up = d.DefaultUp.clone();
                var t = new l
                    , e = new p
                    , n = new u
                    , r = new l(1,1,1);
                e._onChange((function() {
                        n.setFromEuler(e, !1)
                    }
                )),
                    n._onChange((function() {
                            e.setFromQuaternion(n, void 0, !1)
                        }
                    )),
                    Object.defineProperties(this, {
                        position: {
                            configurable: !0,
                            enumerable: !0,
                            value: t
                        },
                        rotation: {
                            configurable: !0,
                            enumerable: !0,
                            value: e
                        },
                        quaternion: {
                            configurable: !0,
                            enumerable: !0,
                            value: n
                        },
                        scale: {
                            configurable: !0,
                            enumerable: !0,
                            value: r
                        },
                        modelViewMatrix: {
                            value: new h
                        },
                        normalMatrix: {
                            value: new i
                        }
                    }),
                    this.matrix = new h,
                    this.matrixWorld = new h,
                    this.matrixAutoUpdate = d.DefaultMatrixAutoUpdate,
                    this.matrixWorldNeedsUpdate = !1,
                    this.layers = new f,
                    this.visible = !0,
                    this.receiveShadow = this.castShadow = !1,
                    this.frustumCulled = !0,
                    this.renderOrder = 0,
                    this.userData = {}
            }
            function m() {
                d.call(this),
                    this.type = "Scene",
                    this.overrideMaterial = this.fog = this.environment = this.background = null,
                    this.autoUpdate = !0,
                "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
                    detail: this
                }))
            }
            function g(t, e) {
                this.min = void 0 !== t ? t : new l(1 / 0,1 / 0,1 / 0),
                    this.max = void 0 !== e ? e : new l(-1 / 0,-1 / 0,-1 / 0)
            }
            function v(t, e, n, i, r) {
                var a, o = 0;
                for (a = t.length - 3; o <= a; o += 3) {
                    vo.fromArray(t, o);
                    var s = r.x * Math.abs(vo.x) + r.y * Math.abs(vo.y) + r.z * Math.abs(vo.z)
                        , c = e.dot(vo)
                        , u = n.dot(vo)
                        , l = i.dot(vo);
                    if (Math.max(-Math.max(c, u, l), Math.min(c, u, l)) > s)
                        return !1
                }
                return !0
            }
            function y(t, e) {
                this.center = void 0 !== t ? t : new l,
                    this.radius = void 0 !== e ? e : 0
            }
            function x(t, e) {
                this.origin = void 0 !== t ? t : new l,
                    this.direction = void 0 !== e ? e : new l(0,0,-1)
            }
            function _(t, e) {
                this.normal = void 0 !== t ? t : new l(1,0,0),
                    this.constant = void 0 !== e ? e : 0
            }
            function b(t, e, n) {
                this.a = void 0 !== t ? t : new l,
                    this.b = void 0 !== e ? e : new l,
                    this.c = void 0 !== n ? n : new l
            }
            function M(t, e, n) {
                return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
            }
            function w(t, e, n) {
                return n < 0 && (n += 1),
                1 < n && --n,
                    n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
            }
            function S(t) {
                return t < .04045 ? .0773993808 * t : Math.pow(.9478672986 * t + .0521327014, 2.4)
            }
            function A(t) {
                return t < .0031308 ? 12.92 * t : 1.055 * Math.pow(t, .41666) - .055
            }
            function T(t, e, n, i, r, a) {
                this.a = t,
                    this.b = e,
                    this.c = n,
                    this.normal = i && i.isVector3 ? i : new l,
                    this.vertexNormals = Array.isArray(i) ? i : [],
                    this.color = r && r.isColor ? r : new M,
                    this.vertexColors = Array.isArray(r) ? r : [],
                    this.materialIndex = void 0 !== a ? a : 0
            }
            function L() {
                Object.defineProperty(this, "id", {
                    value: jo++
                }),
                    this.uuid = Ca.generateUUID(),
                    this.name = "",
                    this.type = "Material",
                    this.fog = !0,
                    this.blending = 1,
                    this.side = 0,
                    this.vertexColors = this.flatShading = !1,
                    this.opacity = 1,
                    this.transparent = !1,
                    this.blendSrc = 204,
                    this.blendDst = 205,
                    this.blendEquation = 100,
                    this.blendEquationAlpha = this.blendDstAlpha = this.blendSrcAlpha = null,
                    this.depthFunc = 3,
                    this.depthWrite = this.depthTest = !0,
                    this.stencilWriteMask = 255,
                    this.stencilFunc = 519,
                    this.stencilRef = 0,
                    this.stencilFuncMask = 255,
                    this.stencilZPass = this.stencilZFail = this.stencilFail = 7680,
                    this.stencilWrite = !1,
                    this.clippingPlanes = null,
                    this.clipShadows = this.clipIntersection = !1,
                    this.shadowSide = null,
                    this.colorWrite = !0,
                    this.precision = null,
                    this.polygonOffset = !1,
                    this.polygonOffsetUnits = this.polygonOffsetFactor = 0,
                    this.dithering = !1,
                    this.alphaTest = 0,
                    this.premultipliedAlpha = !1,
                    this.toneMapped = this.visible = !0,
                    this.userData = {},
                    this.version = 0
            }
            function E(t) {
                L.call(this),
                    this.type = "MeshBasicMaterial",
                    this.color = new M(16777215),
                    this.lightMap = this.map = null,
                    this.lightMapIntensity = 1,
                    this.aoMap = null,
                    this.aoMapIntensity = 1,
                    this.envMap = this.alphaMap = this.specularMap = null,
                    this.combine = 0,
                    this.reflectivity = 1,
                    this.refractionRatio = .98,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.wireframeLinejoin = this.wireframeLinecap = "round",
                    this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function P(t, e, n) {
                if (Array.isArray(t))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.name = "",
                    this.array = t,
                    this.itemSize = e,
                    this.count = void 0 !== t ? t.length / e : 0,
                    this.normalized = !0 === n,
                    this.usage = 35044,
                    this.updateRange = {
                        offset: 0,
                        count: -1
                    },
                    this.version = 0
            }
            function C(t, e, n) {
                P.call(this, new Int8Array(t), e, n)
            }
            function O(t, e, n) {
                P.call(this, new Uint8Array(t), e, n)
            }
            function I(t, e, n) {
                P.call(this, new Uint8ClampedArray(t), e, n)
            }
            function N(t, e, n) {
                P.call(this, new Int16Array(t), e, n)
            }
            function D(t, e, n) {
                P.call(this, new Uint16Array(t), e, n)
            }
            function R(t, e, n) {
                P.call(this, new Int32Array(t), e, n)
            }
            function z(t, e, n) {
                P.call(this, new Uint32Array(t), e, n)
            }
            function F(t, e, n) {
                P.call(this, new Float32Array(t), e, n)
            }
            function B(t, e, n) {
                P.call(this, new Float64Array(t), e, n)
            }
            function U() {
                this.vertices = [],
                    this.normals = [],
                    this.colors = [],
                    this.uvs = [],
                    this.uvs2 = [],
                    this.groups = [],
                    this.morphTargets = {},
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.boundingSphere = this.boundingBox = null,
                    this.groupsNeedUpdate = this.uvsNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.verticesNeedUpdate = !1
            }
            function G(t) {
                if (0 === t.length)
                    return -1 / 0;
                for (var e = t[0], n = 1, i = t.length; n < i; ++n)
                    t[n] > e && (e = t[n]);
                return e
            }
            function k() {
                Object.defineProperty(this, "id", {
                    value: Wo += 2
                }),
                    this.uuid = Ca.generateUUID(),
                    this.name = "",
                    this.type = "BufferGeometry",
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.morphTargetsRelative = !1,
                    this.groups = [],
                    this.boundingSphere = this.boundingBox = null,
                    this.drawRange = {
                        start: 0,
                        count: 1 / 0
                    },
                    this.userData = {}
            }
            function j(t, e) {
                d.call(this),
                    this.type = "Mesh",
                    this.geometry = void 0 !== t ? t : new k,
                    this.material = void 0 !== e ? e : new E,
                    this.updateMorphTargets()
            }
            function V(t, e, n, i, r, a, o, s) {
                return null === (1 === e.side ? i.intersectTriangle(o, a, r, !0, s) : i.intersectTriangle(r, a, o, 2 !== e.side, s)) ? null : (fs.copy(s),
                    fs.applyMatrix4(t.matrixWorld),
                    (e = n.ray.origin.distanceTo(fs)) < n.near || e > n.far ? null : {
                        distance: e,
                        point: fs.clone(),
                        object: t
                    })
            }
            function W(t, e, i, r, a, o, s, c, u, l, h, p) {
                if (ts.fromBufferAttribute(a, l),
                    es.fromBufferAttribute(a, h),
                    ns.fromBufferAttribute(a, p),
                    a = t.morphTargetInfluences,
                e.morphTargets && o && a) {
                    os.set(0, 0, 0),
                        ss.set(0, 0, 0),
                        cs.set(0, 0, 0);
                    for (var f = 0, d = o.length; f < d; f++) {
                        var m = a[f]
                            , g = o[f];
                        0 !== m && (is.fromBufferAttribute(g, l),
                            rs.fromBufferAttribute(g, h),
                            as.fromBufferAttribute(g, p),
                            s ? (os.addScaledVector(is, m),
                                ss.addScaledVector(rs, m),
                                cs.addScaledVector(as, m)) : (os.addScaledVector(is.sub(ts), m),
                                ss.addScaledVector(rs.sub(es), m),
                                cs.addScaledVector(as.sub(ns), m)))
                    }
                    ts.add(os),
                        es.add(ss),
                        ns.add(cs)
                }
                return (t = V(t, e, i, r, ts, es, ns, ps)) && (c && (us.fromBufferAttribute(c, l),
                    ls.fromBufferAttribute(c, h),
                    hs.fromBufferAttribute(c, p),
                    t.uv = b.getUV(ps, ts, es, ns, us, ls, hs, new n)),
                u && (us.fromBufferAttribute(u, l),
                    ls.fromBufferAttribute(u, h),
                    hs.fromBufferAttribute(u, p),
                    t.uv2 = b.getUV(ps, ts, es, ns, us, ls, hs, new n)),
                    c = new T(l,h,p),
                    b.getNormal(ts, es, ns, c.normal),
                    t.face = c),
                    t
            }
            function H() {
                Object.defineProperty(this, "id", {
                    value: ds += 2
                }),
                    this.uuid = Ca.generateUUID(),
                    this.name = "",
                    this.type = "Geometry",
                    this.vertices = [],
                    this.colors = [],
                    this.faces = [],
                    this.faceVertexUvs = [[]],
                    this.morphTargets = [],
                    this.morphNormals = [],
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.lineDistances = [],
                    this.boundingSphere = this.boundingBox = null,
                    this.groupsNeedUpdate = this.lineDistancesNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.uvsNeedUpdate = this.verticesNeedUpdate = this.elementsNeedUpdate = !1
            }
            function q(t) {
                var e, n = {};
                for (e in t)
                    for (var i in n[e] = {},
                        t[e]) {
                        var r = t[e][i];
                        r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? n[e][i] = r.clone() : Array.isArray(r) ? n[e][i] = r.slice() : n[e][i] = r
                    }
                return n
            }
            function X(t) {
                for (var e = {}, n = 0; n < t.length; n++) {
                    var i, r = q(t[n]);
                    for (i in r)
                        e[i] = r[i]
                }
                return e
            }
            function Y(t) {
                L.call(this),
                    this.type = "ShaderMaterial",
                    this.defines = {},
                    this.uniforms = {},
                    this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                    this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                    this.linewidth = 1,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.morphNormals = this.morphTargets = this.skinning = this.clipping = this.lights = this.fog = !1,
                    this.extensions = {
                        derivatives: !1,
                        fragDepth: !1,
                        drawBuffers: !1,
                        shaderTextureLOD: !1
                    },
                    this.defaultAttributeValues = {
                        color: [1, 1, 1],
                        uv: [0, 0],
                        uv2: [0, 0]
                    },
                    this.index0AttributeName = void 0,
                    this.uniformsNeedUpdate = !1,
                void 0 !== t && (t.attributes,
                    this.setValues(t))
            }
            function Z() {
                d.call(this),
                    this.type = "Camera",
                    this.matrixWorldInverse = new h,
                    this.projectionMatrix = new h,
                    this.projectionMatrixInverse = new h
            }
            function J(t, e, n, i) {
                Z.call(this),
                    this.type = "PerspectiveCamera",
                    this.fov = void 0 !== t ? t : 50,
                    this.zoom = 1,
                    this.near = void 0 !== n ? n : .1,
                    this.far = void 0 !== i ? i : 2e3,
                    this.focus = 10,
                    this.aspect = void 0 !== e ? e : 1,
                    this.view = null,
                    this.filmGauge = 35,
                    this.filmOffset = 0,
                    this.updateProjectionMatrix()
            }
            function K(t, e, n, i) {
                d.call(this),
                    this.type = "CubeCamera";
                var r = new J(90,1,t,e);
                r.up.set(0, -1, 0),
                    r.lookAt(new l(1,0,0)),
                    this.add(r);
                var a = new J(90,1,t,e);
                a.up.set(0, -1, 0),
                    a.lookAt(new l(-1,0,0)),
                    this.add(a);
                var o = new J(90,1,t,e);
                o.up.set(0, 0, 1),
                    o.lookAt(new l(0,1,0)),
                    this.add(o);
                var s = new J(90,1,t,e);
                s.up.set(0, 0, -1),
                    s.lookAt(new l(0,-1,0)),
                    this.add(s);
                var c = new J(90,1,t,e);
                c.up.set(0, -1, 0),
                    c.lookAt(new l(0,0,1)),
                    this.add(c);
                var u = new J(90,1,t,e);
                u.up.set(0, -1, 0),
                    u.lookAt(new l(0,0,-1)),
                    this.add(u),
                    i = i || {
                        format: 1022,
                        magFilter: 1006,
                        minFilter: 1006
                    },
                    this.renderTarget = new Q(n,i),
                    this.renderTarget.texture.name = "CubeCamera",
                    this.update = function(t, e) {
                        null === this.parent && this.updateMatrixWorld();
                        var n = t.getRenderTarget()
                            , i = this.renderTarget
                            , l = i.texture.generateMipmaps;
                        i.texture.generateMipmaps = !1,
                            t.setRenderTarget(i, 0),
                            t.render(e, r),
                            t.setRenderTarget(i, 1),
                            t.render(e, a),
                            t.setRenderTarget(i, 2),
                            t.render(e, o),
                            t.setRenderTarget(i, 3),
                            t.render(e, s),
                            t.setRenderTarget(i, 4),
                            t.render(e, c),
                            i.texture.generateMipmaps = l,
                            t.setRenderTarget(i, 5),
                            t.render(e, u),
                            t.setRenderTarget(n)
                    }
                    ,
                    this.clear = function(t, e, n, i) {
                        for (var r = t.getRenderTarget(), a = this.renderTarget, o = 0; o < 6; o++)
                            t.setRenderTarget(a, o),
                                t.clear(e, n, i);
                        t.setRenderTarget(r)
                    }
            }
            function Q(t, e, n) {
                Number.isInteger(e) && (e = n),
                    o.call(this, t, t, e)
            }
            function $(t, e, n, i, a, o, s, c, u, l, h, p) {
                r.call(this, null, o, s, c, u, l, i, a, h, p),
                    this.image = {
                        data: t || null,
                        width: e || 1,
                        height: n || 1
                    },
                    this.magFilter = void 0 !== u ? u : 1003,
                    this.minFilter = void 0 !== l ? l : 1003,
                    this.flipY = this.generateMipmaps = !1,
                    this.unpackAlignment = 1,
                    this.needsUpdate = !0
            }
            function tt(t, e, n, i, r, a) {
                this.planes = [void 0 !== t ? t : new _, void 0 !== e ? e : new _, void 0 !== n ? n : new _, void 0 !== i ? i : new _, void 0 !== r ? r : new _, void 0 !== a ? a : new _]
            }
            function et() {
                function t(r, a) {
                    !1 !== n && (i(r, a),
                        e.requestAnimationFrame(t))
                }
                var e = null
                    , n = !1
                    , i = null;
                return {
                    start: function() {
                        !0 !== n && null !== i && (e.requestAnimationFrame(t),
                            n = !0)
                    },
                    stop: function() {
                        n = !1
                    },
                    setAnimationLoop: function(t) {
                        i = t
                    },
                    setContext: function(t) {
                        e = t
                    }
                }
            }
            function nt(t, e) {
                var n = e.isWebGL2
                    , i = new WeakMap;
                return {
                    get: function(t) {
                        return t.isInterleavedBufferAttribute && (t = t.data),
                            i.get(t)
                    },
                    remove: function(e) {
                        e.isInterleavedBufferAttribute && (e = e.data);
                        var n = i.get(e);
                        n && (t.deleteBuffer(n.buffer),
                            i.delete(e))
                    },
                    update: function(e, r) {
                        e.isInterleavedBufferAttribute && (e = e.data);
                        var a, o, s, c, u, l = i.get(e);
                        if (void 0 === l)
                            i.set(e, (o = r,
                                s = (a = e).array,
                                c = a.usage,
                                u = t.createBuffer(),
                                t.bindBuffer(o, u),
                                t.bufferData(o, s, c),
                                a.onUploadCallback(),
                                o = 5126,
                                s instanceof Float32Array ? o = 5126 : s instanceof Float64Array || (s instanceof Uint16Array ? o = 5123 : s instanceof Int16Array ? o = 5122 : s instanceof Uint32Array ? o = 5125 : s instanceof Int32Array ? o = 5124 : s instanceof Int8Array ? o = 5120 : s instanceof Uint8Array && (o = 5121)),
                                {
                                    buffer: u,
                                    type: o,
                                    bytesPerElement: s.BYTES_PER_ELEMENT,
                                    version: a.version
                                }));
                        else if (l.version < e.version) {
                            var h = e.array
                                , p = e.updateRange;
                            t.bindBuffer(r, l.buffer),
                                -1 === p.count ? t.bufferSubData(r, 0, h) : (n ? t.bufferSubData(r, p.offset * h.BYTES_PER_ELEMENT, h, p.offset, p.count) : t.bufferSubData(r, p.offset * h.BYTES_PER_ELEMENT, h.subarray(p.offset, p.offset + p.count)),
                                    p.count = -1),
                                l.version = e.version
                        }
                    }
                }
            }
            function it(t, e, n, i) {
                H.call(this),
                    this.type = "PlaneGeometry",
                    this.parameters = {
                        width: t,
                        height: e,
                        widthSegments: n,
                        heightSegments: i
                    },
                    this.fromBufferGeometry(new rt(t,e,n,i)),
                    this.mergeVertices()
            }
            function rt(t, e, n, i) {
                k.call(this),
                    this.type = "PlaneBufferGeometry",
                    this.parameters = {
                        width: t,
                        height: e,
                        widthSegments: n,
                        heightSegments: i
                    };
                var r = (t = t || 1) / 2
                    , a = (e = e || 1) / 2
                    , o = (n = Math.floor(n) || 1) + 1
                    , s = (i = Math.floor(i) || 1) + 1
                    , c = t / n
                    , u = e / i
                    , l = []
                    , h = []
                    , p = []
                    , f = [];
                for (t = 0; t < s; t++) {
                    var d = t * u - a;
                    for (e = 0; e < o; e++)
                        h.push(e * c - r, -d, 0),
                            p.push(0, 0, 1),
                            f.push(e / n),
                            f.push(1 - t / i)
                }
                for (t = 0; t < i; t++)
                    for (e = 0; e < n; e++)
                        r = e + o * (t + 1),
                            a = e + 1 + o * (t + 1),
                            s = e + 1 + o * t,
                            l.push(e + o * t, r, s),
                            l.push(r, a, s);
                this.setIndex(l),
                    this.setAttribute("position", new F(h,3)),
                    this.setAttribute("normal", new F(p,3)),
                    this.setAttribute("uv", new F(f,2))
            }
            function at(t, e, n, i) {
                function r(t, n) {
                    e.buffers.color.setClear(t.r, t.g, t.b, n, i)
                }
                var a, o, s = new M(0), c = 0, u = null, l = 0, h = null;
                return {
                    getClearColor: function() {
                        return s
                    },
                    setClearColor: function(t, e) {
                        s.set(t),
                            r(s, c = void 0 !== e ? e : 1)
                    },
                    getClearAlpha: function() {
                        return c
                    },
                    setClearAlpha: function(t) {
                        r(s, c = t)
                    },
                    render: function(e, i, p, f) {
                        i = i.background,
                        (p = (p = t.xr).getSession && p.getSession()) && "additive" === p.environmentBlendMode && (i = null),
                            null === i ? r(s, c) : i && i.isColor && (r(i, 1),
                                f = !0),
                        (t.autoClear || f) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
                            i && (i.isCubeTexture || i.isWebGLCubeRenderTarget || 306 === i.mapping) ? (void 0 === o && ((o = new j(new bs(1,1,1),new Y({
                                type: "BackgroundCubeMaterial",
                                uniforms: q(Ps.cube.uniforms),
                                vertexShader: Ps.cube.vertexShader,
                                fragmentShader: Ps.cube.fragmentShader,
                                side: 1,
                                depthTest: !1,
                                depthWrite: !1,
                                fog: !1
                            }))).geometry.deleteAttribute("normal"),
                                o.geometry.deleteAttribute("uv"),
                                o.onBeforeRender = function(t, e, n) {
                                    this.matrixWorld.copyPosition(n.matrixWorld)
                                }
                                ,
                                Object.defineProperty(o.material, "envMap", {
                                    get: function() {
                                        return this.uniforms.envMap.value
                                    }
                                }),
                                n.update(o)),
                                f = i.isWebGLCubeRenderTarget ? i.texture : i,
                                o.material.uniforms.envMap.value = f,
                                o.material.uniforms.flipEnvMap.value = f.isCubeTexture ? -1 : 1,
                            u === i && l === f.version && h === t.toneMapping || (o.material.needsUpdate = !0,
                                u = i,
                                l = f.version,
                                h = t.toneMapping),
                                e.unshift(o, o.geometry, o.material, 0, 0, null)) : i && i.isTexture && (void 0 === a && ((a = new j(new rt(2,2),new Y({
                                type: "BackgroundMaterial",
                                uniforms: q(Ps.background.uniforms),
                                vertexShader: Ps.background.vertexShader,
                                fragmentShader: Ps.background.fragmentShader,
                                side: 0,
                                depthTest: !1,
                                depthWrite: !1,
                                fog: !1
                            }))).geometry.deleteAttribute("normal"),
                                Object.defineProperty(a.material, "map", {
                                    get: function() {
                                        return this.uniforms.t2D.value
                                    }
                                }),
                                n.update(a)),
                            !0 === (a.material.uniforms.t2D.value = i).matrixAutoUpdate && i.updateMatrix(),
                                a.material.uniforms.uvTransform.value.copy(i.matrix),
                            u === i && l === i.version && h === t.toneMapping || (a.material.needsUpdate = !0,
                                l = (u = i).version,
                                h = t.toneMapping),
                                e.unshift(a, a.geometry, a.material, 0, 0, null))
                    }
                }
            }
            function ot(t, e, n, i) {
                var r, a = i.isWebGL2;
                this.setMode = function(t) {
                    r = t
                }
                    ,
                    this.render = function(e, i) {
                        t.drawArrays(r, e, i),
                            n.update(i, r)
                    }
                    ,
                    this.renderInstances = function(i, o, s, c) {
                        if (0 !== c) {
                            if (a) {
                                i = t;
                                var u = "drawArraysInstanced"
                            } else if (u = "drawArraysInstancedANGLE",
                            null === (i = e.get("ANGLE_instanced_arrays")))
                                return;
                            i[u](r, o, s, c),
                                n.update(s, r, c)
                        }
                    }
            }
            function st(t, e, n) {
                function i(e) {
                    if ("highp" === e) {
                        if (0 < t.getShaderPrecisionFormat(35633, 36338).precision && 0 < t.getShaderPrecisionFormat(35632, 36338).precision)
                            return "highp";
                        e = "mediump"
                    }
                    return "mediump" === e && 0 < t.getShaderPrecisionFormat(35633, 36337).precision && 0 < t.getShaderPrecisionFormat(35632, 36337).precision ? "mediump" : "lowp"
                }
                var r, a = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && t instanceof WebGL2ComputeRenderingContext, o = void 0 !== n.precision ? n.precision : "highp", s = i(o);
                s !== o && (o = s),
                    n = !0 === n.logarithmicDepthBuffer,
                    s = t.getParameter(34930);
                var c = t.getParameter(35660)
                    , u = t.getParameter(3379)
                    , l = t.getParameter(34076)
                    , h = t.getParameter(34921)
                    , p = t.getParameter(36347)
                    , f = t.getParameter(36348)
                    , d = t.getParameter(36349)
                    , m = 0 < c
                    , g = a || !!e.get("OES_texture_float");
                return {
                    isWebGL2: a,
                    getMaxAnisotropy: function() {
                        if (void 0 !== r)
                            return r;
                        var n = e.get("EXT_texture_filter_anisotropic");
                        return r = null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                    },
                    getMaxPrecision: i,
                    precision: o,
                    logarithmicDepthBuffer: n,
                    maxTextures: s,
                    maxVertexTextures: c,
                    maxTextureSize: u,
                    maxCubemapSize: l,
                    maxAttributes: h,
                    maxVertexUniforms: p,
                    maxVaryings: f,
                    maxFragmentUniforms: d,
                    vertexTextures: m,
                    floatFragmentTextures: g,
                    floatVertexTextures: m && g,
                    maxSamples: a ? t.getParameter(36183) : 0
                }
            }
            function ct() {
                function t() {
                    l.value !== r && (l.value = r,
                        l.needsUpdate = 0 < a),
                        n.numPlanes = a,
                        n.numIntersection = 0
                }
                function e(t, e, i, r) {
                    var a = null !== t ? t.length : 0
                        , o = null;
                    if (0 !== a) {
                        if (o = l.value,
                        !0 !== r || null === o)
                            for (r = i + 4 * a,
                                     e = e.matrixWorldInverse,
                                     u.getNormalMatrix(e),
                                 (null === o || o.length < r) && (o = new Float32Array(r)),
                                     r = 0; r !== a; ++r,
                                     i += 4)
                                c.copy(t[r]).applyMatrix4(e, u),
                                    c.normal.toArray(o, i),
                                    o[i + 3] = c.constant;
                        l.value = o,
                            l.needsUpdate = !0
                    }
                    return n.numPlanes = a,
                        n.numIntersection = 0,
                        o
                }
                var n = this
                    , r = null
                    , a = 0
                    , o = !1
                    , s = !1
                    , c = new _
                    , u = new i
                    , l = {
                    value: null,
                    needsUpdate: !1
                };
                this.uniform = l,
                    this.numIntersection = this.numPlanes = 0,
                    this.init = function(t, n, i) {
                        var s = 0 !== t.length || n || 0 !== a || o;
                        return o = n,
                            r = e(t, i, 0),
                            a = t.length,
                            s
                    }
                    ,
                    this.beginShadows = function() {
                        s = !0,
                            e(null)
                    }
                    ,
                    this.endShadows = function() {
                        s = !1,
                            t()
                    }
                    ,
                    this.setState = function(n, i, c, u, h, p) {
                        if (!o || null === n || 0 === n.length || s && !c)
                            s ? e(null) : t();
                        else {
                            var f = 4 * (c = s ? 0 : a)
                                , d = h.clippingState || null;
                            for (l.value = d,
                                     d = e(n, u, f, p),
                                     n = 0; n !== f; ++n)
                                d[n] = r[n];
                            h.clippingState = d,
                                this.numIntersection = i ? this.numPlanes : 0,
                                this.numPlanes += c
                        }
                    }
            }
            function ut(t) {
                var e = {};
                return {
                    get: function(n) {
                        if (void 0 !== e[n])
                            return e[n];
                        switch (n) {
                            case "WEBGL_depth_texture":
                                var i = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                                break;
                            case "EXT_texture_filter_anisotropic":
                                i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                                break;
                            case "WEBGL_compressed_texture_s3tc":
                                i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                                break;
                            case "WEBGL_compressed_texture_pvrtc":
                                i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                                break;
                            default:
                                i = t.getExtension(n)
                        }
                        return e[n] = i
                    }
                }
            }
            function lt(t, e, n) {
                function i(t) {
                    var r = t.target;
                    for (var s in null !== (t = a.get(r)).index && e.remove(t.index),
                        t.attributes)
                        e.remove(t.attributes[s]);
                    r.removeEventListener("dispose", i),
                        a.delete(r),
                    (s = o.get(t)) && (e.remove(s),
                        o.delete(t)),
                        n.memory.geometries--
                }
                function r(t) {
                    var n = []
                        , i = t.index
                        , r = t.attributes.position;
                    if (null !== i) {
                        var a = i.array;
                        i = i.version,
                            r = 0;
                        for (var s = a.length; r < s; r += 3) {
                            var c = a[r + 0]
                                , u = a[r + 1]
                                , l = a[r + 2];
                            n.push(c, u, u, l, l, c)
                        }
                    } else
                        for (a = r.array,
                                 i = r.version,
                                 r = 0,
                                 s = a.length / 3 - 1; r < s; r += 3)
                            c = r + 0,
                                u = r + 1,
                                l = r + 2,
                                n.push(c, u, u, l, l, c);
                    (n = new (65535 < G(n) ? z : D)(n,1)).version = i,
                        e.update(n, 34963),
                    (a = o.get(t)) && e.remove(a),
                        o.set(t, n)
                }
                var a = new WeakMap
                    , o = new WeakMap;
                return {
                    get: function(t, e) {
                        var r = a.get(e);
                        return r || (e.addEventListener("dispose", i),
                            e.isBufferGeometry ? r = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new k).setFromObject(t)),
                                r = e._bufferGeometry),
                            a.set(e, r),
                            n.memory.geometries++,
                            r)
                    },
                    update: function(t) {
                        var n = t.index
                            , i = t.attributes;
                        for (var r in null !== n && e.update(n, 34963),
                            i)
                            e.update(i[r], 34962);
                        for (r in t = t.morphAttributes) {
                            i = 0;
                            for (var a = (n = t[r]).length; i < a; i++)
                                e.update(n[i], 34962)
                        }
                    },
                    getWireframeAttribute: function(t) {
                        var e = o.get(t);
                        if (e) {
                            var n = t.index;
                            null !== n && e.version < n.version && r(t)
                        } else
                            r(t);
                        return o.get(t)
                    }
                }
            }
            function ht(t, e, n, i) {
                var r, a, o, s = i.isWebGL2;
                this.setMode = function(t) {
                    r = t
                }
                    ,
                    this.setIndex = function(t) {
                        a = t.type,
                            o = t.bytesPerElement
                    }
                    ,
                    this.render = function(e, i) {
                        t.drawElements(r, i, a, e * o),
                            n.update(i, r)
                    }
                    ,
                    this.renderInstances = function(i, c, u, l) {
                        if (0 !== l) {
                            if (s) {
                                i = t;
                                var h = "drawElementsInstanced"
                            } else if (h = "drawElementsInstancedANGLE",
                            null === (i = e.get("ANGLE_instanced_arrays")))
                                return;
                            i[h](r, u, a, c * o, l),
                                n.update(u, r, l)
                        }
                    }
            }
            function pt(t) {
                var e = {
                    frame: 0,
                    calls: 0,
                    triangles: 0,
                    points: 0,
                    lines: 0
                };
                return {
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    render: e,
                    programs: null,
                    autoReset: !0,
                    reset: function() {
                        e.frame++,
                            e.calls = 0,
                            e.triangles = 0,
                            e.points = 0,
                            e.lines = 0
                    },
                    update: function(t, n, i) {
                        switch (i = i || 1,
                            e.calls++,
                            n) {
                            case 4:
                                e.triangles += t / 3 * i;
                                break;
                            case 1:
                                e.lines += t / 2 * i;
                                break;
                            case 3:
                                e.lines += i * (t - 1);
                                break;
                            case 2:
                                e.lines += i * t;
                                break;
                            case 0:
                                e.points += i * t
                        }
                    }
                }
            }
            function ft(t, e) {
                return Math.abs(e[1]) - Math.abs(t[1])
            }
            function dt(t) {
                var e = {}
                    , n = new Float32Array(8);
                return {
                    update: function(i, r, a, o) {
                        var s = i.morphTargetInfluences
                            , c = void 0 === s ? 0 : s.length;
                        if (void 0 === (i = e[r.id])) {
                            i = [];
                            for (var u = 0; u < c; u++)
                                i[u] = [u, 0];
                            e[r.id] = i
                        }
                        var l = a.morphTargets && r.morphAttributes.position;
                        for (a = a.morphNormals && r.morphAttributes.normal,
                                 u = 0; u < c; u++) {
                            var h = i[u];
                            0 !== h[1] && (l && r.deleteAttribute("morphTarget" + u),
                            a && r.deleteAttribute("morphNormal" + u))
                        }
                        for (u = 0; u < c; u++)
                            (h = i[u])[0] = u,
                                h[1] = s[u];
                        for (i.sort(ft),
                                 u = s = 0; u < 8; u++)
                            (h = i[u]) && (c = h[0],
                                h = h[1]) ? (l && r.setAttribute("morphTarget" + u, l[c]),
                            a && r.setAttribute("morphNormal" + u, a[c]),
                                s += n[u] = h) : n[u] = 0;
                        r = r.morphTargetsRelative ? 1 : 1 - s,
                            o.getUniforms().setValue(t, "morphTargetBaseInfluence", r),
                            o.getUniforms().setValue(t, "morphTargetInfluences", n)
                    }
                }
            }
            function mt(t, e, n, i) {
                var r = new WeakMap;
                return {
                    update: function(t) {
                        var a = i.render.frame
                            , o = t.geometry
                            , s = e.get(t, o);
                        return r.get(s) !== a && (o.isGeometry && s.updateFromObject(t),
                            e.update(s),
                            r.set(s, a)),
                        t.isInstancedMesh && n.update(t.instanceMatrix, 34962),
                            s
                    },
                    dispose: function() {
                        r = new WeakMap
                    }
                }
            }
            function gt(t, e, n, i, a, o, s, c, u, l) {
                r.call(this, t = void 0 !== t ? t : [], void 0 !== e ? e : 301, n, i, a, o, void 0 !== s ? s : 1022, c, u, l),
                    this.flipY = !1
            }
            function vt(t, e, n, i) {
                r.call(this, null),
                    this.image = {
                        data: t || null,
                        width: e || 1,
                        height: n || 1,
                        depth: i || 1
                    },
                    this.minFilter = this.magFilter = 1003,
                    this.wrapR = 1001,
                    this.flipY = this.generateMipmaps = !1,
                    this.needsUpdate = !0
            }
            function yt(t, e, n, i) {
                r.call(this, null),
                    this.image = {
                        data: t || null,
                        width: e || 1,
                        height: n || 1,
                        depth: i || 1
                    },
                    this.minFilter = this.magFilter = 1003,
                    this.wrapR = 1001,
                    this.flipY = this.generateMipmaps = !1,
                    this.needsUpdate = !0
            }
            function xt(t, e, n) {
                var i = t[0];
                if (i <= 0 || 0 < i)
                    return t;
                var r = e * n
                    , a = Ds[r];
                if (void 0 === a && (a = new Float32Array(r),
                    Ds[r] = a),
                0 !== e)
                    for (i.toArray(a, 0),
                             i = 1,
                             r = 0; i !== e; ++i)
                        r += n,
                            t[i].toArray(a, r);
                return a
            }
            function _t(t, e) {
                if (t.length === e.length) {
                    for (var n = 0, i = t.length; n < i; n++)
                        if (t[n] !== e[n])
                            return;
                    return 1
                }
            }
            function bt(t, e) {
                for (var n = 0, i = e.length; n < i; n++)
                    t[n] = e[n]
            }
            function Mt(t, e) {
                var n = Rs[e];
                void 0 === n && (n = new Int32Array(e),
                    Rs[e] = n);
                for (var i = 0; i !== e; ++i)
                    n[i] = t.allocateTextureUnit();
                return n
            }
            function wt(t, e) {
                var n = this.cache;
                n[0] !== e && (t.uniform1f(this.addr, e),
                    n[0] = e)
            }
            function St(t, e) {
                var n = this.cache;
                void 0 !== e.x ? n[0] === e.x && n[1] === e.y || (t.uniform2f(this.addr, e.x, e.y),
                    n[0] = e.x,
                    n[1] = e.y) : _t(n, e) || (t.uniform2fv(this.addr, e),
                    bt(n, e))
            }
            function At(t, e) {
                var n = this.cache;
                void 0 !== e.x ? n[0] === e.x && n[1] === e.y && n[2] === e.z || (t.uniform3f(this.addr, e.x, e.y, e.z),
                    n[0] = e.x,
                    n[1] = e.y,
                    n[2] = e.z) : void 0 !== e.r ? n[0] === e.r && n[1] === e.g && n[2] === e.b || (t.uniform3f(this.addr, e.r, e.g, e.b),
                    n[0] = e.r,
                    n[1] = e.g,
                    n[2] = e.b) : _t(n, e) || (t.uniform3fv(this.addr, e),
                    bt(n, e))
            }
            function Tt(t, e) {
                var n = this.cache;
                void 0 !== e.x ? n[0] === e.x && n[1] === e.y && n[2] === e.z && n[3] === e.w || (t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
                    n[0] = e.x,
                    n[1] = e.y,
                    n[2] = e.z,
                    n[3] = e.w) : _t(n, e) || (t.uniform4fv(this.addr, e),
                    bt(n, e))
            }
            function Lt(t, e) {
                var n = this.cache
                    , i = e.elements;
                void 0 === i ? _t(n, e) || (t.uniformMatrix2fv(this.addr, !1, e),
                    bt(n, e)) : _t(n, i) || (Bs.set(i),
                    t.uniformMatrix2fv(this.addr, !1, Bs),
                    bt(n, i))
            }
            function Et(t, e) {
                var n = this.cache
                    , i = e.elements;
                void 0 === i ? _t(n, e) || (t.uniformMatrix3fv(this.addr, !1, e),
                    bt(n, e)) : _t(n, i) || (Fs.set(i),
                    t.uniformMatrix3fv(this.addr, !1, Fs),
                    bt(n, i))
            }
            function Pt(t, e) {
                var n = this.cache
                    , i = e.elements;
                void 0 === i ? _t(n, e) || (t.uniformMatrix4fv(this.addr, !1, e),
                    bt(n, e)) : _t(n, i) || (zs.set(i),
                    t.uniformMatrix4fv(this.addr, !1, zs),
                    bt(n, i))
            }
            function Ct(t, e, n) {
                var i = this.cache
                    , r = n.allocateTextureUnit();
                i[0] !== r && (t.uniform1i(this.addr, r),
                    i[0] = r),
                    n.safeSetTexture2D(e || Cs, r)
            }
            function Ot(t, e, n) {
                var i = this.cache
                    , r = n.allocateTextureUnit();
                i[0] !== r && (t.uniform1i(this.addr, r),
                    i[0] = r),
                    n.setTexture2DArray(e || Os, r)
            }
            function It(t, e, n) {
                var i = this.cache
                    , r = n.allocateTextureUnit();
                i[0] !== r && (t.uniform1i(this.addr, r),
                    i[0] = r),
                    n.setTexture3D(e || Is, r)
            }
            function Nt(t, e, n) {
                var i = this.cache
                    , r = n.allocateTextureUnit();
                i[0] !== r && (t.uniform1i(this.addr, r),
                    i[0] = r),
                    n.safeSetTextureCube(e || Ns, r)
            }
            function Dt(t, e) {
                var n = this.cache;
                n[0] !== e && (t.uniform1i(this.addr, e),
                    n[0] = e)
            }
            function Rt(t, e) {
                var n = this.cache;
                _t(n, e) || (t.uniform2iv(this.addr, e),
                    bt(n, e))
            }
            function zt(t, e) {
                var n = this.cache;
                _t(n, e) || (t.uniform3iv(this.addr, e),
                    bt(n, e))
            }
            function Ft(t, e) {
                var n = this.cache;
                _t(n, e) || (t.uniform4iv(this.addr, e),
                    bt(n, e))
            }
            function Bt(t, e) {
                var n = this.cache;
                n[0] !== e && (t.uniform1ui(this.addr, e),
                    n[0] = e)
            }
            function Ut(t, e) {
                t.uniform1fv(this.addr, e)
            }
            function Gt(t, e) {
                t.uniform1iv(this.addr, e)
            }
            function kt(t, e) {
                t.uniform2iv(this.addr, e)
            }
            function jt(t, e) {
                t.uniform3iv(this.addr, e)
            }
            function Vt(t, e) {
                t.uniform4iv(this.addr, e)
            }
            function Wt(t, e) {
                e = xt(e, this.size, 2),
                    t.uniform2fv(this.addr, e)
            }
            function Ht(t, e) {
                e = xt(e, this.size, 3),
                    t.uniform3fv(this.addr, e)
            }
            function qt(t, e) {
                e = xt(e, this.size, 4),
                    t.uniform4fv(this.addr, e)
            }
            function Xt(t, e) {
                e = xt(e, this.size, 4),
                    t.uniformMatrix2fv(this.addr, !1, e)
            }
            function Yt(t, e) {
                e = xt(e, this.size, 9),
                    t.uniformMatrix3fv(this.addr, !1, e)
            }
            function Zt(t, e) {
                e = xt(e, this.size, 16),
                    t.uniformMatrix4fv(this.addr, !1, e)
            }
            function Jt(t, e, n) {
                var i = e.length
                    , r = Mt(n, i);
                for (t.uniform1iv(this.addr, r),
                         t = 0; t !== i; ++t)
                    n.safeSetTexture2D(e[t] || Cs, r[t])
            }
            function Kt(t, e, n) {
                var i = e.length
                    , r = Mt(n, i);
                for (t.uniform1iv(this.addr, r),
                         t = 0; t !== i; ++t)
                    n.safeSetTextureCube(e[t] || Ns, r[t])
            }
            function Qt(t, e, n) {
                this.id = t,
                    this.addr = n,
                    this.cache = [],
                    this.setValue = function(t) {
                        switch (t) {
                            case 5126:
                                return wt;
                            case 35664:
                                return St;
                            case 35665:
                                return At;
                            case 35666:
                                return Tt;
                            case 35674:
                                return Lt;
                            case 35675:
                                return Et;
                            case 35676:
                                return Pt;
                            case 5124:
                            case 35670:
                                return Dt;
                            case 35667:
                            case 35671:
                                return Rt;
                            case 35668:
                            case 35672:
                                return zt;
                            case 35669:
                            case 35673:
                                return Ft;
                            case 5125:
                                return Bt;
                            case 35678:
                            case 36198:
                            case 36298:
                            case 36306:
                            case 35682:
                                return Ct;
                            case 35679:
                            case 36299:
                            case 36307:
                                return It;
                            case 35680:
                            case 36300:
                            case 36308:
                            case 36293:
                                return Nt;
                            case 36289:
                            case 36303:
                            case 36311:
                            case 36292:
                                return Ot
                        }
                    }(e.type)
            }
            function $t(t, e, n) {
                this.id = t,
                    this.addr = n,
                    this.cache = [],
                    this.size = e.size,
                    this.setValue = function(t) {
                        switch (t) {
                            case 5126:
                                return Ut;
                            case 35664:
                                return Wt;
                            case 35665:
                                return Ht;
                            case 35666:
                                return qt;
                            case 35674:
                                return Xt;
                            case 35675:
                                return Yt;
                            case 35676:
                                return Zt;
                            case 5124:
                            case 35670:
                                return Gt;
                            case 35667:
                            case 35671:
                                return kt;
                            case 35668:
                            case 35672:
                                return jt;
                            case 35669:
                            case 35673:
                                return Vt;
                            case 35678:
                            case 36198:
                            case 36298:
                            case 36306:
                            case 35682:
                                return Jt;
                            case 35680:
                            case 36300:
                            case 36308:
                            case 36293:
                                return Kt
                        }
                    }(e.type)
            }
            function te(t) {
                this.id = t,
                    this.seq = [],
                    this.map = {}
            }
            function ee(t, e) {
                this.seq = [],
                    this.map = {};
                for (var n = t.getProgramParameter(e, 35718), i = 0; i < n; ++i) {
                    var r = t.getActiveUniform(e, i)
                        , a = t.getUniformLocation(e, r.name)
                        , o = this
                        , s = r.name
                        , c = s.length;
                    for (Us.lastIndex = 0; ; ) {
                        var u = Us.exec(s)
                            , l = Us.lastIndex
                            , h = u[1]
                            , p = u[3];
                        if ("]" === u[2] && (h |= 0),
                        void 0 === p || "[" === p && l + 2 === c) {
                            s = o,
                                r = new (void 0 === p ? Qt : $t)(h,r,a),
                                s.seq.push(r),
                                s.map[r.id] = r;
                            break
                        }
                        void 0 === (p = o.map[h]) && (p = new te(h),
                            h = o,
                            o = p,
                            h.seq.push(o),
                            h.map[o.id] = o),
                            o = p
                    }
                }
            }
            function ne(t, e, n) {
                return e = t.createShader(e),
                    t.shaderSource(e, n),
                    t.compileShader(e),
                    e
            }
            function ie(t) {
                switch (t) {
                    case 3e3:
                        return ["Linear", "( value )"];
                    case 3001:
                        return ["sRGB", "( value )"];
                    case 3002:
                        return ["RGBE", "( value )"];
                    case 3004:
                        return ["RGBM", "( value, 7.0 )"];
                    case 3005:
                        return ["RGBM", "( value, 16.0 )"];
                    case 3006:
                        return ["RGBD", "( value, 256.0 )"];
                    case 3007:
                        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                    case 3003:
                        return ["LogLuv", "( value )"];
                    default:
                        throw Error("unsupported encoding: " + t)
                }
            }
            function re(t, e, n) {
                var i = t.getShaderParameter(e, 35713)
                    , r = t.getShaderInfoLog(e).trim();
                if (i && "" === r)
                    return "";
                for (t = t.getShaderSource(e).split("\n"),
                         e = 0; e < t.length; e++)
                    t[e] = e + 1 + ": " + t[e];
                return "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + r + t.join("\n")
            }
            function ae(t, e) {
                return "vec4 " + t + "( vec4 value ) { return " + (e = ie(e))[0] + "ToLinear" + e[1] + "; }"
            }
            function oe(t) {
                return "" !== t
            }
            function se(t, e) {
                return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows)
            }
            function ce(t, e) {
                return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection)
            }
            function ue(t, e) {
                if (void 0 === (t = Es[e]))
                    throw Error("Can not resolve #include <" + e + ">");
                return t.replace(ks, ue)
            }
            function le(t, e, n, i) {
                return he(t, e, n, i)
            }
            function he(t, e, n, i) {
                for (t = "",
                         e = parseInt(e); e < parseInt(n); e++)
                    t += i.replace(/\[ i \]/g, "[ " + e + " ]").replace(/UNROLLED_LOOP_INDEX/g, e);
                return t
            }
            function pe(t) {
                var e = "precision " + t.precision + " float;\nprecision " + t.precision + " int;";
                return "highp" === t.precision ? e += "\n#define HIGH_PRECISION" : "mediump" === t.precision ? e += "\n#define MEDIUM_PRECISION" : "lowp" === t.precision && (e += "\n#define LOW_PRECISION"),
                    e
            }
            function fe(t, e, n) {
                var i, r, a, o, s, c = t.getContext(), u = n.defines, l = n.vertexShader, h = n.fragmentShader, p = (r = "SHADOWMAP_TYPE_BASIC",
                    1 === (i = n).shadowMapType ? r = "SHADOWMAP_TYPE_PCF" : 2 === i.shadowMapType ? r = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === i.shadowMapType && (r = "SHADOWMAP_TYPE_VSM"),
                    r), f = function(t) {
                    var e = "ENVMAP_TYPE_CUBE";
                    if (t.envMap)
                        switch (t.envMapMode) {
                            case 301:
                            case 302:
                                e = "ENVMAP_TYPE_CUBE";
                                break;
                            case 306:
                            case 307:
                                e = "ENVMAP_TYPE_CUBE_UV";
                                break;
                            case 303:
                            case 304:
                                e = "ENVMAP_TYPE_EQUIREC";
                                break;
                            case 305:
                                e = "ENVMAP_TYPE_SPHERE"
                        }
                    return e
                }(n), d = function(t) {
                    var e = "ENVMAP_MODE_REFLECTION";
                    if (t.envMap)
                        switch (t.envMapMode) {
                            case 302:
                            case 304:
                                e = "ENVMAP_MODE_REFRACTION"
                        }
                    return e
                }(n), m = function(t) {
                    var e = "ENVMAP_BLENDING_NONE";
                    if (t.envMap)
                        switch (t.combine) {
                            case 0:
                                e = "ENVMAP_BLENDING_MULTIPLY";
                                break;
                            case 1:
                                e = "ENVMAP_BLENDING_MIX";
                                break;
                            case 2:
                                e = "ENVMAP_BLENDING_ADD"
                        }
                    return e
                }(n), g = 0 < t.gammaFactor ? t.gammaFactor : 1, v = n.isWebGL2 ? "" : [n.extensionDerivatives || n.envMapCubeUV || n.bumpMap || n.tangentSpaceNormalMap || n.clearcoatNormalMap || n.flatShading || "physical" === n.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (n.extensionFragDepth || n.logarithmicDepthBuffer) && n.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", n.extensionDrawBuffers && n.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(oe).join("\n"), y = function(t) {
                    var e, n = [];
                    for (e in t) {
                        var i = t[e];
                        !1 !== i && n.push("#define " + e + " " + i)
                    }
                    return n.join("\n")
                }(u), x = c.createProgram();
                return n.isRawShaderMaterial ? (0 < (u = [y].filter(oe).join("\n")).length && (u += "\n"),
                0 < (p = [v, y].filter(oe).join("\n")).length && (p += "\n")) : (u = [pe(n), "#define SHADER_NAME " + n.shaderName, y, n.instancing ? "#define USE_INSTANCING" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + g, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + d : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(oe).join("\n"),
                    p = [v, pe(n), "#define SHADER_NAME " + n.shaderName, y, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + g, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + f : "", n.envMap ? "#define " + d : "", n.envMap ? "#define " + m : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== n.toneMapping ? "#define TONE_MAPPING" : "", 0 !== n.toneMapping ? Es.tonemapping_pars_fragment : "", 0 !== n.toneMapping ? function(t, e) {
                        switch (e) {
                            case 1:
                                e = "Linear";
                                break;
                            case 2:
                                e = "Reinhard";
                                break;
                            case 3:
                                e = "Uncharted2";
                                break;
                            case 4:
                                e = "OptimizedCineon";
                                break;
                            case 5:
                                e = "ACESFilmic";
                                break;
                            default:
                                throw Error("unsupported toneMapping: " + e)
                        }
                        return "vec3 toneMapping( vec3 color ) { return " + e + "ToneMapping( color ); }"
                    }(0, n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.outputEncoding || n.mapEncoding || n.matcapEncoding || n.envMapEncoding || n.emissiveMapEncoding || n.lightMapEncoding ? Es.encodings_pars_fragment : "", n.mapEncoding ? ae("mapTexelToLinear", n.mapEncoding) : "", n.matcapEncoding ? ae("matcapTexelToLinear", n.matcapEncoding) : "", n.envMapEncoding ? ae("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMapEncoding ? ae("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.lightMapEncoding ? ae("lightMapTexelToLinear", n.lightMapEncoding) : "", n.outputEncoding ? ("linearToOutputTexel",
                        a = n.outputEncoding,
                    "vec4 linearToOutputTexel( vec4 value ) { return LinearTo" + (a = ie(a))[0] + a[1] + "; }") : "", n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(oe).join("\n")),
                    l = ce(l = se(l = l.replace(ks, ue), n), n),
                    h = ce(h = se(h = h.replace(ks, ue), n), n),
                    l = l.replace(Vs, he).replace(js, le),
                    h = h.replace(Vs, he).replace(js, le),
                n.isWebGL2 && !n.isRawShaderMaterial && (f = !1,
                    d = /^\s*#version\s+300\s+es\s*\n/,
                n.isShaderMaterial && null !== l.match(d) && null !== h.match(d) && (f = !0,
                    l = l.replace(d, ""),
                    h = h.replace(d, "")),
                    u = "#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n" + u,
                    p = ["#version 300 es\n\n#define varying in", f ? "" : "out highp vec4 pc_fragColor;", f ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + p),
                    h = p + h,
                    l = ne(c, 35633, u + l),
                    h = ne(c, 35632, h),
                    c.attachShader(x, l),
                    c.attachShader(x, h),
                    void 0 !== n.index0AttributeName ? c.bindAttribLocation(x, 0, n.index0AttributeName) : !0 === n.morphTargets && c.bindAttribLocation(x, 0, "position"),
                    c.linkProgram(x),
                t.debug.checkShaderErrors && (t = c.getProgramInfoLog(x).trim(),
                    f = c.getShaderInfoLog(l).trim(),
                    d = c.getShaderInfoLog(h).trim(),
                    g = m = !0,
                    !1 === c.getProgramParameter(x, 35714) ? (m = !1,
                        v = re(c, l, "vertex"),
                        y = re(c, h, "fragment")) : "" !== t || "" !== f && "" !== d || (g = !1),
                g && (this.diagnostics = {
                    runnable: m,
                    programLog: t,
                    vertexShader: {
                        log: f,
                        prefix: u
                    },
                    fragmentShader: {
                        log: d,
                        prefix: p
                    }
                })),
                    c.detachShader(x, l),
                    c.detachShader(x, h),
                    c.deleteShader(l),
                    c.deleteShader(h),
                    this.getUniforms = function() {
                        return void 0 === o && (o = new ee(c,x)),
                            o
                    }
                    ,
                    this.getAttributes = function() {
                        if (void 0 === s) {
                            for (var t = {}, e = c.getProgramParameter(x, 35721), n = 0; n < e; n++) {
                                var i = c.getActiveAttrib(x, n).name;
                                t[i] = c.getAttribLocation(x, i)
                            }
                            s = t
                        }
                        return s
                    }
                    ,
                    this.destroy = function() {
                        c.deleteProgram(x),
                            this.program = void 0
                    }
                    ,
                    this.name = n.shaderName,
                    this.id = Gs++,
                    this.cacheKey = e,
                    this.usedTimes = 1,
                    this.program = x,
                    this.vertexShader = l,
                    this.fragmentShader = h,
                    this
            }
            function de(t, e, n) {
                function i(t) {
                    if (t)
                        t.isTexture ? e = t.encoding : t.isWebGLRenderTarget && (e = t.texture.encoding);
                    else
                        var e = 3e3;
                    return e
                }
                var r = []
                    , a = n.isWebGL2
                    , o = n.logarithmicDepthBuffer
                    , s = n.floatVertexTextures
                    , c = n.precision
                    , u = n.maxVertexUniforms
                    , l = n.vertexTextures
                    , h = {
                    MeshDepthMaterial: "depth",
                    MeshDistanceMaterial: "distanceRGBA",
                    MeshNormalMaterial: "normal",
                    MeshBasicMaterial: "basic",
                    MeshLambertMaterial: "lambert",
                    MeshPhongMaterial: "phong",
                    MeshToonMaterial: "toon",
                    MeshStandardMaterial: "physical",
                    MeshPhysicalMaterial: "physical",
                    MeshMatcapMaterial: "matcap",
                    LineBasicMaterial: "basic",
                    LineDashedMaterial: "dashed",
                    PointsMaterial: "points",
                    ShadowMaterial: "shadow",
                    SpriteMaterial: "sprite"
                }
                    , p = "precision isWebGL2 supportsVertexTextures outputEncoding instancing map mapEncoding matcap matcapEncoding envMap envMapMode envMapEncoding envMapCubeUV lightMap lightMapEncoding aoMap emissiveMap emissiveMapEncoding bumpMap normalMap objectSpaceNormalMap tangentSpaceNormalMap clearcoatMap clearcoatRoughnessMap clearcoatNormalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors vertexTangents vertexUvs uvsVertexOnly fog useFog fogExp2 flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights numDirLightShadows numPointLightShadows numSpotLightShadows shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering sheen".split(" ");
                this.getParameters = function(r, p, f, d, m, g, v) {
                    var y = d.fog;
                    d = r.isMeshStandardMaterial ? d.environment : null,
                        d = r.envMap || d;
                    var x = h[r.type];
                    if (v.isSkinnedMesh) {
                        var _ = v.skeleton.bones;
                        if (s)
                            _ = 1024;
                        else {
                            var b = Math.min(Math.floor((u - 20) / 4), _.length);
                            _ = b < _.length ? 0 : b
                        }
                    } else
                        _ = 0;
                    null !== r.precision && (c = n.getMaxPrecision(r.precision),
                        r.precision),
                        b = x ? (b = Ps[x],
                            {
                                name: r.type,
                                uniforms: Ms.clone(b.uniforms),
                                vertexShader: b.vertexShader,
                                fragmentShader: b.fragmentShader
                            }) : {
                            name: r.type,
                            uniforms: r.uniforms,
                            vertexShader: r.vertexShader,
                            fragmentShader: r.fragmentShader
                        },
                        r.onBeforeCompile(b, t);
                    var M = t.getRenderTarget();
                    return {
                        isWebGL2: a,
                        shaderID: x,
                        shaderName: b.name,
                        uniforms: b.uniforms,
                        vertexShader: b.vertexShader,
                        fragmentShader: b.fragmentShader,
                        defines: r.defines,
                        isRawShaderMaterial: r.isRawShaderMaterial,
                        isShaderMaterial: r.isShaderMaterial,
                        precision: c,
                        instancing: !0 === v.isInstancedMesh,
                        supportsVertexTextures: l,
                        outputEncoding: null !== M ? i(M.texture) : t.outputEncoding,
                        map: !!r.map,
                        mapEncoding: i(r.map),
                        matcap: !!r.matcap,
                        matcapEncoding: i(r.matcap),
                        envMap: !!d,
                        envMapMode: d && d.mapping,
                        envMapEncoding: i(d),
                        envMapCubeUV: !!d && (306 === d.mapping || 307 === d.mapping),
                        lightMap: !!r.lightMap,
                        lightMapEncoding: i(r.lightMap),
                        aoMap: !!r.aoMap,
                        emissiveMap: !!r.emissiveMap,
                        emissiveMapEncoding: i(r.emissiveMap),
                        bumpMap: !!r.bumpMap,
                        normalMap: !!r.normalMap,
                        objectSpaceNormalMap: 1 === r.normalMapType,
                        tangentSpaceNormalMap: 0 === r.normalMapType,
                        clearcoatMap: !!r.clearcoatMap,
                        clearcoatRoughnessMap: !!r.clearcoatRoughnessMap,
                        clearcoatNormalMap: !!r.clearcoatNormalMap,
                        displacementMap: !!r.displacementMap,
                        roughnessMap: !!r.roughnessMap,
                        metalnessMap: !!r.metalnessMap,
                        specularMap: !!r.specularMap,
                        alphaMap: !!r.alphaMap,
                        gradientMap: !!r.gradientMap,
                        sheen: !!r.sheen,
                        combine: r.combine,
                        vertexTangents: r.normalMap && r.vertexTangents,
                        vertexColors: r.vertexColors,
                        vertexUvs: !!(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatMap || r.clearcoatRoughnessMap || r.clearcoatNormalMap || r.displacementMap),
                        uvsVertexOnly: !(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatNormalMap || !r.displacementMap),
                        fog: !!y,
                        useFog: r.fog,
                        fogExp2: y && y.isFogExp2,
                        flatShading: r.flatShading,
                        sizeAttenuation: r.sizeAttenuation,
                        logarithmicDepthBuffer: o,
                        skinning: r.skinning && 0 < _,
                        maxBones: _,
                        useVertexTexture: s,
                        morphTargets: r.morphTargets,
                        morphNormals: r.morphNormals,
                        maxMorphTargets: t.maxMorphTargets,
                        maxMorphNormals: t.maxMorphNormals,
                        numDirLights: p.directional.length,
                        numPointLights: p.point.length,
                        numSpotLights: p.spot.length,
                        numRectAreaLights: p.rectArea.length,
                        numHemiLights: p.hemi.length,
                        numDirLightShadows: p.directionalShadowMap.length,
                        numPointLightShadows: p.pointShadowMap.length,
                        numSpotLightShadows: p.spotShadowMap.length,
                        numClippingPlanes: m,
                        numClipIntersection: g,
                        dithering: r.dithering,
                        shadowMapEnabled: t.shadowMap.enabled && 0 < f.length,
                        shadowMapType: t.shadowMap.type,
                        toneMapping: r.toneMapped ? t.toneMapping : 0,
                        physicallyCorrectLights: t.physicallyCorrectLights,
                        premultipliedAlpha: r.premultipliedAlpha,
                        alphaTest: r.alphaTest,
                        doubleSided: 2 === r.side,
                        flipSided: 1 === r.side,
                        depthPacking: void 0 !== r.depthPacking && r.depthPacking,
                        index0AttributeName: r.index0AttributeName,
                        extensionDerivatives: r.extensions && r.extensions.derivatives,
                        extensionFragDepth: r.extensions && r.extensions.fragDepth,
                        extensionDrawBuffers: r.extensions && r.extensions.drawBuffers,
                        extensionShaderTextureLOD: r.extensions && r.extensions.shaderTextureLOD,
                        rendererExtensionFragDepth: a || null !== e.get("EXT_frag_depth"),
                        rendererExtensionDrawBuffers: a || null !== e.get("WEBGL_draw_buffers"),
                        rendererExtensionShaderTextureLod: a || null !== e.get("EXT_shader_texture_lod"),
                        onBeforeCompile: r.onBeforeCompile
                    }
                }
                    ,
                    this.getProgramCacheKey = function(e) {
                        var n = [];
                        if (e.shaderID ? n.push(e.shaderID) : (n.push(e.fragmentShader),
                            n.push(e.vertexShader)),
                        void 0 !== e.defines)
                            for (var i in e.defines)
                                n.push(i),
                                    n.push(e.defines[i]);
                        if (void 0 === e.isRawShaderMaterial) {
                            for (i = 0; i < p.length; i++)
                                n.push(e[p[i]]);
                            n.push(t.outputEncoding),
                                n.push(t.gammaFactor)
                        }
                        return n.push(e.onBeforeCompile.toString()),
                            n.join()
                    }
                    ,
                    this.acquireProgram = function(e, n) {
                        for (var i, a = 0, o = r.length; a < o; a++) {
                            var s = r[a];
                            if (s.cacheKey === n) {
                                ++(i = s).usedTimes;
                                break
                            }
                        }
                        return void 0 === i && (i = new fe(t,n,e),
                            r.push(i)),
                            i
                    }
                    ,
                    this.releaseProgram = function(t) {
                        if (0 == --t.usedTimes) {
                            var e = r.indexOf(t);
                            r[e] = r[r.length - 1],
                                r.pop(),
                                t.destroy()
                        }
                    }
                    ,
                    this.programs = r
            }
            function me() {
                var t = new WeakMap;
                return {
                    get: function(e) {
                        var n = t.get(e);
                        return void 0 === n && (n = {},
                            t.set(e, n)),
                            n
                    },
                    remove: function(e) {
                        t.delete(e)
                    },
                    update: function(e, n, i) {
                        t.get(e)[n] = i
                    },
                    dispose: function() {
                        t = new WeakMap
                    }
                }
            }
            function ge(t, e) {
                return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
            }
            function ve(t, e) {
                return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
            }
            function ye() {
                function t(t, i, r, o, s, c) {
                    var u = e[n];
                    return void 0 === u ? (u = {
                        id: t.id,
                        object: t,
                        geometry: i,
                        material: r,
                        program: r.program || a,
                        groupOrder: o,
                        renderOrder: t.renderOrder,
                        z: s,
                        group: c
                    },
                        e[n] = u) : (u.id = t.id,
                        u.object = t,
                        u.geometry = i,
                        u.material = r,
                        u.program = r.program || a,
                        u.groupOrder = o,
                        u.renderOrder = t.renderOrder,
                        u.z = s,
                        u.group = c),
                        n++,
                        u
                }
                var e = []
                    , n = 0
                    , i = []
                    , r = []
                    , a = {
                    id: -1
                };
                return {
                    opaque: i,
                    transparent: r,
                    init: function() {
                        n = 0,
                            i.length = 0,
                            r.length = 0
                    },
                    push: function(e, n, a, o, s, c) {
                        e = t(e, n, a, o, s, c),
                            (!0 === a.transparent ? r : i).push(e)
                    },
                    unshift: function(e, n, a, o, s, c) {
                        e = t(e, n, a, o, s, c),
                            (!0 === a.transparent ? r : i).unshift(e)
                    },
                    finish: function() {
                        for (var t = n, i = e.length; t < i; t++) {
                            var r = e[t];
                            if (null === r.id)
                                break;
                            r.id = null,
                                r.object = null,
                                r.geometry = null,
                                r.material = null,
                                r.program = null,
                                r.group = null
                        }
                    },
                    sort: function(t, e) {
                        1 < i.length && i.sort(t || ge),
                        1 < r.length && r.sort(e || ve)
                    }
                }
            }
            function xe() {
                function t(n) {
                    (n = n.target).removeEventListener("dispose", t),
                        e.delete(n)
                }
                var e = new WeakMap;
                return {
                    get: function(n, i) {
                        var r = e.get(n);
                        if (void 0 === r) {
                            var a = new ye;
                            e.set(n, new WeakMap),
                                e.get(n).set(i, a),
                                n.addEventListener("dispose", t)
                        } else
                            void 0 === (a = r.get(i)) && (a = new ye,
                                r.set(i, a));
                        return a
                    },
                    dispose: function() {
                        e = new WeakMap
                    }
                }
            }
            function _e() {
                var t = {};
                return {
                    get: function(e) {
                        if (void 0 !== t[e.id])
                            return t[e.id];
                        switch (e.type) {
                            case "DirectionalLight":
                                var n = {
                                    direction: new l,
                                    color: new M
                                };
                                break;
                            case "SpotLight":
                                n = {
                                    position: new l,
                                    direction: new l,
                                    color: new M,
                                    distance: 0,
                                    coneCos: 0,
                                    penumbraCos: 0,
                                    decay: 0
                                };
                                break;
                            case "PointLight":
                                n = {
                                    position: new l,
                                    color: new M,
                                    distance: 0,
                                    decay: 0
                                };
                                break;
                            case "HemisphereLight":
                                n = {
                                    direction: new l,
                                    skyColor: new M,
                                    groundColor: new M
                                };
                                break;
                            case "RectAreaLight":
                                n = {
                                    color: new M,
                                    position: new l,
                                    halfWidth: new l,
                                    halfHeight: new l
                                }
                        }
                        return t[e.id] = n
                    }
                }
            }
            function be(t, e) {
                return (e.castShadow ? 1 : 0) - (t.castShadow ? 1 : 0)
            }
            function Me() {
                for (var t = new _e, e = function() {
                    var t = {};
                    return {
                        get: function(e) {
                            if (void 0 !== t[e.id])
                                return t[e.id];
                            switch (e.type) {
                                case "DirectionalLight":
                                    var i = {
                                        shadowBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new n
                                    };
                                    break;
                                case "SpotLight":
                                    i = {
                                        shadowBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new n
                                    };
                                    break;
                                case "PointLight":
                                    i = {
                                        shadowBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new n,
                                        shadowCameraNear: 1,
                                        shadowCameraFar: 1e3
                                    }
                            }
                            return t[e.id] = i
                        }
                    }
                }(), i = {
                    version: 0,
                    hash: {
                        directionalLength: -1,
                        pointLength: -1,
                        spotLength: -1,
                        rectAreaLength: -1,
                        hemiLength: -1,
                        numDirectionalShadows: -1,
                        numPointShadows: -1,
                        numSpotShadows: -1
                    },
                    ambient: [0, 0, 0],
                    probe: [],
                    directional: [],
                    directionalShadow: [],
                    directionalShadowMap: [],
                    directionalShadowMatrix: [],
                    spot: [],
                    spotShadow: [],
                    spotShadowMap: [],
                    spotShadowMatrix: [],
                    rectArea: [],
                    point: [],
                    pointShadow: [],
                    pointShadowMap: [],
                    pointShadowMatrix: [],
                    hemi: []
                }, r = 0; r < 9; r++)
                    i.probe.push(new l);
                var a = new l
                    , o = new h
                    , s = new h;
                return {
                    setup: function(n, r, c) {
                        for (var u = 0, l = 0, h = 0, p = 0; p < 9; p++)
                            i.probe[p].set(0, 0, 0);
                        var f = r = 0
                            , d = 0
                            , m = 0
                            , g = 0
                            , v = 0
                            , y = 0
                            , x = 0;
                        c = c.matrixWorldInverse,
                            n.sort(be),
                            p = 0;
                        for (var _ = n.length; p < _; p++) {
                            var b = n[p]
                                , M = b.color
                                , w = b.intensity
                                , S = b.distance
                                , A = b.shadow && b.shadow.map ? b.shadow.map.texture : null;
                            if (b.isAmbientLight)
                                u += M.r * w,
                                    l += M.g * w,
                                    h += M.b * w;
                            else if (b.isLightProbe)
                                for (A = 0; A < 9; A++)
                                    i.probe[A].addScaledVector(b.sh.coefficients[A], w);
                            else if (b.isDirectionalLight) {
                                var T = t.get(b);
                                T.color.copy(b.color).multiplyScalar(b.intensity),
                                    T.direction.setFromMatrixPosition(b.matrixWorld),
                                    a.setFromMatrixPosition(b.target.matrixWorld),
                                    T.direction.sub(a),
                                    T.direction.transformDirection(c),
                                b.castShadow && (w = b.shadow,
                                    (M = e.get(b)).shadowBias = w.bias,
                                    M.shadowRadius = w.radius,
                                    M.shadowMapSize = w.mapSize,
                                    i.directionalShadow[r] = M,
                                    i.directionalShadowMap[r] = A,
                                    i.directionalShadowMatrix[r] = b.shadow.matrix,
                                    v++),
                                    i.directional[r] = T,
                                    r++
                            } else
                                b.isSpotLight ? ((T = t.get(b)).position.setFromMatrixPosition(b.matrixWorld),
                                    T.position.applyMatrix4(c),
                                    T.color.copy(M).multiplyScalar(w),
                                    T.distance = S,
                                    T.direction.setFromMatrixPosition(b.matrixWorld),
                                    a.setFromMatrixPosition(b.target.matrixWorld),
                                    T.direction.sub(a),
                                    T.direction.transformDirection(c),
                                    T.coneCos = Math.cos(b.angle),
                                    T.penumbraCos = Math.cos(b.angle * (1 - b.penumbra)),
                                    T.decay = b.decay,
                                b.castShadow && (w = b.shadow,
                                    (M = e.get(b)).shadowBias = w.bias,
                                    M.shadowRadius = w.radius,
                                    M.shadowMapSize = w.mapSize,
                                    i.spotShadow[d] = M,
                                    i.spotShadowMap[d] = A,
                                    i.spotShadowMatrix[d] = b.shadow.matrix,
                                    x++),
                                    i.spot[d] = T,
                                    d++) : b.isRectAreaLight ? ((T = t.get(b)).color.copy(M).multiplyScalar(w),
                                    T.position.setFromMatrixPosition(b.matrixWorld),
                                    T.position.applyMatrix4(c),
                                    s.identity(),
                                    o.copy(b.matrixWorld),
                                    o.premultiply(c),
                                    s.extractRotation(o),
                                    T.halfWidth.set(.5 * b.width, 0, 0),
                                    T.halfHeight.set(0, .5 * b.height, 0),
                                    T.halfWidth.applyMatrix4(s),
                                    T.halfHeight.applyMatrix4(s),
                                    i.rectArea[m] = T,
                                    m++) : b.isPointLight ? ((T = t.get(b)).position.setFromMatrixPosition(b.matrixWorld),
                                    T.position.applyMatrix4(c),
                                    T.color.copy(b.color).multiplyScalar(b.intensity),
                                    T.distance = b.distance,
                                    T.decay = b.decay,
                                b.castShadow && (w = b.shadow,
                                    (M = e.get(b)).shadowBias = w.bias,
                                    M.shadowRadius = w.radius,
                                    M.shadowMapSize = w.mapSize,
                                    M.shadowCameraNear = w.camera.near,
                                    M.shadowCameraFar = w.camera.far,
                                    i.pointShadow[f] = M,
                                    i.pointShadowMap[f] = A,
                                    i.pointShadowMatrix[f] = b.shadow.matrix,
                                    y++),
                                    i.point[f] = T,
                                    f++) : b.isHemisphereLight && ((T = t.get(b)).direction.setFromMatrixPosition(b.matrixWorld),
                                    T.direction.transformDirection(c),
                                    T.direction.normalize(),
                                    T.skyColor.copy(b.color).multiplyScalar(w),
                                    T.groundColor.copy(b.groundColor).multiplyScalar(w),
                                    i.hemi[g] = T,
                                    g++)
                        }
                        i.ambient[0] = u,
                            i.ambient[1] = l,
                            i.ambient[2] = h,
                        (n = i.hash).directionalLength === r && n.pointLength === f && n.spotLength === d && n.rectAreaLength === m && n.hemiLength === g && n.numDirectionalShadows === v && n.numPointShadows === y && n.numSpotShadows === x || (i.directional.length = r,
                            i.spot.length = d,
                            i.rectArea.length = m,
                            i.point.length = f,
                            i.hemi.length = g,
                            i.directionalShadow.length = v,
                            i.directionalShadowMap.length = v,
                            i.pointShadow.length = y,
                            i.pointShadowMap.length = y,
                            i.spotShadow.length = x,
                            i.spotShadowMap.length = x,
                            i.directionalShadowMatrix.length = v,
                            i.pointShadowMatrix.length = y,
                            i.spotShadowMatrix.length = x,
                            n.directionalLength = r,
                            n.pointLength = f,
                            n.spotLength = d,
                            n.rectAreaLength = m,
                            n.hemiLength = g,
                            n.numDirectionalShadows = v,
                            n.numPointShadows = y,
                            n.numSpotShadows = x,
                            i.version = Ws++)
                    },
                    state: i
                }
            }
            function we() {
                var t = new Me
                    , e = []
                    , n = [];
                return {
                    init: function() {
                        e.length = 0,
                            n.length = 0
                    },
                    state: {
                        lightsArray: e,
                        shadowsArray: n,
                        lights: t
                    },
                    setupLights: function(i) {
                        t.setup(e, n, i)
                    },
                    pushLight: function(t) {
                        e.push(t)
                    },
                    pushShadow: function(t) {
                        n.push(t)
                    }
                }
            }
            function Se() {
                function t(n) {
                    (n = n.target).removeEventListener("dispose", t),
                        e.delete(n)
                }
                var e = new WeakMap;
                return {
                    get: function(n, i) {
                        if (!1 === e.has(n)) {
                            var r = new we;
                            e.set(n, new WeakMap),
                                e.get(n).set(i, r),
                                n.addEventListener("dispose", t)
                        } else
                            !1 === e.get(n).has(i) ? (r = new we,
                                e.get(n).set(i, r)) : r = e.get(n).get(i);
                        return r
                    },
                    dispose: function() {
                        e = new WeakMap
                    }
                }
            }
            function Ae(t) {
                L.call(this),
                    this.type = "MeshDepthMaterial",
                    this.depthPacking = 3200,
                    this.morphTargets = this.skinning = !1,
                    this.displacementMap = this.alphaMap = this.map = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.fog = !1,
                    this.setValues(t)
            }
            function Te(t) {
                L.call(this),
                    this.type = "MeshDistanceMaterial",
                    this.referencePosition = new l,
                    this.nearDistance = 1,
                    this.farDistance = 1e3,
                    this.morphTargets = this.skinning = !1,
                    this.displacementMap = this.alphaMap = this.map = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.fog = !1,
                    this.setValues(t)
            }
            function Le(t, e, i) {
                function r(t, e, n) {
                    var i = d[n = t << 0 | e << 1 | n << 2];
                    return void 0 === i && (i = new Ae({
                        depthPacking: 3201,
                        morphTargets: t,
                        skinning: e
                    }),
                        d[n] = i),
                        i
                }
                function s(t, e, n) {
                    var i = m[n = t << 0 | e << 1 | n << 2];
                    return void 0 === i && (i = new Te({
                        morphTargets: t,
                        skinning: e
                    }),
                        m[n] = i),
                        i
                }
                function c(e, n, i, a, o, c) {
                    var u = e.geometry
                        , l = r
                        , h = e.customDepthMaterial;
                    return !0 === i.isPointLight && (l = s,
                        h = e.customDistanceMaterial),
                        e = void 0 === h ? (!(h = !1) === n.morphTargets && (!0 === u.isBufferGeometry ? h = u.morphAttributes && u.morphAttributes.position && 0 < u.morphAttributes.position.length : !0 === u.isGeometry && (h = u.morphTargets && 0 < u.morphTargets.length)),
                        !(u = !1) === e.isSkinnedMesh && !0 === n.skinning && (u = !0),
                            l(h, u, !0 === e.isInstancedMesh)) : h,
                    t.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length && (h = e.uuid,
                        l = n.uuid,
                    void 0 === (u = g[h]) && (u = {},
                        g[h] = u),
                    void 0 === (h = u[l]) && (h = e.clone(),
                        u[l] = h),
                        e = h),
                        e.visible = n.visible,
                        e.wireframe = n.wireframe,
                        e.side = 3 === c ? null !== n.shadowSide ? n.shadowSide : n.side : null !== n.shadowSide ? n.shadowSide : v[n.side],
                        e.clipShadows = n.clipShadows,
                        e.clippingPlanes = n.clippingPlanes,
                        e.clipIntersection = n.clipIntersection,
                        e.wireframeLinewidth = n.wireframeLinewidth,
                        e.linewidth = n.linewidth,
                    !0 === i.isPointLight && !0 === e.isMeshDistanceMaterial && (e.referencePosition.setFromMatrixPosition(i.matrixWorld),
                        e.nearDistance = a,
                        e.farDistance = o),
                        e
                }
                function u(n, i, r, a, o) {
                    if (!1 !== n.visible) {
                        if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === o) && (!n.frustumCulled || l.intersectsObject(n))) {
                            n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, n.matrixWorld);
                            var s = e.update(n)
                                , h = n.material;
                            if (Array.isArray(h))
                                for (var p = s.groups, f = 0, d = p.length; f < d; f++) {
                                    var m = p[f]
                                        , g = h[m.materialIndex];
                                    g && g.visible && (g = c(n, g, a, r.near, r.far, o),
                                        t.renderBufferDirect(r, null, s, g, n, m))
                                }
                            else
                                h.visible && (g = c(n, h, a, r.near, r.far, o),
                                    t.renderBufferDirect(r, null, s, g, n, null))
                        }
                        for (s = 0,
                                 h = (n = n.children).length; s < h; s++)
                            u(n[s], i, r, a, o)
                    }
                }
                var l = new tt
                    , h = new n
                    , p = new n
                    , f = new a
                    , d = []
                    , m = []
                    , g = {}
                    , v = {
                    0: 1,
                    1: 0,
                    2: 2
                }
                    , y = new Y({
                    defines: {
                        SAMPLE_RATE: .25,
                        HALF_SAMPLE_RATE: .125
                    },
                    uniforms: {
                        shadow_pass: {
                            value: null
                        },
                        resolution: {
                            value: new n
                        },
                        radius: {
                            value: 4
                        }
                    },
                    vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
                    fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
                })
                    , x = y.clone();
                x.defines.HORIZONAL_PASS = 1;
                var _ = new k;
                _.setAttribute("position", new P(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]),3));
                var b = new j(_,y)
                    , M = this;
                this.enabled = !1,
                    this.autoUpdate = !0,
                    this.needsUpdate = !1,
                    this.type = 1,
                    this.render = function(n, r, a) {
                        if (!1 !== M.enabled && (!1 !== M.autoUpdate || !1 !== M.needsUpdate) && 0 !== n.length) {
                            var s = t.getRenderTarget()
                                , c = t.getActiveCubeFace()
                                , d = t.getActiveMipmapLevel()
                                , m = t.state;
                            m.setBlending(0),
                                m.buffers.color.setClear(1, 1, 1, 1),
                                m.buffers.depth.setTest(!0),
                                m.setScissorTest(!1);
                            for (var g = 0, v = n.length; g < v; g++) {
                                var _ = n[g]
                                    , w = _.shadow;
                                if (void 0 !== w) {
                                    h.copy(w.mapSize);
                                    var S = w.getFrameExtents();
                                    h.multiply(S),
                                        p.copy(w.mapSize),
                                    (h.x > i || h.y > i) && (h.x > i && (p.x = Math.floor(i / S.x),
                                        h.x = p.x * S.x,
                                        w.mapSize.x = p.x),
                                    h.y > i && (p.y = Math.floor(i / S.y),
                                        h.y = p.y * S.y,
                                        w.mapSize.y = p.y)),
                                    null !== w.map || w.isPointLightShadow || 3 !== this.type || (S = {
                                        minFilter: 1006,
                                        magFilter: 1006,
                                        format: 1023
                                    },
                                        w.map = new o(h.x,h.y,S),
                                        w.map.texture.name = _.name + ".shadowMap",
                                        w.mapPass = new o(h.x,h.y,S),
                                        w.camera.updateProjectionMatrix()),
                                    null === w.map && (S = {
                                        minFilter: 1003,
                                        magFilter: 1003,
                                        format: 1023
                                    },
                                        w.map = new o(h.x,h.y,S),
                                        w.map.texture.name = _.name + ".shadowMap",
                                        w.camera.updateProjectionMatrix()),
                                        t.setRenderTarget(w.map),
                                        t.clear(),
                                        S = w.getViewportCount();
                                    for (var A = 0; A < S; A++) {
                                        var T = w.getViewport(A);
                                        f.set(p.x * T.x, p.y * T.y, p.x * T.z, p.y * T.w),
                                            m.viewport(f),
                                            w.updateMatrices(_, A),
                                            l = w.getFrustum(),
                                            u(r, a, w.camera, _, this.type)
                                    }
                                    w.isPointLightShadow || 3 !== this.type || (_ = w,
                                        w = a,
                                        S = e.update(b),
                                        y.uniforms.shadow_pass.value = _.map.texture,
                                        y.uniforms.resolution.value = _.mapSize,
                                        y.uniforms.radius.value = _.radius,
                                        t.setRenderTarget(_.mapPass),
                                        t.clear(),
                                        t.renderBufferDirect(w, null, S, y, b, null),
                                        x.uniforms.shadow_pass.value = _.mapPass.texture,
                                        x.uniforms.resolution.value = _.mapSize,
                                        x.uniforms.radius.value = _.radius,
                                        t.setRenderTarget(_.map),
                                        t.clear(),
                                        t.renderBufferDirect(w, null, S, x, b, null))
                                }
                            }
                            M.needsUpdate = !1,
                                t.setRenderTarget(s, c, d)
                        }
                    }
            }
            function Ee(t, e, n) {
                function i(e, n, i) {
                    var r = new Uint8Array(4)
                        , a = t.createTexture();
                    for (t.bindTexture(e, a),
                             t.texParameteri(e, 10241, 9728),
                             t.texParameteri(e, 10240, 9728),
                             e = 0; e < i; e++)
                        t.texImage2D(n + e, 0, 6408, 1, 1, 0, 6408, 5121, r);
                    return a
                }
                function r(n, i) {
                    v[n] = 1,
                    0 === y[n] && (t.enableVertexAttribArray(n),
                        y[n] = 1),
                    x[n] !== i && ((f ? t : e.get("ANGLE_instanced_arrays"))[f ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i),
                        x[n] = i)
                }
                function o(e) {
                    !0 !== _[e] && (t.enable(e),
                        _[e] = !0)
                }
                function s(e) {
                    !1 !== _[e] && (t.disable(e),
                        _[e] = !1)
                }
                function c(e, n, i, r, a, c, u, l) {
                    if (0 === e)
                        M && (s(3042),
                            M = !1);
                    else if (M || (o(3042),
                        M = !0),
                    5 !== e) {
                        if (e !== w || l !== C) {
                            if (100 === S && 100 === L || (t.blendEquation(32774),
                                L = S = 100),
                                l)
                                switch (e) {
                                    case 1:
                                        t.blendFuncSeparate(1, 771, 1, 771);
                                        break;
                                    case 2:
                                        t.blendFunc(1, 1);
                                        break;
                                    case 3:
                                        t.blendFuncSeparate(0, 0, 769, 771);
                                        break;
                                    case 4:
                                        t.blendFuncSeparate(0, 768, 0, 770)
                                }
                            else
                                switch (e) {
                                    case 1:
                                        t.blendFuncSeparate(770, 771, 1, 771);
                                        break;
                                    case 2:
                                        t.blendFunc(770, 1);
                                        break;
                                    case 3:
                                        t.blendFunc(0, 769);
                                        break;
                                    case 4:
                                        t.blendFunc(0, 768)
                                }
                            P = E = T = A = null,
                                w = e,
                                C = l
                        }
                    } else
                        a = a || n,
                            c = c || i,
                            u = u || r,
                        n === S && a === L || (t.blendEquationSeparate(V[n], V[a]),
                            S = n,
                            L = a),
                        i === A && r === T && c === E && u === P || (t.blendFuncSeparate(W[i], W[r], W[c], W[u]),
                            A = i,
                            T = r,
                            E = c,
                            P = u),
                            w = e,
                            C = null
                }
                function u(e) {
                    O !== e && (e ? t.frontFace(2304) : t.frontFace(2305),
                        O = e)
                }
                function l(e) {
                    0 !== e ? (o(2884),
                    e !== I && (1 === e ? t.cullFace(1029) : 2 === e ? t.cullFace(1028) : t.cullFace(1032))) : s(2884),
                        I = e
                }
                function h(e, n, i) {
                    e ? (o(32823),
                    D === n && R === i || (t.polygonOffset(n, i),
                        D = n,
                        R = i)) : s(32823)
                }
                function p(e) {
                    void 0 === e && (e = 33984 + z - 1),
                    B !== e && (t.activeTexture(e),
                        B = e)
                }
                var f = n.isWebGL2
                    , d = new function() {
                        var e = !1
                            , n = new a
                            , i = null
                            , r = new a(0,0,0,0);
                        return {
                            setMask: function(n) {
                                i === n || e || (t.colorMask(n, n, n, n),
                                    i = n)
                            },
                            setLocked: function(t) {
                                e = t
                            },
                            setClear: function(e, i, a, o, s) {
                                !0 === s && (e *= o,
                                    i *= o,
                                    a *= o),
                                    n.set(e, i, a, o),
                                !1 === r.equals(n) && (t.clearColor(e, i, a, o),
                                    r.copy(n))
                            },
                            reset: function() {
                                e = !1,
                                    i = null,
                                    r.set(-1, 0, 0, 0)
                            }
                        }
                    }
                    , m = new function() {
                        var e = !1
                            , n = null
                            , i = null
                            , r = null;
                        return {
                            setTest: function(t) {
                                (t ? o : s)(2929)
                            },
                            setMask: function(i) {
                                n === i || e || (t.depthMask(i),
                                    n = i)
                            },
                            setFunc: function(e) {
                                if (i !== e) {
                                    if (e)
                                        switch (e) {
                                            case 0:
                                                t.depthFunc(512);
                                                break;
                                            case 1:
                                                t.depthFunc(519);
                                                break;
                                            case 2:
                                                t.depthFunc(513);
                                                break;
                                            case 3:
                                                t.depthFunc(515);
                                                break;
                                            case 4:
                                                t.depthFunc(514);
                                                break;
                                            case 5:
                                                t.depthFunc(518);
                                                break;
                                            case 6:
                                                t.depthFunc(516);
                                                break;
                                            case 7:
                                                t.depthFunc(517);
                                                break;
                                            default:
                                                t.depthFunc(515)
                                        }
                                    else
                                        t.depthFunc(515);
                                    i = e
                                }
                            },
                            setLocked: function(t) {
                                e = t
                            },
                            setClear: function(e) {
                                r !== e && (t.clearDepth(e),
                                    r = e)
                            },
                            reset: function() {
                                e = !1,
                                    r = i = n = null
                            }
                        }
                    }
                    , g = new function() {
                        var e = !1
                            , n = null
                            , i = null
                            , r = null
                            , a = null
                            , c = null
                            , u = null
                            , l = null
                            , h = null;
                        return {
                            setTest: function(t) {
                                e || (t ? o : s)(2960)
                            },
                            setMask: function(i) {
                                n === i || e || (t.stencilMask(i),
                                    n = i)
                            },
                            setFunc: function(e, n, o) {
                                i === e && r === n && a === o || (t.stencilFunc(e, n, o),
                                    i = e,
                                    r = n,
                                    a = o)
                            },
                            setOp: function(e, n, i) {
                                c === e && u === n && l === i || (t.stencilOp(e, n, i),
                                    c = e,
                                    u = n,
                                    l = i)
                            },
                            setLocked: function(t) {
                                e = t
                            },
                            setClear: function(e) {
                                h !== e && (t.clearStencil(e),
                                    h = e)
                            },
                            reset: function() {
                                e = !1,
                                    h = l = u = c = a = r = i = n = null
                            }
                        }
                    }
                ;
                n = t.getParameter(34921);
                var v = new Uint8Array(n)
                    , y = new Uint8Array(n)
                    , x = new Uint8Array(n)
                    , _ = {}
                    , b = null
                    , M = null
                    , w = null
                    , S = null
                    , A = null
                    , T = null
                    , L = null
                    , E = null
                    , P = null
                    , C = !1
                    , O = null
                    , I = null
                    , N = null
                    , D = null
                    , R = null
                    , z = t.getParameter(35661)
                    , F = !1;
                n = 0,
                    -1 !== (n = t.getParameter(7938)).indexOf("WebGL") ? (n = parseFloat(/^WebGL ([0-9])/.exec(n)[1]),
                        F = 1 <= n) : -1 !== n.indexOf("OpenGL ES") && (n = parseFloat(/^OpenGL ES ([0-9])/.exec(n)[1]),
                        F = 2 <= n);
                var B = null
                    , U = {}
                    , G = new a
                    , k = new a
                    , j = {};
                j[3553] = i(3553, 3553, 1),
                    j[34067] = i(34067, 34069, 6),
                    d.setClear(0, 0, 0, 1),
                    m.setClear(1),
                    g.setClear(0),
                    o(2929),
                    m.setFunc(3),
                    u(!1),
                    l(1),
                    o(2884),
                    c(0);
                var V = {
                    100: 32774,
                    101: 32778,
                    102: 32779
                };
                f ? (V[103] = 32775,
                    V[104] = 32776) : null !== (n = e.get("EXT_blend_minmax")) && (V[103] = n.MIN_EXT,
                    V[104] = n.MAX_EXT);
                var W = {
                    200: 0,
                    201: 1,
                    202: 768,
                    204: 770,
                    210: 776,
                    208: 774,
                    206: 772,
                    203: 769,
                    205: 771,
                    209: 775,
                    207: 773
                };
                return {
                    buffers: {
                        color: d,
                        depth: m,
                        stencil: g
                    },
                    initAttributes: function() {
                        for (var t = 0, e = v.length; t < e; t++)
                            v[t] = 0
                    },
                    enableAttribute: function(t) {
                        r(t, 0)
                    },
                    enableAttributeAndDivisor: r,
                    disableUnusedAttributes: function() {
                        for (var e = 0, n = y.length; e !== n; ++e)
                            y[e] !== v[e] && (t.disableVertexAttribArray(e),
                                y[e] = 0)
                    },
                    enable: o,
                    disable: s,
                    useProgram: function(e) {
                        return b !== e && (t.useProgram(e),
                            b = e,
                            !0)
                    },
                    setBlending: c,
                    setMaterial: function(t, e) {
                        (2 === t.side ? s : o)(2884);
                        var n = 1 === t.side;
                        e && (n = !n),
                            u(n),
                            1 === t.blending && !1 === t.transparent ? c(0) : c(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha),
                            m.setFunc(t.depthFunc),
                            m.setTest(t.depthTest),
                            m.setMask(t.depthWrite),
                            d.setMask(t.colorWrite),
                            e = t.stencilWrite,
                            g.setTest(e),
                        e && (g.setMask(t.stencilWriteMask),
                            g.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
                            g.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
                            h(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
                    },
                    setFlipSided: u,
                    setCullFace: l,
                    setLineWidth: function(e) {
                        e !== N && (F && t.lineWidth(e),
                            N = e)
                    },
                    setPolygonOffset: h,
                    setScissorTest: function(t) {
                        (t ? o : s)(3089)
                    },
                    activeTexture: p,
                    bindTexture: function(e, n) {
                        null === B && p();
                        var i = U[B];
                        void 0 === i && (i = {
                            type: void 0,
                            texture: void 0
                        },
                            U[B] = i),
                        i.type === e && i.texture === n || (t.bindTexture(e, n || j[e]),
                            i.type = e,
                            i.texture = n)
                    },
                    unbindTexture: function() {
                        var e = U[B];
                        void 0 !== e && void 0 !== e.type && (t.bindTexture(e.type, null),
                            e.type = void 0,
                            e.texture = void 0)
                    },
                    compressedTexImage2D: function() {
                        try {
                            t.compressedTexImage2D.apply(t, arguments)
                        } catch (t) {}
                    },
                    texImage2D: function() {
                        try {
                            t.texImage2D.apply(t, arguments)
                        } catch (t) {}
                    },
                    texImage3D: function() {
                        try {
                            t.texImage3D.apply(t, arguments)
                        } catch (t) {}
                    },
                    scissor: function(e) {
                        !1 === G.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
                            G.copy(e))
                    },
                    viewport: function(e) {
                        !1 === k.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
                            k.copy(e))
                    },
                    reset: function() {
                        for (var e = 0; e < y.length; e++)
                            1 === y[e] && (t.disableVertexAttribArray(e),
                                y[e] = 0);
                        _ = {},
                            U = {},
                            I = O = w = b = B = null,
                            d.reset(),
                            m.reset(),
                            g.reset()
                    }
                }
            }
            function Pe(t, e, n, i, r, a, o) {
                function s(t, e) {
                    return O ? new OffscreenCanvas(t,e) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                }
                function c(t, e, n, i) {
                    var r = 1;
                    return (t.width > i || t.height > i) && (r = i / Math.max(t.width, t.height)),
                        (r < 1 || !0 === e) && ("undefined" != typeof HTMLImageElement && t instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && t instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && t instanceof ImageBitmap) ? (e = (i = e ? Ca.floorPowerOfTwo : Math.floor)(r * t.width),
                            r = i(r * t.height),
                        void 0 === A && (A = s(e, r)),
                            (n = n ? s(e, r) : A).width = e,
                            n.height = r,
                            n.getContext("2d").drawImage(t, 0, 0, e, r),
                            n) : t
                }
                function u(t) {
                    return Ca.isPowerOfTwo(t.width) && Ca.isPowerOfTwo(t.height)
                }
                function l(t, e) {
                    return t.generateMipmaps && e && 1003 !== t.minFilter && 1006 !== t.minFilter
                }
                function h(e, n, r, a) {
                    t.generateMipmap(e),
                        i.get(n).__maxMipLevel = Math.log(Math.max(r, a)) * Math.LOG2E
                }
                function p(n, i, r) {
                    return !1 === T ? i : null !== n && void 0 !== t[n] ? t[n] : (6403 === (n = i) && (5126 === r && (n = 33326),
                    5131 === r && (n = 33325),
                    5121 === r && (n = 33321)),
                    6407 === i && (5126 === r && (n = 34837),
                    5131 === r && (n = 34843),
                    5121 === r && (n = 32849)),
                    6408 === i && (5126 === r && (n = 34836),
                    5131 === r && (n = 34842),
                    5121 === r && (n = 32856)),
                    33325 !== n && 33326 !== n && 34842 !== n && 34836 !== n || e.get("EXT_color_buffer_float"),
                        n)
                }
                function f(t) {
                    return 1003 === t || 1004 === t || 1005 === t ? 9728 : 9729
                }
                function d(e) {
                    (e = e.target).removeEventListener("dispose", d);
                    var n = i.get(e);
                    void 0 !== n.__webglInit && (t.deleteTexture(n.__webglTexture),
                        i.remove(e)),
                    e.isVideoTexture && C.delete(e),
                        o.memory.textures--
                }
                function m(e) {
                    (e = e.target).removeEventListener("dispose", m);
                    var n = i.get(e)
                        , r = i.get(e.texture);
                    if (e) {
                        if (void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture),
                        e.depthTexture && e.depthTexture.dispose(),
                            e.isWebGLCubeRenderTarget)
                            for (r = 0; r < 6; r++)
                                t.deleteFramebuffer(n.__webglFramebuffer[r]),
                                n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer[r]);
                        else
                            t.deleteFramebuffer(n.__webglFramebuffer),
                            n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer),
                            n.__webglMultisampledFramebuffer && t.deleteFramebuffer(n.__webglMultisampledFramebuffer),
                            n.__webglColorRenderbuffer && t.deleteRenderbuffer(n.__webglColorRenderbuffer),
                            n.__webglDepthRenderbuffer && t.deleteRenderbuffer(n.__webglDepthRenderbuffer);
                        i.remove(e.texture),
                            i.remove(e)
                    }
                    o.memory.textures--
                }
                function g(t, e) {
                    var r = i.get(t);
                    if (t.isVideoTexture) {
                        var a = o.render.frame;
                        C.get(t) !== a && (C.set(t, a),
                            t.update())
                    }
                    0 < t.version && r.__version !== t.version && void 0 !== (a = t.image) && !1 !== a.complete ? b(r, t, e) : (n.activeTexture(33984 + e),
                        n.bindTexture(3553, r.__webglTexture))
                }
                function v(e, r) {
                    if (6 === e.image.length) {
                        var o = i.get(e);
                        if (0 < e.version && o.__version !== e.version) {
                            _(o, e),
                                n.activeTexture(33984 + r),
                                n.bindTexture(34067, o.__webglTexture),
                                t.pixelStorei(37440, e.flipY);
                            var s = e && (e.isCompressedTexture || e.image[0].isCompressedTexture);
                            r = e.image[0] && e.image[0].isDataTexture;
                            for (var f = [], d = 0; d < 6; d++)
                                f[d] = s || r ? r ? e.image[d].image : e.image[d] : c(e.image[d], !1, !0, L);
                            var m = f[0]
                                , g = u(m) || T
                                , v = a.convert(e.format)
                                , y = a.convert(e.type)
                                , b = p(e.internalFormat, v, y);
                            if (x(34067, e, g),
                                s) {
                                for (d = 0; d < 6; d++) {
                                    var M = f[d].mipmaps;
                                    for (s = 0; s < M.length; s++) {
                                        var w = M[s];
                                        1023 !== e.format && 1022 !== e.format ? null !== v && n.compressedTexImage2D(34069 + d, s, b, w.width, w.height, 0, w.data) : n.texImage2D(34069 + d, s, b, w.width, w.height, 0, v, y, w.data)
                                    }
                                }
                                o.__maxMipLevel = M.length - 1
                            } else {
                                for (M = e.mipmaps,
                                         d = 0; d < 6; d++)
                                    if (r)
                                        for (n.texImage2D(34069 + d, 0, b, f[d].width, f[d].height, 0, v, y, f[d].data),
                                                 s = 0; s < M.length; s++)
                                            w = (w = M[s]).image[d].image,
                                                n.texImage2D(34069 + d, s + 1, b, w.width, w.height, 0, v, y, w.data);
                                    else
                                        for (n.texImage2D(34069 + d, 0, b, v, y, f[d]),
                                                 s = 0; s < M.length; s++)
                                            w = M[s],
                                                n.texImage2D(34069 + d, s + 1, b, v, y, w.image[d]);
                                o.__maxMipLevel = M.length
                            }
                            l(e, g) && h(34067, e, m.width, m.height),
                                o.__version = e.version,
                            e.onUpdate && e.onUpdate(e)
                        } else
                            n.activeTexture(33984 + r),
                                n.bindTexture(34067, o.__webglTexture)
                    }
                }
                function y(t, e) {
                    n.activeTexture(33984 + e),
                        n.bindTexture(34067, i.get(t).__webglTexture)
                }
                function x(n, a, o) {
                    o ? (t.texParameteri(n, 10242, N[a.wrapS]),
                        t.texParameteri(n, 10243, N[a.wrapT]),
                    32879 !== n && 35866 !== n || t.texParameteri(n, 32882, N[a.wrapR]),
                        t.texParameteri(n, 10240, D[a.magFilter]),
                        t.texParameteri(n, 10241, D[a.minFilter])) : (t.texParameteri(n, 10242, 33071),
                        t.texParameteri(n, 10243, 33071),
                    32879 !== n && 35866 !== n || t.texParameteri(n, 32882, 33071),
                    1001 === a.wrapS && a.wrapT,
                        t.texParameteri(n, 10240, f(a.magFilter)),
                        t.texParameteri(n, 10241, f(a.minFilter)),
                    1003 !== a.minFilter && a.minFilter),
                    !(o = e.get("EXT_texture_filter_anisotropic")) || 1015 === a.type && null === e.get("OES_texture_float_linear") || 1016 === a.type && null === (T || e.get("OES_texture_half_float_linear")) || !(1 < a.anisotropy || i.get(a).__currentAnisotropy) || (t.texParameterf(n, o.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, r.getMaxAnisotropy())),
                        i.get(a).__currentAnisotropy = a.anisotropy)
                }
                function _(e, n) {
                    void 0 === e.__webglInit && (e.__webglInit = !0,
                        n.addEventListener("dispose", d),
                        e.__webglTexture = t.createTexture(),
                        o.memory.textures++)
                }
                function b(e, i, r) {
                    var o = 3553;
                    i.isDataTexture2DArray && (o = 35866),
                    i.isDataTexture3D && (o = 32879),
                        _(e, i),
                        n.activeTexture(33984 + r),
                        n.bindTexture(o, e.__webglTexture),
                        t.pixelStorei(37440, i.flipY),
                        t.pixelStorei(37441, i.premultiplyAlpha),
                        t.pixelStorei(3317, i.unpackAlignment),
                        r = (r = !T && (1001 !== i.wrapS || 1001 !== i.wrapT || 1003 !== i.minFilter && 1006 !== i.minFilter)) && !1 === u(i.image);
                    var s = u(r = c(i.image, r, !1, E)) || T
                        , f = a.convert(i.format)
                        , d = a.convert(i.type)
                        , m = p(i.internalFormat, f, d);
                    x(o, i, s);
                    var g = i.mipmaps;
                    if (i.isDepthTexture)
                        m = 6402,
                            T ? m = 1015 === i.type ? 36012 : 1014 === i.type ? 33190 : 1020 === i.type ? 35056 : 33189 : i.type,
                        1026 === i.format && 6402 === m && 1012 !== i.type && 1014 !== i.type && (i.type = 1012,
                            d = a.convert(i.type)),
                        1027 === i.format && 6402 === m && (m = 34041,
                        1020 !== i.type && (i.type = 1020,
                            d = a.convert(i.type))),
                            n.texImage2D(3553, 0, m, r.width, r.height, 0, f, d, null);
                    else if (i.isDataTexture)
                        if (0 < g.length && s) {
                            for (var v = 0, y = g.length; v < y; v++) {
                                var b = g[v];
                                n.texImage2D(3553, v, m, b.width, b.height, 0, f, d, b.data)
                            }
                            i.generateMipmaps = !1,
                                e.__maxMipLevel = g.length - 1
                        } else
                            n.texImage2D(3553, 0, m, r.width, r.height, 0, f, d, r.data),
                                e.__maxMipLevel = 0;
                    else if (i.isCompressedTexture) {
                        for (v = 0,
                                 y = g.length; v < y; v++)
                            b = g[v],
                                1023 !== i.format && 1022 !== i.format ? null !== f && n.compressedTexImage2D(3553, v, m, b.width, b.height, 0, b.data) : n.texImage2D(3553, v, m, b.width, b.height, 0, f, d, b.data);
                        e.__maxMipLevel = g.length - 1
                    } else if (i.isDataTexture2DArray)
                        n.texImage3D(35866, 0, m, r.width, r.height, r.depth, 0, f, d, r.data),
                            e.__maxMipLevel = 0;
                    else if (i.isDataTexture3D)
                        n.texImage3D(32879, 0, m, r.width, r.height, r.depth, 0, f, d, r.data),
                            e.__maxMipLevel = 0;
                    else if (0 < g.length && s) {
                        for (v = 0,
                                 y = g.length; v < y; v++)
                            b = g[v],
                                n.texImage2D(3553, v, m, f, d, b);
                        i.generateMipmaps = !1,
                            e.__maxMipLevel = g.length - 1
                    } else
                        n.texImage2D(3553, 0, m, f, d, r),
                            e.__maxMipLevel = 0;
                    l(i, s) && h(o, i, r.width, r.height),
                        e.__version = i.version,
                    i.onUpdate && i.onUpdate(i)
                }
                function M(e, r, o, s) {
                    var c = a.convert(r.texture.format)
                        , u = a.convert(r.texture.type)
                        , l = p(r.texture.internalFormat, c, u);
                    n.texImage2D(s, 0, l, r.width, r.height, 0, c, u, null),
                        t.bindFramebuffer(36160, e),
                        t.framebufferTexture2D(36160, o, s, i.get(r.texture).__webglTexture, 0),
                        t.bindFramebuffer(36160, null)
                }
                function w(e, n, i) {
                    if (t.bindRenderbuffer(36161, e),
                    n.depthBuffer && !n.stencilBuffer) {
                        var r = 33189;
                        i ? ((i = n.depthTexture) && i.isDepthTexture && (1015 === i.type ? r = 36012 : 1014 === i.type && (r = 33190)),
                            i = S(n),
                            t.renderbufferStorageMultisample(36161, i, r, n.width, n.height)) : t.renderbufferStorage(36161, r, n.width, n.height),
                            t.framebufferRenderbuffer(36160, 36096, 36161, e)
                    } else
                        n.depthBuffer && n.stencilBuffer ? (i ? (i = S(n),
                            t.renderbufferStorageMultisample(36161, i, 35056, n.width, n.height)) : t.renderbufferStorage(36161, 34041, n.width, n.height),
                            t.framebufferRenderbuffer(36160, 33306, 36161, e)) : (e = a.convert(n.texture.format),
                            r = a.convert(n.texture.type),
                            r = p(n.texture.internalFormat, e, r),
                            i ? (i = S(n),
                                t.renderbufferStorageMultisample(36161, i, r, n.width, n.height)) : t.renderbufferStorage(36161, r, n.width, n.height));
                    t.bindRenderbuffer(36161, null)
                }
                function S(t) {
                    return T && t.isWebGLMultisampleRenderTarget ? Math.min(P, t.samples) : 0
                }
                var A, T = r.isWebGL2, L = (r.maxTextures,
                    r.maxCubemapSize), E = r.maxTextureSize, P = r.maxSamples, C = new WeakMap, O = !1;
                try {
                    O = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1,1).getContext("2d")
                } catch (t) {}
                var I = 0
                    , N = {
                    1e3: 10497,
                    1001: 33071,
                    1002: 33648
                }
                    , D = {
                    1003: 9728,
                    1004: 9984,
                    1005: 9986,
                    1006: 9729,
                    1007: 9985,
                    1008: 9987
                }
                    , R = !1
                    , z = !1;
                this.allocateTextureUnit = function() {
                    var t = I;
                    return I += 1,
                        t
                }
                    ,
                    this.resetTextureUnits = function() {
                        I = 0
                    }
                    ,
                    this.setTexture2D = g,
                    this.setTexture2DArray = function(t, e) {
                        var r = i.get(t);
                        0 < t.version && r.__version !== t.version ? b(r, t, e) : (n.activeTexture(33984 + e),
                            n.bindTexture(35866, r.__webglTexture))
                    }
                    ,
                    this.setTexture3D = function(t, e) {
                        var r = i.get(t);
                        0 < t.version && r.__version !== t.version ? b(r, t, e) : (n.activeTexture(33984 + e),
                            n.bindTexture(32879, r.__webglTexture))
                    }
                    ,
                    this.setTextureCube = v,
                    this.setTextureCubeDynamic = y,
                    this.setupRenderTarget = function(e) {
                        var r = i.get(e)
                            , s = i.get(e.texture);
                        e.addEventListener("dispose", m),
                            s.__webglTexture = t.createTexture(),
                            o.memory.textures++;
                        var c = !0 === e.isWebGLCubeRenderTarget
                            , f = !0 === e.isWebGLMultisampleRenderTarget
                            , d = u(e) || T;
                        if (!T || 1022 !== e.texture.format || 1015 !== e.texture.type && 1016 !== e.texture.type || (e.texture.format = 1023),
                            c)
                            for (r.__webglFramebuffer = [],
                                     f = 0; f < 6; f++)
                                r.__webglFramebuffer[f] = t.createFramebuffer();
                        else if (r.__webglFramebuffer = t.createFramebuffer(),
                        f && T) {
                            r.__webglMultisampledFramebuffer = t.createFramebuffer(),
                                r.__webglColorRenderbuffer = t.createRenderbuffer(),
                                t.bindRenderbuffer(36161, r.__webglColorRenderbuffer),
                                f = a.convert(e.texture.format);
                            var v = a.convert(e.texture.type);
                            f = p(e.texture.internalFormat, f, v),
                                v = S(e),
                                t.renderbufferStorageMultisample(36161, v, f, e.width, e.height),
                                t.bindFramebuffer(36160, r.__webglMultisampledFramebuffer),
                                t.framebufferRenderbuffer(36160, 36064, 36161, r.__webglColorRenderbuffer),
                                t.bindRenderbuffer(36161, null),
                            e.depthBuffer && (r.__webglDepthRenderbuffer = t.createRenderbuffer(),
                                w(r.__webglDepthRenderbuffer, e, !0)),
                                t.bindFramebuffer(36160, null)
                        }
                        if (c) {
                            for (n.bindTexture(34067, s.__webglTexture),
                                     x(34067, e.texture, d),
                                     f = 0; f < 6; f++)
                                M(r.__webglFramebuffer[f], e, 36064, 34069 + f);
                            l(e.texture, d) && h(34067, e.texture, e.width, e.height),
                                n.bindTexture(34067, null)
                        } else
                            n.bindTexture(3553, s.__webglTexture),
                                x(3553, e.texture, d),
                                M(r.__webglFramebuffer, e, 36064, 3553),
                            l(e.texture, d) && h(3553, e.texture, e.width, e.height),
                                n.bindTexture(3553, null);
                        if (e.depthBuffer) {
                            if (r = i.get(e),
                                s = !0 === e.isWebGLCubeRenderTarget,
                                e.depthTexture) {
                                if (s)
                                    throw Error("target.depthTexture not supported in Cube render targets");
                                if (e && e.isWebGLCubeRenderTarget)
                                    throw Error("Depth Texture with cube render targets is not supported");
                                if (t.bindFramebuffer(36160, r.__webglFramebuffer),
                                !e.depthTexture || !e.depthTexture.isDepthTexture)
                                    throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                                if (i.get(e.depthTexture).__webglTexture && e.depthTexture.image.width === e.width && e.depthTexture.image.height === e.height || (e.depthTexture.image.width = e.width,
                                    e.depthTexture.image.height = e.height,
                                    e.depthTexture.needsUpdate = !0),
                                    g(e.depthTexture, 0),
                                    r = i.get(e.depthTexture).__webglTexture,
                                1026 === e.depthTexture.format)
                                    t.framebufferTexture2D(36160, 36096, 3553, r, 0);
                                else {
                                    if (1027 !== e.depthTexture.format)
                                        throw Error("Unknown depthTexture format");
                                    t.framebufferTexture2D(36160, 33306, 3553, r, 0)
                                }
                            } else if (s)
                                for (r.__webglDepthbuffer = [],
                                         s = 0; s < 6; s++)
                                    t.bindFramebuffer(36160, r.__webglFramebuffer[s]),
                                        r.__webglDepthbuffer[s] = t.createRenderbuffer(),
                                        w(r.__webglDepthbuffer[s], e, !1);
                            else
                                t.bindFramebuffer(36160, r.__webglFramebuffer),
                                    r.__webglDepthbuffer = t.createRenderbuffer(),
                                    w(r.__webglDepthbuffer, e, !1);
                            t.bindFramebuffer(36160, null)
                        }
                    }
                    ,
                    this.updateRenderTargetMipmap = function(t) {
                        var e = t.texture
                            , r = u(t) || T;
                        if (l(e, r)) {
                            r = t.isWebGLCubeRenderTarget ? 34067 : 3553;
                            var a = i.get(e).__webglTexture;
                            n.bindTexture(r, a),
                                h(r, e, t.width, t.height),
                                n.bindTexture(r, null)
                        }
                    }
                    ,
                    this.updateMultisampleRenderTarget = function(e) {
                        if (e.isWebGLMultisampleRenderTarget && T) {
                            var n = i.get(e);
                            t.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
                                t.bindFramebuffer(36009, n.__webglFramebuffer);
                            var r = e.width
                                , a = e.height
                                , o = 16384;
                            e.depthBuffer && (o |= 256),
                            e.stencilBuffer && (o |= 1024),
                                t.blitFramebuffer(0, 0, r, a, 0, 0, r, a, o, 9728),
                                t.bindFramebuffer(36160, n.__webglMultisampledFramebuffer)
                        }
                    }
                    ,
                    this.safeSetTexture2D = function(t, e) {
                        t && t.isWebGLRenderTarget && (!1 === R && (R = !0),
                            t = t.texture),
                            g(t, e)
                    }
                    ,
                    this.safeSetTextureCube = function(t, e) {
                        t && t.isWebGLCubeRenderTarget && (!1 === z && (z = !0),
                            t = t.texture),
                            (t && t.isCubeTexture || Array.isArray(t.image) && 6 === t.image.length ? v : y)(t, e)
                    }
            }
            function Ce(t, e, n) {
                var i = n.isWebGL2;
                return {
                    convert: function(t) {
                        if (1009 === t)
                            return 5121;
                        if (1017 === t)
                            return 32819;
                        if (1018 === t)
                            return 32820;
                        if (1019 === t)
                            return 33635;
                        if (1010 === t)
                            return 5120;
                        if (1011 === t)
                            return 5122;
                        if (1012 === t)
                            return 5123;
                        if (1013 === t)
                            return 5124;
                        if (1014 === t)
                            return 5125;
                        if (1015 === t)
                            return 5126;
                        if (1016 === t) {
                            if (i)
                                return 5131;
                            var n = e.get("OES_texture_half_float");
                            return null !== n ? n.HALF_FLOAT_OES : null
                        }
                        if (1021 === t)
                            return 6406;
                        if (1022 === t)
                            return 6407;
                        if (1023 === t)
                            return 6408;
                        if (1024 === t)
                            return 6409;
                        if (1025 === t)
                            return 6410;
                        if (1026 === t)
                            return 6402;
                        if (1027 === t)
                            return 34041;
                        if (1028 === t)
                            return 6403;
                        if (1029 === t)
                            return 36244;
                        if (1030 === t)
                            return 33319;
                        if (1031 === t)
                            return 33320;
                        if (1032 === t)
                            return 36248;
                        if (1033 === t)
                            return 36249;
                        if (33776 === t || 33777 === t || 33778 === t || 33779 === t) {
                            if (null === (n = e.get("WEBGL_compressed_texture_s3tc")))
                                return null;
                            if (33776 === t)
                                return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (33777 === t)
                                return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (33778 === t)
                                return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (33779 === t)
                                return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (35840 === t || 35841 === t || 35842 === t || 35843 === t) {
                            if (null === (n = e.get("WEBGL_compressed_texture_pvrtc")))
                                return null;
                            if (35840 === t)
                                return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (35841 === t)
                                return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (35842 === t)
                                return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (35843 === t)
                                return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (36196 === t)
                            return null !== (n = e.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                        if ((37492 === t || 37496 === t) && null !== (n = e.get("WEBGL_compressed_texture_etc"))) {
                            if (37492 === t)
                                return n.COMPRESSED_RGB8_ETC2;
                            if (37496 === t)
                                return n.COMPRESSED_RGBA8_ETC2_EAC
                        }
                        return 37808 === t || 37809 === t || 37810 === t || 37811 === t || 37812 === t || 37813 === t || 37814 === t || 37815 === t || 37816 === t || 37817 === t || 37818 === t || 37819 === t || 37820 === t || 37821 === t || 37840 === t || 37841 === t || 37842 === t || 37843 === t || 37844 === t || 37845 === t || 37846 === t || 37847 === t || 37848 === t || 37849 === t || 37850 === t || 37851 === t || 37852 === t || 37853 === t ? null !== (n = e.get("WEBGL_compressed_texture_astc")) ? t : null : 36492 === t ? null !== (n = e.get("EXT_texture_compression_bptc")) ? t : null : 1020 === t ? i ? 34042 : null !== (n = e.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
                    }
                }
            }
            function Oe(t) {
                J.call(this),
                    this.cameras = t || []
            }
            function Ie() {
                d.call(this),
                    this.type = "Group"
            }
            function Ne(t, e) {
                function n(t) {
                    var e = g.get(t.inputSource);
                    e && (e.targetRay && e.targetRay.dispatchEvent({
                        type: t.type
                    }),
                    e.grip && e.grip.dispatchEvent({
                        type: t.type
                    }))
                }
                function i() {
                    g.forEach((function(t, e) {
                            t.targetRay && (t.targetRay.dispatchEvent({
                                type: "disconnected",
                                data: e
                            }),
                                t.targetRay.visible = !1),
                            t.grip && (t.grip.dispatchEvent({
                                type: "disconnected",
                                data: e
                            }),
                                t.grip.visible = !1)
                        }
                    )),
                        g.clear(),
                        t.setFramebuffer(null),
                        t.setRenderTarget(t.getRenderTarget()),
                        A.stop(),
                        c.isPresenting = !1,
                        c.dispatchEvent({
                            type: "sessionend"
                        })
                }
                function r(t) {
                    p = t,
                        A.setContext(u),
                        A.start(),
                        c.isPresenting = !0,
                        c.dispatchEvent({
                            type: "sessionstart"
                        })
                }
                function o(t) {
                    for (var e = u.inputSources, n = 0; n < m.length; n++)
                        g.set(e[n], m[n]);
                    for (n = 0; n < t.removed.length; n++) {
                        e = t.removed[n];
                        var i = g.get(e);
                        i && (i.targetRay && i.targetRay.dispatchEvent({
                            type: "disconnected",
                            data: e
                        }),
                        i.grip && i.grip.dispatchEvent({
                            type: "disconnected",
                            data: e
                        }),
                            g.delete(e))
                    }
                    for (n = 0; n < t.added.length; n++)
                        e = t.added[n],
                        (i = g.get(e)) && (i.targetRay && i.targetRay.dispatchEvent({
                            type: "connected",
                            data: e
                        }),
                        i.grip && i.grip.dispatchEvent({
                            type: "connected",
                            data: e
                        }))
                }
                function s(t, e) {
                    null === e ? t.matrixWorld.copy(t.matrix) : t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix),
                        t.matrixWorldInverse.getInverse(t.matrixWorld)
                }
                var c = this
                    , u = null
                    , h = 1
                    , p = null
                    , f = "local-floor"
                    , d = null
                    , m = []
                    , g = new Map
                    , v = new J;
                v.layers.enable(1),
                    v.viewport = new a;
                var y = new J;
                y.layers.enable(2),
                    y.viewport = new a;
                var x = new Oe([v, y]);
                x.layers.enable(1),
                    x.layers.enable(2);
                var _ = null
                    , b = null;
                this.isPresenting = this.enabled = !1,
                    this.getController = function(t) {
                        var e = m[t];
                        return void 0 === e && (e = {},
                            m[t] = e),
                        void 0 === e.targetRay && (e.targetRay = new Ie,
                            e.targetRay.matrixAutoUpdate = !1,
                            e.targetRay.visible = !1),
                            e.targetRay
                    }
                    ,
                    this.getControllerGrip = function(t) {
                        var e = m[t];
                        return void 0 === e && (e = {},
                            m[t] = e),
                        void 0 === e.grip && (e.grip = new Ie,
                            e.grip.matrixAutoUpdate = !1,
                            e.grip.visible = !1),
                            e.grip
                    }
                    ,
                    this.setFramebufferScaleFactor = function(t) {
                        h = t,
                            c.isPresenting
                    }
                    ,
                    this.setReferenceSpaceType = function(t) {
                        f = t
                    }
                    ,
                    this.getReferenceSpace = function() {
                        return p
                    }
                    ,
                    this.getSession = function() {
                        return u
                    }
                    ,
                    this.setSession = function(t) {
                        null !== (u = t) && (u.addEventListener("select", n),
                            u.addEventListener("selectstart", n),
                            u.addEventListener("selectend", n),
                            u.addEventListener("squeeze", n),
                            u.addEventListener("squeezestart", n),
                            u.addEventListener("squeezeend", n),
                            u.addEventListener("end", i),
                            t = e.getContextAttributes(),
                            t = new XRWebGLLayer(u,e,{
                                antialias: t.antialias,
                                alpha: t.alpha,
                                depth: t.depth,
                                stencil: t.stencil,
                                framebufferScaleFactor: h
                            }),
                            u.updateRenderState({
                                baseLayer: t
                            }),
                            u.requestReferenceSpace(f).then(r),
                            u.addEventListener("inputsourceschange", o))
                    }
                ;
                var M = new l
                    , w = new l;
                this.getCamera = function(t) {
                    x.near = y.near = v.near = t.near,
                        x.far = y.far = v.far = t.far,
                    _ === x.near && b === x.far || (u.updateRenderState({
                        depthNear: x.near,
                        depthFar: x.far
                    }),
                        _ = x.near,
                        b = x.far);
                    var e = t.parent
                        , n = x.cameras;
                    s(x, e);
                    for (var i = 0; i < n.length; i++)
                        s(n[i], e);
                    for (t.matrixWorld.copy(x.matrixWorld),
                             i = 0,
                             e = (t = t.children).length; i < e; i++)
                        t[i].updateMatrixWorld(!0);
                    M.setFromMatrixPosition(v.matrixWorld),
                        w.setFromMatrixPosition(y.matrixWorld),
                        i = M.distanceTo(w);
                    var r = v.projectionMatrix.elements
                        , a = y.projectionMatrix.elements
                        , o = r[14] / (r[10] - 1);
                    t = r[14] / (r[10] + 1),
                        e = (r[9] + 1) / r[5],
                        n = (r[9] - 1) / r[5];
                    var c = (r[8] - 1) / r[0]
                        , l = (a[8] + 1) / a[0];
                    return a = o * c,
                        r = o * l,
                        c = (l = i / (-c + l)) * -c,
                        v.matrixWorld.decompose(x.position, x.quaternion, x.scale),
                        x.translateX(c),
                        x.translateZ(l),
                        x.matrixWorld.compose(x.position, x.quaternion, x.scale),
                        x.matrixWorldInverse.getInverse(x.matrixWorld),
                        o += l,
                        l = t + l,
                        x.projectionMatrix.makePerspective(a - c, r + (i - c), e * t / l * o, n * t / l * o, o, l),
                        x
                }
                ;
                var S = null
                    , A = new et;
                A.setAnimationLoop((function(e, n) {
                        if (null !== (d = n.getViewerPose(p))) {
                            var i = d.views
                                , r = u.renderState.baseLayer;
                            t.setFramebuffer(r.framebuffer);
                            for (var a = 0; a < i.length; a++) {
                                var o = i[a]
                                    , s = r.getViewport(o)
                                    , c = x.cameras[a];
                                c.matrix.fromArray(o.transform.matrix),
                                    c.projectionMatrix.fromArray(o.projectionMatrix),
                                    c.viewport.set(s.x, s.y, s.width, s.height),
                                0 === a && x.matrix.copy(c.matrix)
                            }
                        }
                        for (i = u.inputSources,
                                 a = 0; a < m.length; a++)
                            r = m[a],
                                c = s = null,
                            (o = i[a]) && (r.targetRay && null !== (s = n.getPose(o.targetRaySpace, p)) && (r.targetRay.matrix.fromArray(s.transform.matrix),
                                r.targetRay.matrix.decompose(r.targetRay.position, r.targetRay.rotation, r.targetRay.scale)),
                            r.grip && o.gripSpace && null !== (c = n.getPose(o.gripSpace, p)) && (r.grip.matrix.fromArray(c.transform.matrix),
                                r.grip.matrix.decompose(r.grip.position, r.grip.rotation, r.grip.scale))),
                            r.targetRay && (r.targetRay.visible = null !== s),
                            r.grip && (r.grip.visible = null !== c);
                        S && S(e, n)
                    }
                )),
                    this.setAnimationLoop = function(t) {
                        S = t
                    }
                    ,
                    this.dispose = function() {}
            }
            function De(t) {
                var e;
                function i() {
                    C = new ut(zt),
                    !1 === (O = new st(zt,C,t)).isWebGL2 && (C.get("WEBGL_depth_texture"),
                        C.get("OES_texture_float"),
                        C.get("OES_texture_half_float"),
                        C.get("OES_texture_half_float_linear"),
                        C.get("OES_standard_derivatives"),
                        C.get("OES_element_index_uint"),
                        C.get("ANGLE_instanced_arrays")),
                        C.get("OES_texture_float_linear"),
                        q = new Ce(0,C,O),
                        (I = new Ee(zt,C,O)).scissor(_t.copy(Et).multiplyScalar(St).floor()),
                        I.viewport(xt.copy(Lt).multiplyScalar(St).floor()),
                        N = new pt,
                        D = new me,
                        R = new Pe(zt,C,I,D,O,q,N),
                        z = new nt(zt,O),
                        F = new lt(0,z,N),
                        B = new mt(0,F,z,N),
                        V = new dt(zt),
                        U = new de(X,C,O),
                        G = new xe,
                        k = new Se,
                        j = new at(X,I,B,S),
                        W = new ot(zt,C,N,O),
                        H = new ht(zt,C,N,O),
                        N.programs = U.programs,
                        X.capabilities = O,
                        X.extensions = C,
                        X.properties = D,
                        X.renderLists = G,
                        X.state = I,
                        X.info = N
                }
                function r(t) {
                    t.preventDefault(),
                        Y = !0
                }
                function o() {
                    Y = !1,
                        i()
                }
                function s(t) {
                    (t = t.target).removeEventListener("dispose", s),
                        c(t),
                        D.remove(t)
                }
                function c(t) {
                    var e = D.get(t).program;
                    (t.program = void 0) !== e && U.releaseProgram(e)
                }
                function u(t, e, n, i) {
                    for (var r = 0, a = t.length; r < a; r++) {
                        var o = t[r]
                            , s = o.object
                            , c = o.geometry
                            , u = void 0 === i ? o.material : i;
                        if (o = o.group,
                            n.isArrayCamera)
                            for (var l = (yt = n).cameras, h = 0, f = l.length; h < f; h++) {
                                var d = l[h];
                                s.layers.test(d.layers) && (I.viewport(xt.copy(d.viewport)),
                                    P.setupLights(d),
                                    p(s, e, d, c, u, o))
                            }
                        else
                            yt = null,
                                p(s, e, n, c, u, o)
                    }
                }
                function p(t, n, i, r, a, o) {
                    if (t.onBeforeRender(X, n, i, r, a, o),
                        P = k.get(n, yt || i),
                        t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld),
                        t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
                        t.isImmediateRenderObject) {
                        var s = d(i, n, a, t);
                        I.setMaterial(a),
                            ft = e = null,
                            gt = !1,
                            c = s,
                            t.render((function(t) {
                                    X.renderBufferImmediate(t, c)
                                }
                            ))
                    } else
                        X.renderBufferDirect(i, n, r, a, t, o);
                    var c;
                    t.onAfterRender(X, n, i, r, a, o),
                        P = k.get(n, yt || i)
                }
                function f(t, e, n) {
                    var i = D.get(t)
                        , r = P.state.lights
                        , a = r.state.version;
                    n = U.getParameters(t, r.state, P.state.shadowsArray, e, Ot.numPlanes, Ot.numIntersection, n);
                    var o = U.getProgramCacheKey(n)
                        , u = i.program
                        , l = !0;
                    if (void 0 === u)
                        t.addEventListener("dispose", s);
                    else if (u.cacheKey !== o)
                        c(t);
                    else {
                        if (i.lightsStateVersion !== a)
                            i.lightsStateVersion = a;
                        else if (void 0 !== n.shaderID)
                            return;
                        l = !1
                    }
                    if (l && (u = U.acquireProgram(n, o),
                        i.program = u,
                        i.uniforms = n.uniforms,
                        i.environment = t.isMeshStandardMaterial ? e.environment : null,
                        i.outputEncoding = X.outputEncoding,
                        t.program = u),
                        n = u.getAttributes(),
                        t.morphTargets)
                        for (o = t.numSupportedMorphTargets = 0; o < X.maxMorphTargets; o++)
                            0 <= n["morphTarget" + o] && t.numSupportedMorphTargets++;
                    if (t.morphNormals)
                        for (o = t.numSupportedMorphNormals = 0; o < X.maxMorphNormals; o++)
                            0 <= n["morphNormal" + o] && t.numSupportedMorphNormals++;
                    n = i.uniforms,
                    (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (i.numClippingPlanes = Ot.numPlanes,
                        i.numIntersection = Ot.numIntersection,
                        n.clippingPlanes = Ot.uniform),
                        i.fog = e.fog,
                        i.needsLights = t.isMeshLambertMaterial || t.isMeshToonMaterial || t.isMeshPhongMaterial || t.isMeshStandardMaterial || t.isShadowMaterial || t.isShaderMaterial && !0 === t.lights,
                        i.lightsStateVersion = a,
                    i.needsLights && (n.ambientLightColor.value = r.state.ambient,
                        n.lightProbe.value = r.state.probe,
                        n.directionalLights.value = r.state.directional,
                        n.directionalLightShadows.value = r.state.directionalShadow,
                        n.spotLights.value = r.state.spot,
                        n.spotLightShadows.value = r.state.spotShadow,
                        n.rectAreaLights.value = r.state.rectArea,
                        n.pointLights.value = r.state.point,
                        n.pointLightShadows.value = r.state.pointShadow,
                        n.hemisphereLights.value = r.state.hemi,
                        n.directionalShadowMap.value = r.state.directionalShadowMap,
                        n.directionalShadowMatrix.value = r.state.directionalShadowMatrix,
                        n.spotShadowMap.value = r.state.spotShadowMap,
                        n.spotShadowMatrix.value = r.state.spotShadowMatrix,
                        n.pointShadowMap.value = r.state.pointShadowMap,
                        n.pointShadowMatrix.value = r.state.pointShadowMatrix),
                        t = i.program.getUniforms(),
                        t = ee.seqWithValue(t.seq, n),
                        i.uniformsList = t
                }
                function d(t, e, n, i) {
                    R.resetTextureUnits();
                    var r = e.fog
                        , a = n.isMeshStandardMaterial ? e.environment : null
                        , o = D.get(n)
                        , s = P.state.lights;
                    It && (Nt || t !== vt) && Ot.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, t, o, t === vt && n.id === rt),
                        n.version === o.__version ? (void 0 === o.program || n.fog && o.fog !== r || o.environment !== a || o.needsLights && o.lightsStateVersion !== s.state.version || void 0 !== o.numClippingPlanes && (o.numClippingPlanes !== Ot.numPlanes || o.numIntersection !== Ot.numIntersection) || o.outputEncoding !== X.outputEncoding) && f(n, e, i) : (f(n, e, i),
                            o.__version = n.version);
                    var c = !1
                        , u = !1
                        , l = !1;
                    s = (e = o.program).getUniforms();
                    var h = o.uniforms;
                    if (I.useProgram(e.program) && (l = u = c = !0),
                    n.id !== rt && (rt = n.id,
                        u = !0),
                    !c && vt === t || (s.setValue(zt, "projectionMatrix", t.projectionMatrix),
                    O.logarithmicDepthBuffer && s.setValue(zt, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                    vt !== t && (vt = t,
                        l = u = !0),
                    !(n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) || void 0 !== (c = s.map.cameraPosition) && c.setValue(zt, Rt.setFromMatrixPosition(t.matrixWorld)),
                    (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && s.setValue(zt, "isOrthographic", !0 === t.isOrthographicCamera),
                    (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && s.setValue(zt, "viewMatrix", t.matrixWorldInverse)),
                    n.skinning && (s.setOptional(zt, i, "bindMatrix"),
                        s.setOptional(zt, i, "bindMatrixInverse"),
                        t = i.skeleton))
                        if (c = t.bones,
                            O.floatVertexTextures) {
                            if (void 0 === t.boneTexture) {
                                c = Math.sqrt(4 * c.length),
                                    c = Ca.ceilPowerOfTwo(c),
                                    c = Math.max(c, 4);
                                var p = new Float32Array(c * c * 4);
                                p.set(t.boneMatrices);
                                var d = new $(p,c,c,1023,1015);
                                t.boneMatrices = p,
                                    t.boneTexture = d,
                                    t.boneTextureSize = c
                            }
                            s.setValue(zt, "boneTexture", t.boneTexture, R),
                                s.setValue(zt, "boneTextureSize", t.boneTextureSize)
                        } else
                            s.setOptional(zt, t, "boneMatrices");
                    if (!u && o.receiveShadow === i.receiveShadow || (o.receiveShadow = i.receiveShadow,
                        s.setValue(zt, "receiveShadow", i.receiveShadow)),
                        u) {
                        if (s.setValue(zt, "toneMappingExposure", X.toneMappingExposure),
                            s.setValue(zt, "toneMappingWhitePoint", X.toneMappingWhitePoint),
                        o.needsLights && (u = l,
                            h.ambientLightColor.needsUpdate = u,
                            h.lightProbe.needsUpdate = u,
                            h.directionalLights.needsUpdate = u,
                            h.directionalLightShadows.needsUpdate = u,
                            h.pointLights.needsUpdate = u,
                            h.pointLightShadows.needsUpdate = u,
                            h.spotLights.needsUpdate = u,
                            h.spotLightShadows.needsUpdate = u,
                            h.rectAreaLights.needsUpdate = u,
                            h.hemisphereLights.needsUpdate = u),
                        r && n.fog && (h.fogColor.value.copy(r.color),
                            r.isFog ? (h.fogNear.value = r.near,
                                h.fogFar.value = r.far) : r.isFogExp2 && (h.fogDensity.value = r.density)),
                            n.isMeshBasicMaterial)
                            g(h, n);
                        else if (n.isMeshLambertMaterial)
                            g(h, n),
                            n.emissiveMap && (h.emissiveMap.value = n.emissiveMap);
                        else if (n.isMeshToonMaterial)
                            g(h, n),
                                h.specular.value.copy(n.specular),
                                h.shininess.value = Math.max(n.shininess, 1e-4),
                            n.gradientMap && (h.gradientMap.value = n.gradientMap),
                            n.emissiveMap && (h.emissiveMap.value = n.emissiveMap),
                            n.bumpMap && (h.bumpMap.value = n.bumpMap,
                                h.bumpScale.value = n.bumpScale,
                            1 === n.side && (h.bumpScale.value *= -1)),
                            n.normalMap && (h.normalMap.value = n.normalMap,
                                h.normalScale.value.copy(n.normalScale),
                            1 === n.side && h.normalScale.value.negate()),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias);
                        else if (n.isMeshPhongMaterial)
                            g(h, n),
                                h.specular.value.copy(n.specular),
                                h.shininess.value = Math.max(n.shininess, 1e-4),
                            n.emissiveMap && (h.emissiveMap.value = n.emissiveMap),
                            n.bumpMap && (h.bumpMap.value = n.bumpMap,
                                h.bumpScale.value = n.bumpScale,
                            1 === n.side && (h.bumpScale.value *= -1)),
                            n.normalMap && (h.normalMap.value = n.normalMap,
                                h.normalScale.value.copy(n.normalScale),
                            1 === n.side && h.normalScale.value.negate()),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias);
                        else if (n.isMeshStandardMaterial)
                            g(h, n, a),
                                n.isMeshPhysicalMaterial ? (v(h, n, a),
                                    h.reflectivity.value = n.reflectivity,
                                    h.clearcoat.value = n.clearcoat,
                                    h.clearcoatRoughness.value = n.clearcoatRoughness,
                                n.sheen && h.sheen.value.copy(n.sheen),
                                n.clearcoatMap && (h.clearcoatMap.value = n.clearcoatMap),
                                n.clearcoatRoughnessMap && (h.clearcoatRoughnessMap.value = n.clearcoatRoughnessMap),
                                n.clearcoatNormalMap && (h.clearcoatNormalScale.value.copy(n.clearcoatNormalScale),
                                    h.clearcoatNormalMap.value = n.clearcoatNormalMap,
                                1 === n.side && h.clearcoatNormalScale.value.negate()),
                                    h.transparency.value = n.transparency) : v(h, n, a);
                        else if (n.isMeshMatcapMaterial)
                            g(h, n),
                            n.matcap && (h.matcap.value = n.matcap),
                            n.bumpMap && (h.bumpMap.value = n.bumpMap,
                                h.bumpScale.value = n.bumpScale,
                            1 === n.side && (h.bumpScale.value *= -1)),
                            n.normalMap && (h.normalMap.value = n.normalMap,
                                h.normalScale.value.copy(n.normalScale),
                            1 === n.side && h.normalScale.value.negate()),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias);
                        else if (n.isMeshDepthMaterial)
                            g(h, n),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias);
                        else if (n.isMeshDistanceMaterial)
                            g(h, n),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias),
                                h.referencePosition.value.copy(n.referencePosition),
                                h.nearDistance.value = n.nearDistance,
                                h.farDistance.value = n.farDistance;
                        else if (n.isMeshNormalMaterial)
                            g(h, n),
                            n.bumpMap && (h.bumpMap.value = n.bumpMap,
                                h.bumpScale.value = n.bumpScale,
                            1 === n.side && (h.bumpScale.value *= -1)),
                            n.normalMap && (h.normalMap.value = n.normalMap,
                                h.normalScale.value.copy(n.normalScale),
                            1 === n.side && h.normalScale.value.negate()),
                            n.displacementMap && (h.displacementMap.value = n.displacementMap,
                                h.displacementScale.value = n.displacementScale,
                                h.displacementBias.value = n.displacementBias);
                        else if (n.isLineBasicMaterial)
                            h.diffuse.value.copy(n.color),
                                h.opacity.value = n.opacity,
                            n.isLineDashedMaterial && (h.dashSize.value = n.dashSize,
                                h.totalSize.value = n.dashSize + n.gapSize,
                                h.scale.value = n.scale);
                        else if (n.isPointsMaterial) {
                            if (h.diffuse.value.copy(n.color),
                                h.opacity.value = n.opacity,
                                h.size.value = n.size * St,
                                h.scale.value = .5 * wt,
                            n.map && (h.map.value = n.map),
                            n.alphaMap && (h.alphaMap.value = n.alphaMap),
                                n.map)
                                var m = n.map;
                            else
                                n.alphaMap && (m = n.alphaMap);
                            void 0 !== m && (!0 === m.matrixAutoUpdate && m.updateMatrix(),
                                h.uvTransform.value.copy(m.matrix))
                        } else if (n.isSpriteMaterial) {
                            if (h.diffuse.value.copy(n.color),
                                h.opacity.value = n.opacity,
                                h.rotation.value = n.rotation,
                            n.map && (h.map.value = n.map),
                            n.alphaMap && (h.alphaMap.value = n.alphaMap),
                                n.map)
                                var y = n.map;
                            else
                                n.alphaMap && (y = n.alphaMap);
                            void 0 !== y && (!0 === y.matrixAutoUpdate && y.updateMatrix(),
                                h.uvTransform.value.copy(y.matrix))
                        } else
                            n.isShadowMaterial && (h.color.value.copy(n.color),
                                h.opacity.value = n.opacity);
                        void 0 !== h.ltc_1 && (h.ltc_1.value = Ls.LTC_1),
                        void 0 !== h.ltc_2 && (h.ltc_2.value = Ls.LTC_2),
                            ee.upload(zt, o.uniformsList, h, R),
                        n.isShaderMaterial && (n.uniformsNeedUpdate = !1)
                    }
                    return n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (ee.upload(zt, o.uniformsList, h, R),
                        n.uniformsNeedUpdate = !1),
                    n.isSpriteMaterial && s.setValue(zt, "center", i.center),
                        s.setValue(zt, "modelViewMatrix", i.modelViewMatrix),
                        s.setValue(zt, "normalMatrix", i.normalMatrix),
                        s.setValue(zt, "modelMatrix", i.matrixWorld),
                        e
                }
                function g(t, e, n) {
                    if (t.opacity.value = e.opacity,
                    e.color && t.diffuse.value.copy(e.color),
                    e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                    e.map && (t.map.value = e.map),
                    e.alphaMap && (t.alphaMap.value = e.alphaMap),
                    e.specularMap && (t.specularMap.value = e.specularMap),
                    (n = e.envMap || n) && (t.envMap.value = n,
                        t.flipEnvMap.value = n.isCubeTexture ? -1 : 1,
                        t.reflectivity.value = e.reflectivity,
                        t.refractionRatio.value = e.refractionRatio,
                        t.maxMipLevel.value = D.get(n).__maxMipLevel),
                    e.lightMap && (t.lightMap.value = e.lightMap,
                        t.lightMapIntensity.value = e.lightMapIntensity),
                    e.aoMap && (t.aoMap.value = e.aoMap,
                        t.aoMapIntensity.value = e.aoMapIntensity),
                        e.map)
                        var i = e.map;
                    else
                        e.specularMap ? i = e.specularMap : e.displacementMap ? i = e.displacementMap : e.normalMap ? i = e.normalMap : e.bumpMap ? i = e.bumpMap : e.roughnessMap ? i = e.roughnessMap : e.metalnessMap ? i = e.metalnessMap : e.alphaMap ? i = e.alphaMap : e.emissiveMap && (i = e.emissiveMap);
                    if (void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture),
                    !0 === i.matrixAutoUpdate && i.updateMatrix(),
                        t.uvTransform.value.copy(i.matrix)),
                        e.aoMap)
                        var r = e.aoMap;
                    else
                        e.lightMap && (r = e.lightMap);
                    void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture),
                    !0 === r.matrixAutoUpdate && r.updateMatrix(),
                        t.uv2Transform.value.copy(r.matrix))
                }
                function v(t, e, n) {
                    t.roughness.value = e.roughness,
                        t.metalness.value = e.metalness,
                    e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                    e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                    e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                    e.bumpMap && (t.bumpMap.value = e.bumpMap,
                        t.bumpScale.value = e.bumpScale,
                    1 === e.side && (t.bumpScale.value *= -1)),
                    e.normalMap && (t.normalMap.value = e.normalMap,
                        t.normalScale.value.copy(e.normalScale),
                    1 === e.side && t.normalScale.value.negate()),
                    e.displacementMap && (t.displacementMap.value = e.displacementMap,
                        t.displacementScale.value = e.displacementScale,
                        t.displacementBias.value = e.displacementBias),
                    (e.envMap || n) && (t.envMapIntensity.value = e.envMapIntensity)
                }
                var y = void 0 !== (t = t || {}).canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                    , x = void 0 !== t.context ? t.context : null
                    , _ = void 0 !== t.alpha && t.alpha
                    , b = void 0 === t.depth || t.depth
                    , M = void 0 === t.stencil || t.stencil
                    , w = void 0 !== t.antialias && t.antialias
                    , S = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
                    , A = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
                    , T = void 0 !== t.powerPreference ? t.powerPreference : "default"
                    , L = void 0 !== t.failIfMajorPerformanceCaveat && t.failIfMajorPerformanceCaveat
                    , E = null
                    , P = null;
                this.domElement = y,
                    this.debug = {
                        checkShaderErrors: !0
                    },
                    this.sortObjects = this.autoClearStencil = this.autoClearDepth = this.autoClearColor = this.autoClear = !0,
                    this.clippingPlanes = [],
                    this.localClippingEnabled = !1,
                    this.gammaFactor = 2,
                    this.outputEncoding = 3e3,
                    this.physicallyCorrectLights = !1,
                    this.toneMappingWhitePoint = this.toneMappingExposure = this.toneMapping = 1,
                    this.maxMorphTargets = 8,
                    this.maxMorphNormals = 4;
                var C, O, I, N, D, R, z, F, B, U, G, k, j, V, W, H, q, X = this, Y = !1, Z = null, J = 0, K = 0, Q = null, it = null, rt = -1, ft = e = null, gt = !1, vt = null, yt = null, xt = new a, _t = new a, bt = null, Mt = y.width, wt = y.height, St = 1, At = null, Tt = null, Lt = new a(0,0,Mt,wt), Et = new a(0,0,Mt,wt), Pt = !1, Ct = new tt, Ot = new ct, It = !1, Nt = !1, Dt = new h, Rt = new l;
                try {
                    _ = {
                        alpha: _,
                        depth: b,
                        stencil: M,
                        antialias: w,
                        premultipliedAlpha: S,
                        preserveDrawingBuffer: A,
                        powerPreference: T,
                        failIfMajorPerformanceCaveat: L,
                        xrCompatible: !0
                    },
                        y.addEventListener("webglcontextlost", r, !1),
                        y.addEventListener("webglcontextrestored", o, !1);
                    var zt = x || y.getContext("webgl", _) || y.getContext("experimental-webgl", _);
                    if (null === zt) {
                        if (null !== y.getContext("webgl"))
                            throw Error("Error creating WebGL context with your selected attributes.");
                        throw Error("Error creating WebGL context.")
                    }
                    void 0 === zt.getShaderPrecisionFormat && (zt.getShaderPrecisionFormat = function() {
                            return {
                                rangeMin: 1,
                                rangeMax: 1,
                                precision: 1
                            }
                        }
                    )
                } catch (t) {
                    throw t
                }
                i();
                var Ft = new Ne(X,zt);
                this.xr = Ft;
                var Bt = new Le(X,B,O.maxTextureSize);
                this.shadowMap = Bt,
                    this.getContext = function() {
                        return zt
                    }
                    ,
                    this.getContextAttributes = function() {
                        return zt.getContextAttributes()
                    }
                    ,
                    this.forceContextLoss = function() {
                        var t = C.get("WEBGL_lose_context");
                        t && t.loseContext()
                    }
                    ,
                    this.forceContextRestore = function() {
                        var t = C.get("WEBGL_lose_context");
                        t && t.restoreContext()
                    }
                    ,
                    this.getPixelRatio = function() {
                        return St
                    }
                    ,
                    this.setPixelRatio = function(t) {
                        void 0 !== t && (St = t,
                            this.setSize(Mt, wt, !1))
                    }
                    ,
                    this.getSize = function(t) {
                        return void 0 === t && (t = new n),
                            t.set(Mt, wt)
                    }
                    ,
                    this.setSize = function(t, e, n) {
                        Ft.isPresenting || (Mt = t,
                            wt = e,
                            y.width = Math.floor(t * St),
                            y.height = Math.floor(e * St),
                        !1 !== n && (y.style.width = t + "px",
                            y.style.height = e + "px"),
                            this.setViewport(0, 0, t, e))
                    }
                    ,
                    this.getDrawingBufferSize = function(t) {
                        return void 0 === t && (t = new n),
                            t.set(Mt * St, wt * St).floor()
                    }
                    ,
                    this.setDrawingBufferSize = function(t, e, n) {
                        Mt = t,
                            wt = e,
                            St = n,
                            y.width = Math.floor(t * n),
                            y.height = Math.floor(e * n),
                            this.setViewport(0, 0, t, e)
                    }
                    ,
                    this.getCurrentViewport = function(t) {
                        return void 0 === t && (t = new a),
                            t.copy(xt)
                    }
                    ,
                    this.getViewport = function(t) {
                        return t.copy(Lt)
                    }
                    ,
                    this.setViewport = function(t, e, n, i) {
                        t.isVector4 ? Lt.set(t.x, t.y, t.z, t.w) : Lt.set(t, e, n, i),
                            I.viewport(xt.copy(Lt).multiplyScalar(St).floor())
                    }
                    ,
                    this.getScissor = function(t) {
                        return t.copy(Et)
                    }
                    ,
                    this.setScissor = function(t, e, n, i) {
                        t.isVector4 ? Et.set(t.x, t.y, t.z, t.w) : Et.set(t, e, n, i),
                            I.scissor(_t.copy(Et).multiplyScalar(St).floor())
                    }
                    ,
                    this.getScissorTest = function() {
                        return Pt
                    }
                    ,
                    this.setScissorTest = function(t) {
                        I.setScissorTest(Pt = t)
                    }
                    ,
                    this.setOpaqueSort = function(t) {
                        At = t
                    }
                    ,
                    this.setTransparentSort = function(t) {
                        Tt = t
                    }
                    ,
                    this.getClearColor = function() {
                        return j.getClearColor()
                    }
                    ,
                    this.setClearColor = function() {
                        j.setClearColor.apply(j, arguments)
                    }
                    ,
                    this.getClearAlpha = function() {
                        return j.getClearAlpha()
                    }
                    ,
                    this.setClearAlpha = function() {
                        j.setClearAlpha.apply(j, arguments)
                    }
                    ,
                    this.clear = function(t, e, n) {
                        var i = 0;
                        void 0 !== t && !t || (i |= 16384),
                        void 0 !== e && !e || (i |= 256),
                        void 0 !== n && !n || (i |= 1024),
                            zt.clear(i)
                    }
                    ,
                    this.clearColor = function() {
                        this.clear(!0, !1, !1)
                    }
                    ,
                    this.clearDepth = function() {
                        this.clear(!1, !0, !1)
                    }
                    ,
                    this.clearStencil = function() {
                        this.clear(!1, !1, !0)
                    }
                    ,
                    this.dispose = function() {
                        y.removeEventListener("webglcontextlost", r, !1),
                            y.removeEventListener("webglcontextrestored", o, !1),
                            G.dispose(),
                            k.dispose(),
                            D.dispose(),
                            B.dispose(),
                            Ft.dispose(),
                            kt.stop(),
                            this.forceContextLoss()
                    }
                    ,
                    this.renderBufferImmediate = function(t, e) {
                        I.initAttributes();
                        var n = D.get(t);
                        t.hasPositions && !n.position && (n.position = zt.createBuffer()),
                        t.hasNormals && !n.normal && (n.normal = zt.createBuffer()),
                        t.hasUvs && !n.uv && (n.uv = zt.createBuffer()),
                        t.hasColors && !n.color && (n.color = zt.createBuffer()),
                            e = e.getAttributes(),
                        t.hasPositions && (zt.bindBuffer(34962, n.position),
                            zt.bufferData(34962, t.positionArray, 35048),
                            I.enableAttribute(e.position),
                            zt.vertexAttribPointer(e.position, 3, 5126, !1, 0, 0)),
                        t.hasNormals && (zt.bindBuffer(34962, n.normal),
                            zt.bufferData(34962, t.normalArray, 35048),
                            I.enableAttribute(e.normal),
                            zt.vertexAttribPointer(e.normal, 3, 5126, !1, 0, 0)),
                        t.hasUvs && (zt.bindBuffer(34962, n.uv),
                            zt.bufferData(34962, t.uvArray, 35048),
                            I.enableAttribute(e.uv),
                            zt.vertexAttribPointer(e.uv, 2, 5126, !1, 0, 0)),
                        t.hasColors && (zt.bindBuffer(34962, n.color),
                            zt.bufferData(34962, t.colorArray, 35048),
                            I.enableAttribute(e.color),
                            zt.vertexAttribPointer(e.color, 3, 5126, !1, 0, 0)),
                            I.disableUnusedAttributes(),
                            zt.drawArrays(4, 0, t.count),
                            t.count = 0
                    }
                ;
                var Ut = new m;
                this.renderBufferDirect = function(t, n, i, r, a, o) {
                    null === n && (n = Ut);
                    var s = a.isMesh && a.matrixWorld.determinant() < 0
                        , c = d(t, n, r, a);
                    I.setMaterial(r, s);
                    var u = !1;
                    if (e === i.id && ft === c.id && gt === (!0 === r.wireframe) || (e = i.id,
                        ft = c.id,
                        gt = !0 === r.wireframe,
                        u = !0),
                    (r.morphTargets || r.morphNormals) && (V.update(a, i, r, c),
                        u = !0),
                        t = i.index,
                        n = i.attributes.position,
                    null === t) {
                        if (void 0 === n || 0 === n.count)
                            return
                    } else if (0 === t.count)
                        return;
                    var l = 1;
                    if (!0 === r.wireframe && (t = F.getWireframeAttribute(i),
                        l = 2),
                        s = W,
                    null !== t) {
                        var h = z.get(t);
                        (s = H).setIndex(h)
                    }
                    if (u) {
                        if (!1 !== O.isWebGL2 || !a.isInstancedMesh && !i.isInstancedBufferGeometry || null !== C.get("ANGLE_instanced_arrays")) {
                            I.initAttributes(),
                                u = i.attributes,
                                c = c.getAttributes();
                            var p = r.defaultAttributeValues;
                            for (w in c) {
                                var f = c[w];
                                if (0 <= f) {
                                    var m = u[w];
                                    if (void 0 !== m) {
                                        var g = m.normalized
                                            , v = m.itemSize
                                            , y = z.get(m);
                                        if (void 0 !== y) {
                                            var x = y.buffer
                                                , _ = y.type;
                                            if (y = y.bytesPerElement,
                                                m.isInterleavedBufferAttribute) {
                                                var b = m.data
                                                    , M = b.stride;
                                                m = m.offset,
                                                    b && b.isInstancedInterleavedBuffer ? (I.enableAttributeAndDivisor(f, b.meshPerAttribute),
                                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = b.meshPerAttribute * b.count)) : I.enableAttribute(f),
                                                    zt.bindBuffer(34962, x),
                                                    zt.vertexAttribPointer(f, v, _, g, M * y, m * y)
                                            } else
                                                m.isInstancedBufferAttribute ? (I.enableAttributeAndDivisor(f, m.meshPerAttribute),
                                                void 0 === i.maxInstancedCount && (i.maxInstancedCount = m.meshPerAttribute * m.count)) : I.enableAttribute(f),
                                                    zt.bindBuffer(34962, x),
                                                    zt.vertexAttribPointer(f, v, _, g, 0, 0)
                                        }
                                    } else if ("instanceMatrix" === w)
                                        void 0 !== (y = z.get(a.instanceMatrix)) && (x = y.buffer,
                                            _ = y.type,
                                            I.enableAttributeAndDivisor(f + 0, 1),
                                            I.enableAttributeAndDivisor(f + 1, 1),
                                            I.enableAttributeAndDivisor(f + 2, 1),
                                            I.enableAttributeAndDivisor(f + 3, 1),
                                            zt.bindBuffer(34962, x),
                                            zt.vertexAttribPointer(f + 0, 4, _, !1, 64, 0),
                                            zt.vertexAttribPointer(f + 1, 4, _, !1, 64, 16),
                                            zt.vertexAttribPointer(f + 2, 4, _, !1, 64, 32),
                                            zt.vertexAttribPointer(f + 3, 4, _, !1, 64, 48));
                                    else if (void 0 !== p && void 0 !== (g = p[w]))
                                        switch (g.length) {
                                            case 2:
                                                zt.vertexAttrib2fv(f, g);
                                                break;
                                            case 3:
                                                zt.vertexAttrib3fv(f, g);
                                                break;
                                            case 4:
                                                zt.vertexAttrib4fv(f, g);
                                                break;
                                            default:
                                                zt.vertexAttrib1fv(f, g)
                                        }
                                }
                            }
                            I.disableUnusedAttributes()
                        }
                        null !== t && zt.bindBuffer(34963, h.buffer)
                    }
                    var w = i.drawRange.start * l;
                    u = null !== o ? o.start * l : 0,
                        h = Math.max(w, u),
                    0 !== (o = Math.max(0, Math.min(null !== t ? t.count : n.count, w + i.drawRange.count * l, u + (null !== o ? o.count * l : 1 / 0)) - 1 - h + 1)) && (a.isMesh ? !0 === r.wireframe ? (I.setLineWidth(r.wireframeLinewidth * (null === Q ? St : 1)),
                        s.setMode(1)) : s.setMode(4) : a.isLine ? (void 0 === (r = r.linewidth) && (r = 1),
                        I.setLineWidth(r * (null === Q ? St : 1)),
                        a.isLineSegments ? s.setMode(1) : a.isLineLoop ? s.setMode(2) : s.setMode(3)) : a.isPoints ? s.setMode(0) : a.isSprite && s.setMode(4),
                        a.isInstancedMesh ? s.renderInstances(i, h, o, a.count) : i.isInstancedBufferGeometry ? s.renderInstances(i, h, o, i.maxInstancedCount) : s.render(h, o))
                }
                    ,
                    this.compile = function(t, e) {
                        (P = k.get(t, e)).init(),
                            t.traverse((function(t) {
                                    t.isLight && (P.pushLight(t),
                                    t.castShadow && P.pushShadow(t))
                                }
                            )),
                            P.setupLights(e);
                        var n = {};
                        t.traverse((function(e) {
                                if (e.material)
                                    if (Array.isArray(e.material))
                                        for (var i = 0; i < e.material.length; i++)
                                            0 == e.material[i].uuid in n && (f(e.material[i], t, e),
                                                n[e.material[i].uuid] = !0);
                                    else
                                        0 == e.material.uuid in n && (f(e.material, t, e),
                                            n[e.material.uuid] = !0)
                            }
                        ))
                    }
                ;
                var Gt = null
                    , kt = new et;
                kt.setAnimationLoop((function(t) {
                        Ft.isPresenting || Gt && Gt(t)
                    }
                )),
                "undefined" != typeof window && kt.setContext(window),
                    this.setAnimationLoop = function(t) {
                        Gt = t,
                            Ft.setAnimationLoop(t),
                            kt.start()
                    }
                    ,
                    this.render = function(t, n, i, r) {
                        if (void 0 !== i)
                            var a = i;
                        if (void 0 !== r)
                            var o = r;
                        n && n.isCamera && (Y || (ft = e = null,
                            gt = !1,
                            rt = -1,
                        !(vt = null) === t.autoUpdate && t.updateMatrixWorld(),
                        null === n.parent && n.updateMatrixWorld(),
                        Ft.enabled && Ft.isPresenting && (n = Ft.getCamera(n)),
                            (P = k.get(t, n)).init(),
                            t.onBeforeRender(X, t, n, a || Q),
                            Dt.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
                            Ct.setFromProjectionMatrix(Dt),
                            Nt = this.localClippingEnabled,
                            It = Ot.init(this.clippingPlanes, Nt, n),
                            (E = G.get(t, n)).init(),
                            function t(e, n, i, r) {
                                if (!1 !== e.visible) {
                                    if (e.layers.test(n.layers))
                                        if (e.isGroup)
                                            i = e.renderOrder;
                                        else if (e.isLOD)
                                            !0 === e.autoUpdate && e.update(n);
                                        else if (e.isLight)
                                            P.pushLight(e),
                                            e.castShadow && P.pushShadow(e);
                                        else if (e.isSprite) {
                                            if (!e.frustumCulled || Ct.intersectsSprite(e)) {
                                                r && Rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Dt);
                                                var a = B.update(e)
                                                    , o = e.material;
                                                o.visible && E.push(e, a, o, i, Rt.z, null)
                                            }
                                        } else if (e.isImmediateRenderObject)
                                            r && Rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Dt),
                                                E.push(e, null, e.material, i, Rt.z, null);
                                        else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== N.render.frame && (e.skeleton.update(),
                                            e.skeleton.frame = N.render.frame),
                                        !e.frustumCulled || Ct.intersectsObject(e)))
                                            if (r && Rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Dt),
                                                a = B.update(e),
                                                o = e.material,
                                                Array.isArray(o))
                                                for (var s = a.groups, c = 0, u = s.length; c < u; c++) {
                                                    var l = s[c]
                                                        , h = o[l.materialIndex];
                                                    h && h.visible && E.push(e, a, h, i, Rt.z, l)
                                                }
                                            else
                                                o.visible && E.push(e, a, o, i, Rt.z, null);
                                    for (c = 0,
                                             u = (e = e.children).length; c < u; c++)
                                        t(e[c], n, i, r)
                                }
                            }(t, n, 0, X.sortObjects),
                            E.finish(),
                        !0 === X.sortObjects && E.sort(At, Tt),
                        It && Ot.beginShadows(),
                            Bt.render(P.state.shadowsArray, t, n),
                            P.setupLights(n),
                        It && Ot.endShadows(),
                        this.info.autoReset && this.info.reset(),
                        void 0 !== a && this.setRenderTarget(a),
                            j.render(E, t, n, o),
                            i = E.opaque,
                            r = E.transparent,
                            t.overrideMaterial ? (a = t.overrideMaterial,
                            i.length && u(i, t, n, a),
                            r.length && u(r, t, n, a)) : (i.length && u(i, t, n),
                            r.length && u(r, t, n)),
                            t.onAfterRender(X, t, n),
                        null !== Q && (R.updateRenderTargetMipmap(Q),
                            R.updateMultisampleRenderTarget(Q)),
                            I.buffers.depth.setTest(!0),
                            I.buffers.depth.setMask(!0),
                            I.buffers.color.setMask(!0),
                            I.setPolygonOffset(!1),
                            P = E = null))
                    }
                    ,
                    this.setFramebuffer = function(t) {
                        Z !== t && null === Q && zt.bindFramebuffer(36160, t),
                            Z = t
                    }
                    ,
                    this.getActiveCubeFace = function() {
                        return J
                    }
                    ,
                    this.getActiveMipmapLevel = function() {
                        return K
                    }
                    ,
                    this.getRenderTarget = function() {
                        return Q
                    }
                    ,
                    this.setRenderTarget = function(t, e, n) {
                        J = e,
                            K = n,
                        (Q = t) && void 0 === D.get(t).__webglFramebuffer && R.setupRenderTarget(t);
                        var i = Z
                            , r = !1;
                        bt = t ? (i = D.get(t).__webglFramebuffer,
                            t.isWebGLCubeRenderTarget ? (i = i[e || 0],
                                r = !0) : i = t.isWebGLMultisampleRenderTarget ? D.get(t).__webglMultisampledFramebuffer : i,
                            xt.copy(t.viewport),
                            _t.copy(t.scissor),
                            t.scissorTest) : (xt.copy(Lt).multiplyScalar(St).floor(),
                            _t.copy(Et).multiplyScalar(St).floor(),
                            Pt),
                        it !== i && (zt.bindFramebuffer(36160, i),
                            it = i),
                            I.viewport(xt),
                            I.scissor(_t),
                            I.setScissorTest(bt),
                        r && (t = D.get(t.texture),
                            zt.framebufferTexture2D(36160, 36064, 34069 + (e || 0), t.__webglTexture, n || 0))
                    }
                    ,
                    this.readRenderTargetPixels = function(t, e, n, i, r, a, o) {
                        if (t && t.isWebGLRenderTarget) {
                            var s = D.get(t).__webglFramebuffer;
                            if (t.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]),
                                s) {
                                o = !1,
                                s !== it && (zt.bindFramebuffer(36160, s),
                                    o = !0);
                                try {
                                    var c = t.texture
                                        , u = c.format
                                        , l = c.type;
                                    1023 !== u && q.convert(u) !== zt.getParameter(35739) || (1009 === l || q.convert(l) === zt.getParameter(35738) || 1015 === l && (O.isWebGL2 || C.get("OES_texture_float") || C.get("WEBGL_color_buffer_float")) || 1016 === l && (O.isWebGL2 ? C.get("EXT_color_buffer_float") : C.get("EXT_color_buffer_half_float"))) && (36053 !== zt.checkFramebufferStatus(36160) || 0 <= e && e <= t.width - i && 0 <= n && n <= t.height - r && zt.readPixels(e, n, i, r, q.convert(u), q.convert(l), a))
                                } finally {
                                    o && zt.bindFramebuffer(36160, it)
                                }
                            }
                        }
                    }
                    ,
                    this.copyFramebufferToTexture = function(t, e, n) {
                        void 0 === n && (n = 0);
                        var i = Math.pow(2, -n)
                            , r = Math.floor(e.image.width * i);
                        i = Math.floor(e.image.height * i);
                        var a = q.convert(e.format);
                        R.setTexture2D(e, 0),
                            zt.copyTexImage2D(3553, n, a, t.x, t.y, r, i, 0),
                            I.unbindTexture()
                    }
                    ,
                    this.copyTextureToTexture = function(t, e, n, i) {
                        var r = e.image.width
                            , a = e.image.height
                            , o = q.convert(n.format)
                            , s = q.convert(n.type);
                        R.setTexture2D(n, 0),
                            e.isDataTexture ? zt.texSubImage2D(3553, i || 0, t.x, t.y, r, a, o, s, e.image.data) : zt.texSubImage2D(3553, i || 0, t.x, t.y, o, s, e.image),
                            I.unbindTexture()
                    }
                    ,
                    this.initTexture = function(t) {
                        R.setTexture2D(t, 0),
                            I.unbindTexture()
                    }
                    ,
                "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
                    detail: this
                }))
            }
            function Re(t, e) {
                this.name = "",
                    this.color = new M(t),
                    this.density = void 0 !== e ? e : 25e-5
            }
            function ze(t, e, n) {
                this.name = "",
                    this.color = new M(t),
                    this.near = void 0 !== e ? e : 1,
                    this.far = void 0 !== n ? n : 1e3
            }
            function Fe(t, e) {
                this.array = t,
                    this.stride = e,
                    this.count = void 0 !== t ? t.length / e : 0,
                    this.usage = 35044,
                    this.updateRange = {
                        offset: 0,
                        count: -1
                    },
                    this.version = 0
            }
            function Be(t, e, n, i) {
                this.data = t,
                    this.itemSize = e,
                    this.offset = n,
                    this.normalized = !0 === i
            }
            function Ue(t) {
                L.call(this),
                    this.type = "SpriteMaterial",
                    this.color = new M(16777215),
                    this.alphaMap = this.map = null,
                    this.rotation = 0,
                    this.transparent = this.sizeAttenuation = !0,
                    this.setValues(t)
            }
            function Ge(t) {
                if (d.call(this),
                    this.type = "Sprite",
                void 0 === qs) {
                    qs = new k;
                    var e = new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]);
                    e = new Fe(e,5),
                        qs.setIndex([0, 1, 2, 0, 2, 3]),
                        qs.setAttribute("position", new Be(e,3,0,!1)),
                        qs.setAttribute("uv", new Be(e,2,3,!1))
                }
                this.geometry = qs,
                    this.material = void 0 !== t ? t : new Ue,
                    this.center = new n(.5,.5)
            }
            function ke(t, e, n, i, r, a) {
                Js.subVectors(t, n).addScalar(.5).multiply(i),
                    void 0 !== r ? (Ks.x = a * Js.x - r * Js.y,
                        Ks.y = r * Js.x + a * Js.y) : Ks.copy(Js),
                    t.copy(e),
                    t.x += Ks.x,
                    t.y += Ks.y,
                    t.applyMatrix4(Qs)
            }
            function je() {
                d.call(this),
                    this._currentLevel = 0,
                    this.type = "LOD",
                    Object.defineProperties(this, {
                        levels: {
                            enumerable: !0,
                            value: []
                        }
                    }),
                    this.autoUpdate = !0
            }
            function Ve(t, e) {
                t && t.isGeometry,
                    j.call(this, t, e),
                    this.type = "SkinnedMesh",
                    this.bindMode = "attached",
                    this.bindMatrix = new h,
                    this.bindMatrixInverse = new h
            }
            function We(t, e) {
                if (t = t || [],
                    this.bones = t.slice(0),
                    this.boneMatrices = new Float32Array(16 * this.bones.length),
                    this.frame = -1,
                void 0 === e)
                    this.calculateInverses();
                else if (this.bones.length === e.length)
                    this.boneInverses = e.slice(0);
                else
                    for (this.boneInverses = [],
                             t = 0,
                             e = this.bones.length; t < e; t++)
                        this.boneInverses.push(new h)
            }
            function He() {
                d.call(this),
                    this.type = "Bone"
            }
            function qe(t, e, n) {
                j.call(this, t, e),
                    this.instanceMatrix = new P(new Float32Array(16 * n),16),
                    this.count = n,
                    this.frustumCulled = !1
            }
            function Xe(t) {
                L.call(this),
                    this.type = "LineBasicMaterial",
                    this.color = new M(16777215),
                    this.linewidth = 1,
                    this.linejoin = this.linecap = "round",
                    this.setValues(t)
            }
            function Ye(t, e, n) {
                d.call(this),
                    this.type = "Line",
                    this.geometry = void 0 !== t ? t : new k,
                    this.material = void 0 !== e ? e : new Xe
            }
            function Ze(t, e) {
                Ye.call(this, t, e),
                    this.type = "LineSegments"
            }
            function Je(t, e) {
                Ye.call(this, t, e),
                    this.type = "LineLoop"
            }
            function Ke(t) {
                L.call(this),
                    this.type = "PointsMaterial",
                    this.color = new M(16777215),
                    this.alphaMap = this.map = null,
                    this.size = 1,
                    this.sizeAttenuation = !0,
                    this.morphTargets = !1,
                    this.setValues(t)
            }
            function Qe(t, e) {
                d.call(this),
                    this.type = "Points",
                    this.geometry = void 0 !== t ? t : new k,
                    this.material = void 0 !== e ? e : new Ke,
                    this.updateMorphTargets()
            }
            function $e(t, e, n, i, r, a, o) {
                var s = bc.distanceSqToPoint(t);
                s < n && (n = new l,
                    bc.closestPointToPoint(t, n),
                    n.applyMatrix4(i),
                (t = r.ray.origin.distanceTo(n)) < r.near || t > r.far || a.push({
                    distance: t,
                    distanceToRay: Math.sqrt(s),
                    point: n,
                    index: e,
                    face: null,
                    object: o
                }))
            }
            function tn(t, e, n, i, a, o, s, c, u) {
                r.call(this, t, e, n, i, a, o, s, c, u),
                    this.format = void 0 !== s ? s : 1022,
                    this.minFilter = void 0 !== o ? o : 1006,
                    this.magFilter = void 0 !== a ? a : 1006,
                    this.generateMipmaps = !1
            }
            function en(t, e, n, i, a, o, s, c, u, l, h, p) {
                r.call(this, null, o, s, c, u, l, i, a, h, p),
                    this.image = {
                        width: e,
                        height: n
                    },
                    this.mipmaps = t,
                    this.generateMipmaps = this.flipY = !1
            }
            function nn(t, e, n, i, a, o, s, c, u) {
                r.call(this, t, e, n, i, a, o, s, c, u),
                    this.needsUpdate = !0
            }
            function rn(t, e, n, i, a, o, s, c, u, l) {
                if (1026 !== (l = void 0 !== l ? l : 1026) && 1027 !== l)
                    throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === n && 1026 === l && (n = 1012),
                void 0 === n && 1027 === l && (n = 1020),
                    r.call(this, null, i, a, o, s, c, l, n, u),
                    this.image = {
                        width: t,
                        height: e
                    },
                    this.magFilter = void 0 !== s ? s : 1003,
                    this.minFilter = void 0 !== c ? c : 1003,
                    this.generateMipmaps = this.flipY = !1
            }
            function an(t) {
                k.call(this),
                    this.type = "WireframeGeometry";
                var e, n, i, r = [], a = [0, 0], o = {}, s = ["a", "b", "c"];
                if (t && t.isGeometry) {
                    var c = t.faces
                        , u = 0;
                    for (n = c.length; u < n; u++) {
                        var h = c[u];
                        for (e = 0; e < 3; e++) {
                            var p = h[s[e]]
                                , f = h[s[(e + 1) % 3]];
                            a[0] = Math.min(p, f),
                                a[1] = Math.max(p, f),
                            void 0 === o[p = a[0] + "," + a[1]] && (o[p] = {
                                index1: a[0],
                                index2: a[1]
                            })
                        }
                    }
                    for (p in o)
                        u = o[p],
                            s = t.vertices[u.index1],
                            r.push(s.x, s.y, s.z),
                            s = t.vertices[u.index2],
                            r.push(s.x, s.y, s.z)
                } else if (t && t.isBufferGeometry)
                    if (s = new l,
                    null !== t.index) {
                        c = t.attributes.position,
                            h = t.index;
                        var d = t.groups;
                        for (0 === d.length && (d = [{
                            start: 0,
                            count: h.count,
                            materialIndex: 0
                        }]),
                                 t = 0,
                                 i = d.length; t < i; ++t)
                            for (e = (u = d[t]).start,
                                     n = u.count,
                                     n = (u = e) + n; u < n; u += 3)
                                for (e = 0; e < 3; e++)
                                    p = h.getX(u + e),
                                        f = h.getX(u + (e + 1) % 3),
                                        a[0] = Math.min(p, f),
                                        a[1] = Math.max(p, f),
                                    void 0 === o[p = a[0] + "," + a[1]] && (o[p] = {
                                        index1: a[0],
                                        index2: a[1]
                                    });
                        for (p in o)
                            u = o[p],
                                s.fromBufferAttribute(c, u.index1),
                                r.push(s.x, s.y, s.z),
                                s.fromBufferAttribute(c, u.index2),
                                r.push(s.x, s.y, s.z)
                    } else
                        for (u = 0,
                                 n = (c = t.attributes.position).count / 3; u < n; u++)
                            for (e = 0; e < 3; e++)
                                o = 3 * u + e,
                                    s.fromBufferAttribute(c, o),
                                    r.push(s.x, s.y, s.z),
                                    o = 3 * u + (e + 1) % 3,
                                    s.fromBufferAttribute(c, o),
                                    r.push(s.x, s.y, s.z);
                this.setAttribute("position", new F(r,3))
            }
            function on(t, e, n) {
                H.call(this),
                    this.type = "ParametricGeometry",
                    this.parameters = {
                        func: t,
                        slices: e,
                        stacks: n
                    },
                    this.fromBufferGeometry(new sn(t,e,n)),
                    this.mergeVertices()
            }
            function sn(t, e, n) {
                k.call(this),
                    this.type = "ParametricBufferGeometry",
                    this.parameters = {
                        func: t,
                        slices: e,
                        stacks: n
                    };
                var i, r, a = [], o = [], s = [], c = [], u = new l, h = new l, p = new l, f = new l, d = new l;
                t.length;
                var m = e + 1;
                for (i = 0; i <= n; i++) {
                    var g = i / n;
                    for (r = 0; r <= e; r++) {
                        var v = r / e;
                        t(v, g, h),
                            o.push(h.x, h.y, h.z),
                            0 <= v - 1e-5 ? (t(v - 1e-5, g, p),
                                f.subVectors(h, p)) : (t(1e-5 + v, g, p),
                                f.subVectors(p, h)),
                            0 <= g - 1e-5 ? (t(v, g - 1e-5, p),
                                d.subVectors(h, p)) : (t(v, 1e-5 + g, p),
                                d.subVectors(p, h)),
                            u.crossVectors(f, d).normalize(),
                            s.push(u.x, u.y, u.z),
                            c.push(v, g)
                    }
                }
                for (i = 0; i < n; i++)
                    for (r = 0; r < e; r++)
                        t = i * m + r + 1,
                            u = (i + 1) * m + r + 1,
                            h = (i + 1) * m + r,
                            a.push(i * m + r, t, h),
                            a.push(t, u, h);
                this.setIndex(a),
                    this.setAttribute("position", new F(o,3)),
                    this.setAttribute("normal", new F(s,3)),
                    this.setAttribute("uv", new F(c,2))
            }
            function cn(t, e, n, i) {
                H.call(this),
                    this.type = "PolyhedronGeometry",
                    this.parameters = {
                        vertices: t,
                        indices: e,
                        radius: n,
                        detail: i
                    },
                    this.fromBufferGeometry(new un(t,e,n,i)),
                    this.mergeVertices()
            }
            function un(t, e, i, r) {
                function a(t) {
                    c.push(t.x, t.y, t.z)
                }
                function o(e, n) {
                    e *= 3,
                        n.x = t[e + 0],
                        n.y = t[e + 1],
                        n.z = t[e + 2]
                }
                function s(t, e, n, i) {
                    i < 0 && 1 === t.x && (u[e] = t.x - 1),
                    0 === n.x && 0 === n.z && (u[e] = i / 2 / Math.PI + .5)
                }
                k.call(this),
                    this.type = "PolyhedronBufferGeometry",
                    this.parameters = {
                        vertices: t,
                        indices: e,
                        radius: i,
                        detail: r
                    },
                    i = i || 1;
                var c = []
                    , u = [];
                !function(t) {
                    for (var n = new l, i = new l, r = new l, s = 0; s < e.length; s += 3) {
                        o(e[s + 0], n),
                            o(e[s + 1], i),
                            o(e[s + 2], r);
                        var c, u, h = n, p = i, f = r, d = Math.pow(2, t), m = [];
                        for (u = 0; u <= d; u++) {
                            m[u] = [];
                            var g = h.clone().lerp(f, u / d)
                                , v = p.clone().lerp(f, u / d)
                                , y = d - u;
                            for (c = 0; c <= y; c++)
                                m[u][c] = 0 === c && u === d ? g : g.clone().lerp(v, c / y)
                        }
                        for (u = 0; u < d; u++)
                            for (c = 0; c < 2 * (d - u) - 1; c++)
                                h = Math.floor(c / 2),
                                    0 == c % 2 ? (a(m[u][h + 1]),
                                        a(m[u + 1][h]),
                                        a(m[u][h])) : (a(m[u][h + 1]),
                                        a(m[u + 1][h + 1]),
                                        a(m[u + 1][h]))
                    }
                }(r = r || 0),
                    function(t) {
                        for (var e = new l, n = 0; n < c.length; n += 3)
                            e.x = c[n + 0],
                                e.y = c[n + 1],
                                e.z = c[n + 2],
                                e.normalize().multiplyScalar(t),
                                c[n + 0] = e.x,
                                c[n + 1] = e.y,
                                c[n + 2] = e.z
                    }(i),
                    function() {
                        for (var t = new l, e = 0; e < c.length; e += 3)
                            t.x = c[e + 0],
                                t.y = c[e + 1],
                                t.z = c[e + 2],
                                u.push(Math.atan2(t.z, -t.x) / 2 / Math.PI + .5, 1 - (Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z)) / Math.PI + .5));
                        t = new l,
                            e = new l;
                        for (var i = new l, r = new l, a = new n, o = new n, h = new n, p = 0, f = 0; p < c.length; p += 9,
                            f += 6) {
                            t.set(c[p + 0], c[p + 1], c[p + 2]),
                                e.set(c[p + 3], c[p + 4], c[p + 5]),
                                i.set(c[p + 6], c[p + 7], c[p + 8]),
                                a.set(u[f + 0], u[f + 1]),
                                o.set(u[f + 2], u[f + 3]),
                                h.set(u[f + 4], u[f + 5]),
                                r.copy(t).add(e).add(i).divideScalar(3);
                            var d = Math.atan2(r.z, -r.x);
                            s(a, f + 0, t, d),
                                s(o, f + 2, e, d),
                                s(h, f + 4, i, d)
                        }
                        for (t = 0; t < u.length; t += 6)
                            e = u[t + 0],
                                i = u[t + 2],
                                r = u[t + 4],
                                a = Math.min(e, i, r),
                            .9 < Math.max(e, i, r) && a < .1 && (e < .2 && (u[t + 0] += 1),
                            i < .2 && (u[t + 2] += 1),
                            r < .2 && (u[t + 4] += 1))
                    }(),
                    this.setAttribute("position", new F(c,3)),
                    this.setAttribute("normal", new F(c.slice(),3)),
                    this.setAttribute("uv", new F(u,2)),
                    0 === r ? this.computeVertexNormals() : this.normalizeNormals()
            }
            function ln(t, e) {
                H.call(this),
                    this.type = "TetrahedronGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    },
                    this.fromBufferGeometry(new hn(t,e)),
                    this.mergeVertices()
            }
            function hn(t, e) {
                un.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, e),
                    this.type = "TetrahedronBufferGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    }
            }
            function pn(t, e) {
                H.call(this),
                    this.type = "OctahedronGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    },
                    this.fromBufferGeometry(new fn(t,e)),
                    this.mergeVertices()
            }
            function fn(t, e) {
                un.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, e),
                    this.type = "OctahedronBufferGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    }
            }
            function dn(t, e) {
                H.call(this),
                    this.type = "IcosahedronGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    },
                    this.fromBufferGeometry(new mn(t,e)),
                    this.mergeVertices()
            }
            function mn(t, e) {
                var n = (1 + Math.sqrt(5)) / 2;
                un.call(this, [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1], [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, e),
                    this.type = "IcosahedronBufferGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    }
            }
            function gn(t, e) {
                H.call(this),
                    this.type = "DodecahedronGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    },
                    this.fromBufferGeometry(new vn(t,e)),
                    this.mergeVertices()
            }
            function vn(t, e) {
                var n = (1 + Math.sqrt(5)) / 2
                    , i = 1 / n;
                un.call(this, [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i], [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t, e),
                    this.type = "DodecahedronBufferGeometry",
                    this.parameters = {
                        radius: t,
                        detail: e
                    }
            }
            function yn(t, e, n, i, r, a) {
                H.call(this),
                    this.type = "TubeGeometry",
                    this.parameters = {
                        path: t,
                        tubularSegments: e,
                        radius: n,
                        radialSegments: i,
                        closed: r
                    },
                    t = new xn(t,e,n,i,r),
                    this.tangents = t.tangents,
                    this.normals = t.normals,
                    this.binormals = t.binormals,
                    this.fromBufferGeometry(t),
                    this.mergeVertices()
            }
            function xn(t, e, i, r, a) {
                function o(n) {
                    d = t.getPointAt(n / e, d);
                    var a = s.normals[n];
                    for (n = s.binormals[n],
                             u = 0; u <= r; u++) {
                        var o = u / r * Math.PI * 2
                            , c = Math.sin(o);
                        o = -Math.cos(o),
                            p.x = o * a.x + c * n.x,
                            p.y = o * a.y + c * n.y,
                            p.z = o * a.z + c * n.z,
                            p.normalize(),
                            g.push(p.x, p.y, p.z),
                            h.x = d.x + i * p.x,
                            h.y = d.y + i * p.y,
                            h.z = d.z + i * p.z,
                            m.push(h.x, h.y, h.z)
                    }
                }
                k.call(this),
                    this.type = "TubeBufferGeometry",
                    this.parameters = {
                        path: t,
                        tubularSegments: e,
                        radius: i,
                        radialSegments: r,
                        closed: a
                    },
                    e = e || 64,
                    i = i || 1,
                    r = r || 8,
                    a = a || !1;
                var s = t.computeFrenetFrames(e, a);
                this.tangents = s.tangents,
                    this.normals = s.normals,
                    this.binormals = s.binormals;
                var c, u, h = new l, p = new l, f = new n, d = new l, m = [], g = [], v = [], y = [];
                for (c = 0; c < e; c++)
                    o(c);
                for (o(!1 === a ? e : 0),
                         c = 0; c <= e; c++)
                    for (u = 0; u <= r; u++)
                        f.x = c / e,
                            f.y = u / r,
                            v.push(f.x, f.y);
                !function() {
                    for (u = 1; u <= e; u++)
                        for (c = 1; c <= r; c++) {
                            var t = (r + 1) * u + (c - 1)
                                , n = (r + 1) * u + c
                                , i = (r + 1) * (u - 1) + c;
                            y.push((r + 1) * (u - 1) + (c - 1), t, i),
                                y.push(t, n, i)
                        }
                }(),
                    this.setIndex(y),
                    this.setAttribute("position", new F(m,3)),
                    this.setAttribute("normal", new F(g,3)),
                    this.setAttribute("uv", new F(v,2))
            }
            function _n(t, e, n, i, r, a, o) {
                H.call(this),
                    this.type = "TorusKnotGeometry",
                    this.parameters = {
                        radius: t,
                        tube: e,
                        tubularSegments: n,
                        radialSegments: i,
                        p: r,
                        q: a
                    },
                    this.fromBufferGeometry(new bn(t,e,n,i,r,a)),
                    this.mergeVertices()
            }
            function bn(t, e, n, i, r, a) {
                function o(t, e, n, i, r) {
                    var a = Math.sin(t);
                    e = n / e * t,
                        n = Math.cos(e),
                        r.x = i * (2 + n) * .5 * Math.cos(t),
                        r.y = i * (2 + n) * a * .5,
                        r.z = i * Math.sin(e) * .5
                }
                k.call(this),
                    this.type = "TorusKnotBufferGeometry",
                    this.parameters = {
                        radius: t,
                        tube: e,
                        tubularSegments: n,
                        radialSegments: i,
                        p: r,
                        q: a
                    },
                    t = t || 1,
                    e = e || .4,
                    n = Math.floor(n) || 64,
                    i = Math.floor(i) || 8,
                    r = r || 2,
                    a = a || 3;
                var s, c = [], u = [], h = [], p = [], f = new l, d = new l, m = new l, g = new l, v = new l, y = new l, x = new l;
                for (s = 0; s <= n; ++s) {
                    var _ = s / n * r * Math.PI * 2;
                    for (o(_, r, a, t, m),
                             o(_ + .01, r, a, t, g),
                             y.subVectors(g, m),
                             x.addVectors(g, m),
                             v.crossVectors(y, x),
                             x.crossVectors(v, y),
                             v.normalize(),
                             x.normalize(),
                             _ = 0; _ <= i; ++_) {
                        var b = _ / i * Math.PI * 2
                            , M = -e * Math.cos(b);
                        b = e * Math.sin(b),
                            f.x = m.x + (M * x.x + b * v.x),
                            f.y = m.y + (M * x.y + b * v.y),
                            f.z = m.z + (M * x.z + b * v.z),
                            u.push(f.x, f.y, f.z),
                            d.subVectors(f, m).normalize(),
                            h.push(d.x, d.y, d.z),
                            p.push(s / n),
                            p.push(_ / i)
                    }
                }
                for (_ = 1; _ <= n; _++)
                    for (s = 1; s <= i; s++)
                        t = (i + 1) * _ + (s - 1),
                            e = (i + 1) * _ + s,
                            r = (i + 1) * (_ - 1) + s,
                            c.push((i + 1) * (_ - 1) + (s - 1), t, r),
                            c.push(t, e, r);
                this.setIndex(c),
                    this.setAttribute("position", new F(u,3)),
                    this.setAttribute("normal", new F(h,3)),
                    this.setAttribute("uv", new F(p,2))
            }
            function Mn(t, e, n, i, r) {
                H.call(this),
                    this.type = "TorusGeometry",
                    this.parameters = {
                        radius: t,
                        tube: e,
                        radialSegments: n,
                        tubularSegments: i,
                        arc: r
                    },
                    this.fromBufferGeometry(new wn(t,e,n,i,r)),
                    this.mergeVertices()
            }
            function wn(t, e, n, i, r) {
                k.call(this),
                    this.type = "TorusBufferGeometry",
                    this.parameters = {
                        radius: t,
                        tube: e,
                        radialSegments: n,
                        tubularSegments: i,
                        arc: r
                    },
                    t = t || 1,
                    e = e || .4,
                    n = Math.floor(n) || 8,
                    i = Math.floor(i) || 6,
                    r = r || 2 * Math.PI;
                var a, o, s = [], c = [], u = [], h = [], p = new l, f = new l, d = new l;
                for (a = 0; a <= n; a++)
                    for (o = 0; o <= i; o++) {
                        var m = o / i * r
                            , g = a / n * Math.PI * 2;
                        f.x = (t + e * Math.cos(g)) * Math.cos(m),
                            f.y = (t + e * Math.cos(g)) * Math.sin(m),
                            f.z = e * Math.sin(g),
                            c.push(f.x, f.y, f.z),
                            p.x = t * Math.cos(m),
                            p.y = t * Math.sin(m),
                            d.subVectors(f, p).normalize(),
                            u.push(d.x, d.y, d.z),
                            h.push(o / i),
                            h.push(a / n)
                    }
                for (a = 1; a <= n; a++)
                    for (o = 1; o <= i; o++)
                        t = (i + 1) * (a - 1) + o - 1,
                            e = (i + 1) * (a - 1) + o,
                            r = (i + 1) * a + o,
                            s.push((i + 1) * a + o - 1, t, r),
                            s.push(t, e, r);
                this.setIndex(s),
                    this.setAttribute("position", new F(c,3)),
                    this.setAttribute("normal", new F(u,3)),
                    this.setAttribute("uv", new F(h,2))
            }
            function Sn(t, e, n, i, r) {
                for (var a, o = 0, s = e, c = n - i; s < n; s += i)
                    o += (t[c] - t[s]) * (t[s + 1] + t[c + 1]),
                        c = s;
                if (r === 0 < o)
                    for (r = e; r < n; r += i)
                        a = Fn(r, t[r], t[r + 1], a);
                else
                    for (r = n - i; e <= r; r -= i)
                        a = Fn(r, t[r], t[r + 1], a);
                return a && Nn(a, a.next) && (Bn(a),
                    a = a.next),
                    a
            }
            function An(t, e) {
                if (!t)
                    return t;
                e = e || t;
                do {
                    var n = !1;
                    if (t.steiner || !Nn(t, t.next) && 0 !== In(t.prev, t, t.next))
                        t = t.next;
                    else {
                        if (Bn(t),
                        (t = e = t.prev) === t.next)
                            break;
                        n = !0
                    }
                } while (n || t !== e);
                return e
            }
            function Tn(t, e, n, i) {
                var r = t.prev
                    , a = t.next;
                if (0 <= In(r, t, a))
                    return !1;
                var o = r.x > t.x ? r.x > a.x ? r.x : a.x : t.x > a.x ? t.x : a.x
                    , s = r.y > t.y ? r.y > a.y ? r.y : a.y : t.y > a.y ? t.y : a.y
                    , c = Pn(r.x < t.x ? r.x < a.x ? r.x : a.x : t.x < a.x ? t.x : a.x, r.y < t.y ? r.y < a.y ? r.y : a.y : t.y < a.y ? t.y : a.y, e, n, i);
                for (e = Pn(o, s, e, n, i),
                         n = t.prevZ,
                         i = t.nextZ; n && n.z >= c && i && i.z <= e; ) {
                    if (n !== t.prev && n !== t.next && On(r.x, r.y, t.x, t.y, a.x, a.y, n.x, n.y) && 0 <= In(n.prev, n, n.next))
                        return !1;
                    if (n = n.prevZ,
                    i !== t.prev && i !== t.next && On(r.x, r.y, t.x, t.y, a.x, a.y, i.x, i.y) && 0 <= In(i.prev, i, i.next))
                        return !1;
                    i = i.nextZ
                }
                for (; n && n.z >= c; ) {
                    if (n !== t.prev && n !== t.next && On(r.x, r.y, t.x, t.y, a.x, a.y, n.x, n.y) && 0 <= In(n.prev, n, n.next))
                        return !1;
                    n = n.prevZ
                }
                for (; i && i.z <= e; ) {
                    if (i !== t.prev && i !== t.next && On(r.x, r.y, t.x, t.y, a.x, a.y, i.x, i.y) && 0 <= In(i.prev, i, i.next))
                        return !1;
                    i = i.nextZ
                }
                return !0
            }
            function Ln(t, e) {
                return t.x - e.x
            }
            function En(t, e) {
                var n = e
                    , i = t.x
                    , r = t.y
                    , a = -1 / 0;
                do {
                    if (r <= n.y && r >= n.next.y && n.next.y !== n.y) {
                        var o = n.x + (r - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                        if (o <= i && a < o) {
                            if ((a = o) === i) {
                                if (r === n.y)
                                    return n;
                                if (r === n.next.y)
                                    return n.next
                            }
                            var s = n.x < n.next.x ? n : n.next
                        }
                    }
                    n = n.next
                } while (n !== e);
                if (!s)
                    return null;
                if (i === a)
                    return s.prev;
                o = (e = s).x;
                var c = s.y
                    , u = 1 / 0;
                for (n = s.next; n !== e; ) {
                    if (i >= n.x && n.x >= o && i !== n.x && On(r < c ? i : a, r, o, c, r < c ? a : i, r, n.x, n.y)) {
                        var l = Math.abs(r - n.y) / (i - n.x);
                        (l < u || l === u && n.x > s.x) && Rn(n, t) && (s = n,
                            u = l)
                    }
                    n = n.next
                }
                return s
            }
            function Pn(t, e, n, i, r) {
                return 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1) | (1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - i) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
            }
            function Cn(t) {
                for (var e = t, n = t; (e.x < n.x || e.x === n.x && e.y < n.y) && (n = e),
                (e = e.next) !== t; )
                    ;
                return n
            }
            function On(t, e, n, i, r, a, o, s) {
                return 0 <= (r - o) * (e - s) - (t - o) * (a - s) && 0 <= (t - o) * (i - s) - (n - o) * (e - s) && 0 <= (n - o) * (a - s) - (r - o) * (i - s)
            }
            function In(t, e, n) {
                return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)
            }
            function Nn(t, e) {
                return t.x === e.x && t.y === e.y
            }
            function Dn(t, e, n, i) {
                return Nn(t, n) && Nn(e, i) || Nn(t, i) && Nn(n, e) || 0 < In(t, e, n) != 0 < In(t, e, i) && 0 < In(n, i, t) != 0 < In(n, i, e)
            }
            function Rn(t, e) {
                return In(t.prev, t, t.next) < 0 ? 0 <= In(t, e, t.next) && 0 <= In(t, t.prev, e) : In(t, e, t.prev) < 0 || In(t, t.next, e) < 0
            }
            function zn(t, e) {
                var n = new Un(t.i,t.x,t.y)
                    , i = new Un(e.i,e.x,e.y)
                    , r = t.next
                    , a = e.prev;
                return (t.next = e).prev = t,
                    (n.next = r).prev = n,
                    (i.next = n).prev = i,
                    (a.next = i).prev = a,
                    i
            }
            function Fn(t, e, n, i) {
                return t = new Un(t,e,n),
                    i ? (t.next = i.next,
                        (t.prev = i).next.prev = t,
                        i.next = t) : (t.prev = t).next = t,
                    t
            }
            function Bn(t) {
                t.next.prev = t.prev,
                    t.prev.next = t.next,
                t.prevZ && (t.prevZ.nextZ = t.nextZ),
                t.nextZ && (t.nextZ.prevZ = t.prevZ)
            }
            function Un(t, e, n) {
                this.i = t,
                    this.x = e,
                    this.y = n,
                    this.nextZ = this.prevZ = this.z = this.next = this.prev = null,
                    this.steiner = !1
            }
            function Gn(t) {
                var e = t.length;
                2 < e && t[e - 1].equals(t[0]) && t.pop()
            }
            function kn(t, e) {
                for (var n = 0; n < e.length; n++)
                    t.push(e[n].x),
                        t.push(e[n].y)
            }
            function jn(t, e) {
                H.call(this),
                    this.type = "ExtrudeGeometry",
                    this.parameters = {
                        shapes: t,
                        options: e
                    },
                    this.fromBufferGeometry(new Vn(t,e)),
                    this.mergeVertices()
            }
            function Vn(t, e) {
                function i(t) {
                    function i(t, e, n) {
                        return e.clone().multiplyScalar(n).add(t)
                    }
                    function s(t, e, i) {
                        var r = t.x - e.x
                            , a = t.y - e.y
                            , o = i.x - t.x
                            , s = i.y - t.y
                            , c = r * r + a * a;
                        if (Math.abs(r * s - a * o) > Number.EPSILON) {
                            var u = Math.sqrt(c)
                                , l = Math.sqrt(o * o + s * s);
                            if (c = e.x - a / u,
                                e = e.y + r / u,
                            (a = (o = c + r * (s = ((i.x - s / l - c) * s - (i.y + o / l - e) * o) / (r * s - a * o)) - t.x) * o + (r = e + a * s - t.y) * r) <= 2)
                                return new n(o,r);
                            a = Math.sqrt(a / 2)
                        } else
                            t = !1,
                                r > Number.EPSILON ? o > Number.EPSILON && (t = !0) : r < -Number.EPSILON ? o < -Number.EPSILON && (t = !0) : Math.sign(a) === Math.sign(s) && (t = !0),
                                a = t ? (o = -a,
                                    Math.sqrt(c)) : (o = r,
                                    r = a,
                                    Math.sqrt(c / 2));
                        return new n(o / a,r / a)
                    }
                    function c(t, e) {
                        for (k = t.length; 0 <= --k; ) {
                            var n = k
                                , i = k - 1;
                            i < 0 && (i = t.length - 1);
                            var o, s = g + 2 * M;
                            for (o = 0; o < s; o++) {
                                var c = U * o
                                    , u = U * (o + 1)
                                    , l = e + i + c
                                    , h = e + i + u;
                                u = e + n + u,
                                    p(e + n + c),
                                    p(l),
                                    p(u),
                                    p(l),
                                    p(h),
                                    p(u),
                                    c = a.length / 3,
                                    f((c = S.generateSideWallUV(r, a, c - 6, c - 3, c - 2, c - 1))[0]),
                                    f(c[1]),
                                    f(c[3]),
                                    f(c[1]),
                                    f(c[2]),
                                    f(c[3])
                            }
                        }
                    }
                    function u(t, e, n) {
                        d.push(t),
                            d.push(e),
                            d.push(n)
                    }
                    function h(t, e, n) {
                        p(t),
                            p(e),
                            p(n),
                            t = a.length / 3,
                            f((t = S.generateTopUV(r, a, t - 3, t - 2, t - 1))[0]),
                            f(t[1]),
                            f(t[2])
                    }
                    function p(t) {
                        a.push(d[3 * t]),
                            a.push(d[3 * t + 1]),
                            a.push(d[3 * t + 2])
                    }
                    function f(t) {
                        o.push(t.x),
                            o.push(t.y)
                    }
                    var d = []
                        , m = void 0 !== e.curveSegments ? e.curveSegments : 12
                        , g = void 0 !== e.steps ? e.steps : 1
                        , v = void 0 !== e.depth ? e.depth : 100
                        , y = void 0 === e.bevelEnabled || e.bevelEnabled
                        , x = void 0 !== e.bevelThickness ? e.bevelThickness : 6
                        , _ = void 0 !== e.bevelSize ? e.bevelSize : x - 2
                        , b = void 0 !== e.bevelOffset ? e.bevelOffset : 0
                        , M = void 0 !== e.bevelSegments ? e.bevelSegments : 3
                        , w = e.extrudePath
                        , S = void 0 !== e.UVGenerator ? e.UVGenerator : Ac;
                    void 0 !== e.amount && (v = e.amount);
                    var A, T = !1;
                    if (w) {
                        var L = w.getSpacedPoints(g);
                        y = !(T = !0);
                        var E = w.computeFrenetFrames(g, !1)
                            , P = new l
                            , C = new l
                            , O = new l
                    }
                    y || (b = _ = x = M = 0),
                        t = (m = t.extractPoints(m)).shape;
                    var I = m.holes;
                    if (!Sc.isClockWise(t)) {
                        t = t.reverse();
                        var N = 0;
                        for (A = I.length; N < A; N++) {
                            var D = I[N];
                            Sc.isClockWise(D) && (I[N] = D.reverse())
                        }
                    }
                    var R = Sc.triangulateShape(t, I)
                        , z = t;
                    for (N = 0,
                             A = I.length; N < A; N++)
                        D = I[N],
                            t = t.concat(D);
                    var F, B, U = t.length, G = R.length;
                    m = [];
                    var k = 0
                        , j = z.length
                        , V = j - 1;
                    for (F = k + 1; k < j; k++,
                        V++,
                        F++)
                        V === j && (V = 0),
                        F === j && (F = 0),
                            m[k] = s(z[k], z[V], z[F]);
                    w = [];
                    var W = m.concat();
                    for (N = 0,
                             A = I.length; N < A; N++) {
                        D = I[N];
                        var H = [];
                        for (k = 0,
                                 V = (j = D.length) - 1,
                                 F = k + 1; k < j; k++,
                                 V++,
                                 F++)
                            V === j && (V = 0),
                            F === j && (F = 0),
                                H[k] = s(D[k], D[V], D[F]);
                        w.push(H),
                            W = W.concat(H)
                    }
                    for (V = 0; V < M; V++) {
                        j = V / M;
                        var q = x * Math.cos(j * Math.PI / 2);
                        for (F = _ * Math.sin(j * Math.PI / 2) + b,
                                 k = 0,
                                 j = z.length; k < j; k++) {
                            var X = i(z[k], m[k], F);
                            u(X.x, X.y, -q)
                        }
                        for (N = 0,
                                 A = I.length; N < A; N++)
                            for (D = I[N],
                                     H = w[N],
                                     k = 0,
                                     j = D.length; k < j; k++)
                                u((X = i(D[k], H[k], F)).x, X.y, -q)
                    }
                    for (F = _ + b,
                             k = 0; k < U; k++)
                        X = y ? i(t[k], W[k], F) : t[k],
                            T ? (C.copy(E.normals[0]).multiplyScalar(X.x),
                                P.copy(E.binormals[0]).multiplyScalar(X.y),
                                O.copy(L[0]).add(C).add(P),
                                u(O.x, O.y, O.z)) : u(X.x, X.y, 0);
                    for (j = 1; j <= g; j++)
                        for (k = 0; k < U; k++)
                            X = y ? i(t[k], W[k], F) : t[k],
                                T ? (C.copy(E.normals[j]).multiplyScalar(X.x),
                                    P.copy(E.binormals[j]).multiplyScalar(X.y),
                                    O.copy(L[j]).add(C).add(P),
                                    u(O.x, O.y, O.z)) : u(X.x, X.y, v / g * j);
                    for (V = M - 1; 0 <= V; V--) {
                        for (j = V / M,
                                 q = x * Math.cos(j * Math.PI / 2),
                                 F = _ * Math.sin(j * Math.PI / 2) + b,
                                 k = 0,
                                 j = z.length; k < j; k++)
                            u((X = i(z[k], m[k], F)).x, X.y, v + q);
                        for (N = 0,
                                 A = I.length; N < A; N++)
                            for (D = I[N],
                                     H = w[N],
                                     k = 0,
                                     j = D.length; k < j; k++)
                                X = i(D[k], H[k], F),
                                    T ? u(X.x, X.y + L[g - 1].y, L[g - 1].x + q) : u(X.x, X.y, v + q)
                    }
                    !function() {
                        var t = a.length / 3;
                        if (y) {
                            var e = 0 * U;
                            for (k = 0; k < G; k++)
                                h((B = R[k])[2] + e, B[1] + e, B[0] + e);
                            for (e = U * (g + 2 * M),
                                     k = 0; k < G; k++)
                                h((B = R[k])[0] + e, B[1] + e, B[2] + e)
                        } else {
                            for (k = 0; k < G; k++)
                                h((B = R[k])[2], B[1], B[0]);
                            for (k = 0; k < G; k++)
                                h((B = R[k])[0] + U * g, B[1] + U * g, B[2] + U * g)
                        }
                        r.addGroup(t, a.length / 3 - t, 0)
                    }(),
                        function() {
                            var t = a.length / 3
                                , e = 0;
                            for (c(z, e),
                                     e += z.length,
                                     N = 0,
                                     A = I.length; N < A; N++)
                                c(D = I[N], e),
                                    e += D.length;
                            r.addGroup(t, a.length / 3 - t, 1)
                        }()
                }
                k.call(this),
                    this.type = "ExtrudeBufferGeometry",
                    this.parameters = {
                        shapes: t,
                        options: e
                    },
                    t = Array.isArray(t) ? t : [t];
                for (var r = this, a = [], o = [], s = 0, c = t.length; s < c; s++)
                    i(t[s]);
                this.setAttribute("position", new F(a,3)),
                    this.setAttribute("uv", new F(o,2)),
                    this.computeVertexNormals()
            }
            function Wn(t, e, n) {
                if (n.shapes = [],
                    Array.isArray(t))
                    for (var i = 0, r = t.length; i < r; i++)
                        n.shapes.push(t[i].uuid);
                else
                    n.shapes.push(t.uuid);
                return void 0 !== e.extrudePath && (n.options.extrudePath = e.extrudePath.toJSON()),
                    n
            }
            function Hn(t, e) {
                H.call(this),
                    this.type = "TextGeometry",
                    this.parameters = {
                        text: t,
                        parameters: e
                    },
                    this.fromBufferGeometry(new qn(t,e)),
                    this.mergeVertices()
            }
            function qn(t, e) {
                var n = (e = e || {}).font;
                if (!n || !n.isFont)
                    return new H;
                t = n.generateShapes(t, e.size),
                    e.depth = void 0 !== e.height ? e.height : 50,
                void 0 === e.bevelThickness && (e.bevelThickness = 10),
                void 0 === e.bevelSize && (e.bevelSize = 8),
                void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
                    Vn.call(this, t, e),
                    this.type = "TextBufferGeometry"
            }
            function Xn(t, e, n, i, r, a, o) {
                H.call(this),
                    this.type = "SphereGeometry",
                    this.parameters = {
                        radius: t,
                        widthSegments: e,
                        heightSegments: n,
                        phiStart: i,
                        phiLength: r,
                        thetaStart: a,
                        thetaLength: o
                    },
                    this.fromBufferGeometry(new Yn(t,e,n,i,r,a,o)),
                    this.mergeVertices()
            }
            function Yn(t, e, n, i, r, a, o) {
                k.call(this),
                    this.type = "SphereBufferGeometry",
                    this.parameters = {
                        radius: t,
                        widthSegments: e,
                        heightSegments: n,
                        phiStart: i,
                        phiLength: r,
                        thetaStart: a,
                        thetaLength: o
                    },
                    t = t || 1,
                    e = Math.max(3, Math.floor(e) || 8),
                    n = Math.max(2, Math.floor(n) || 6),
                    i = void 0 !== i ? i : 0,
                    r = void 0 !== r ? r : 2 * Math.PI,
                    a = void 0 !== a ? a : 0,
                    o = void 0 !== o ? o : Math.PI;
                var s, c, u = Math.min(a + o, Math.PI), h = 0, p = [], f = new l, d = new l, m = [], g = [], v = [], y = [];
                for (c = 0; c <= n; c++) {
                    var x = []
                        , _ = c / n
                        , b = 0;
                    for (0 == c && 0 == a ? b = .5 / e : c == n && u == Math.PI && (b = -.5 / e),
                             s = 0; s <= e; s++) {
                        var M = s / e;
                        f.x = -t * Math.cos(i + M * r) * Math.sin(a + _ * o),
                            f.y = t * Math.cos(a + _ * o),
                            f.z = t * Math.sin(i + M * r) * Math.sin(a + _ * o),
                            g.push(f.x, f.y, f.z),
                            d.copy(f).normalize(),
                            v.push(d.x, d.y, d.z),
                            y.push(M + b, 1 - _),
                            x.push(h++)
                    }
                    p.push(x)
                }
                for (c = 0; c < n; c++)
                    for (s = 0; s < e; s++)
                        t = p[c][s + 1],
                            i = p[c][s],
                            r = p[c + 1][s],
                            o = p[c + 1][s + 1],
                        (0 !== c || 0 < a) && m.push(t, i, o),
                        (c !== n - 1 || u < Math.PI) && m.push(i, r, o);
                this.setIndex(m),
                    this.setAttribute("position", new F(g,3)),
                    this.setAttribute("normal", new F(v,3)),
                    this.setAttribute("uv", new F(y,2))
            }
            function Zn(t, e, n, i, r, a) {
                H.call(this),
                    this.type = "RingGeometry",
                    this.parameters = {
                        innerRadius: t,
                        outerRadius: e,
                        thetaSegments: n,
                        phiSegments: i,
                        thetaStart: r,
                        thetaLength: a
                    },
                    this.fromBufferGeometry(new Jn(t,e,n,i,r,a)),
                    this.mergeVertices()
            }
            function Jn(t, e, i, r, a, o) {
                k.call(this),
                    this.type = "RingBufferGeometry",
                    this.parameters = {
                        innerRadius: t,
                        outerRadius: e,
                        thetaSegments: i,
                        phiSegments: r,
                        thetaStart: a,
                        thetaLength: o
                    },
                    t = t || .5,
                    e = e || 1,
                    a = void 0 !== a ? a : 0,
                    o = void 0 !== o ? o : 2 * Math.PI,
                    i = void 0 !== i ? Math.max(3, i) : 8;
                var s, c, u = [], h = [], p = [], f = [], d = t, m = (e - t) / (r = void 0 !== r ? Math.max(1, r) : 1), g = new l, v = new n;
                for (s = 0; s <= r; s++) {
                    for (c = 0; c <= i; c++)
                        t = a + c / i * o,
                            g.x = d * Math.cos(t),
                            g.y = d * Math.sin(t),
                            h.push(g.x, g.y, g.z),
                            p.push(0, 0, 1),
                            v.x = (g.x / e + 1) / 2,
                            v.y = (g.y / e + 1) / 2,
                            f.push(v.x, v.y);
                    d += m
                }
                for (s = 0; s < r; s++)
                    for (e = s * (i + 1),
                             c = 0; c < i; c++)
                        a = (t = c + e) + i + 1,
                            o = t + i + 2,
                            d = t + 1,
                            u.push(t, a, d),
                            u.push(a, o, d);
                this.setIndex(u),
                    this.setAttribute("position", new F(h,3)),
                    this.setAttribute("normal", new F(p,3)),
                    this.setAttribute("uv", new F(f,2))
            }
            function Kn(t, e, n, i) {
                H.call(this),
                    this.type = "LatheGeometry",
                    this.parameters = {
                        points: t,
                        segments: e,
                        phiStart: n,
                        phiLength: i
                    },
                    this.fromBufferGeometry(new Qn(t,e,n,i)),
                    this.mergeVertices()
            }
            function Qn(t, e, i, r) {
                k.call(this),
                    this.type = "LatheBufferGeometry",
                    this.parameters = {
                        points: t,
                        segments: e,
                        phiStart: i,
                        phiLength: r
                    },
                    e = Math.floor(e) || 12,
                    i = i || 0,
                    r = r || 2 * Math.PI,
                    r = Ca.clamp(r, 0, 2 * Math.PI);
                var a, o = [], s = [], c = [], u = 1 / e, h = new l, p = new n;
                for (a = 0; a <= e; a++) {
                    var f = i + a * u * r
                        , d = Math.sin(f)
                        , m = Math.cos(f);
                    for (f = 0; f <= t.length - 1; f++)
                        h.x = t[f].x * d,
                            h.y = t[f].y,
                            h.z = t[f].x * m,
                            s.push(h.x, h.y, h.z),
                            p.x = a / e,
                            p.y = f / (t.length - 1),
                            c.push(p.x, p.y)
                }
                for (a = 0; a < e; a++)
                    for (f = 0; f < t.length - 1; f++)
                        u = (i = f + a * t.length) + t.length,
                            h = i + t.length + 1,
                            p = i + 1,
                            o.push(i, u, p),
                            o.push(u, h, p);
                if (this.setIndex(o),
                    this.setAttribute("position", new F(s,3)),
                    this.setAttribute("uv", new F(c,2)),
                    this.computeVertexNormals(),
                r === 2 * Math.PI)
                    for (r = this.attributes.normal.array,
                             o = new l,
                             s = new l,
                             c = new l,
                             i = e * t.length * 3,
                             f = a = 0; a < t.length; a++,
                             f += 3)
                        o.x = r[f + 0],
                            o.y = r[f + 1],
                            o.z = r[f + 2],
                            s.x = r[i + f + 0],
                            s.y = r[i + f + 1],
                            s.z = r[i + f + 2],
                            c.addVectors(o, s).normalize(),
                            r[f + 0] = r[i + f + 0] = c.x,
                            r[f + 1] = r[i + f + 1] = c.y,
                            r[f + 2] = r[i + f + 2] = c.z
            }
            function $n(t, e) {
                H.call(this),
                    this.type = "ShapeGeometry",
                "object" === s(e) && (e = e.curveSegments),
                    this.parameters = {
                        shapes: t,
                        curveSegments: e
                    },
                    this.fromBufferGeometry(new ti(t,e)),
                    this.mergeVertices()
            }
            function ti(t, e) {
                function n(t) {
                    var n, s = r.length / 3, u = (t = t.extractPoints(e)).shape, l = t.holes;
                    for (!1 === Sc.isClockWise(u) && (u = u.reverse()),
                             t = 0,
                             n = l.length; t < n; t++) {
                        var h = l[t];
                        !0 === Sc.isClockWise(h) && (l[t] = h.reverse())
                    }
                    var p = Sc.triangulateShape(u, l);
                    for (t = 0,
                             n = l.length; t < n; t++)
                        h = l[t],
                            u = u.concat(h);
                    for (t = 0,
                             n = u.length; t < n; t++)
                        h = u[t],
                            r.push(h.x, h.y, 0),
                            a.push(0, 0, 1),
                            o.push(h.x, h.y);
                    for (t = 0,
                             n = p.length; t < n; t++)
                        u = p[t],
                            i.push(u[0] + s, u[1] + s, u[2] + s),
                            c += 3
                }
                k.call(this),
                    this.type = "ShapeBufferGeometry",
                    this.parameters = {
                        shapes: t,
                        curveSegments: e
                    },
                    e = e || 12;
                var i = []
                    , r = []
                    , a = []
                    , o = []
                    , s = 0
                    , c = 0;
                if (!1 === Array.isArray(t))
                    n(t);
                else
                    for (var u = 0; u < t.length; u++)
                        n(t[u]),
                            this.addGroup(s, c, u),
                            s += c,
                            c = 0;
                this.setIndex(i),
                    this.setAttribute("position", new F(r,3)),
                    this.setAttribute("normal", new F(a,3)),
                    this.setAttribute("uv", new F(o,2))
            }
            function ei(t, e) {
                if (e.shapes = [],
                    Array.isArray(t))
                    for (var n = 0, i = t.length; n < i; n++)
                        e.shapes.push(t[n].uuid);
                else
                    e.shapes.push(t.uuid);
                return e
            }
            function ni(t, e) {
                k.call(this),
                    this.type = "EdgesGeometry",
                    this.parameters = {
                        thresholdAngle: e
                    };
                var n = [];
                e = Math.cos(Ca.DEG2RAD * (void 0 !== e ? e : 1));
                var i = [0, 0]
                    , r = {}
                    , a = ["a", "b", "c"];
                if (t.isBufferGeometry) {
                    var o = new H;
                    o.fromBufferGeometry(t)
                } else
                    o = t.clone();
                o.mergeVertices(),
                    o.computeFaceNormals(),
                    t = o.vertices;
                for (var s = 0, c = (o = o.faces).length; s < c; s++)
                    for (var u = o[s], l = 0; l < 3; l++) {
                        var h = u[a[l]]
                            , p = u[a[(l + 1) % 3]];
                        i[0] = Math.min(h, p),
                            i[1] = Math.max(h, p),
                            void 0 === r[h = i[0] + "," + i[1]] ? r[h] = {
                                index1: i[0],
                                index2: i[1],
                                face1: s,
                                face2: void 0
                            } : r[h].face2 = s
                    }
                for (h in r)
                    (void 0 === (i = r[h]).face2 || o[i.face1].normal.dot(o[i.face2].normal) <= e) && (a = t[i.index1],
                        n.push(a.x, a.y, a.z),
                        a = t[i.index2],
                        n.push(a.x, a.y, a.z));
                this.setAttribute("position", new F(n,3))
            }
            function ii(t, e, n, i, r, a, o, s) {
                H.call(this),
                    this.type = "CylinderGeometry",
                    this.parameters = {
                        radiusTop: t,
                        radiusBottom: e,
                        height: n,
                        radialSegments: i,
                        heightSegments: r,
                        openEnded: a,
                        thetaStart: o,
                        thetaLength: s
                    },
                    this.fromBufferGeometry(new ri(t,e,n,i,r,a,o,s)),
                    this.mergeVertices()
            }
            function ri(t, e, i, r, a, o, s, c) {
                function u(i) {
                    var a, o = new n, u = new l, v = 0, _ = !0 === i ? t : e, b = !0 === i ? 1 : -1, M = g;
                    for (a = 1; a <= r; a++)
                        f.push(0, y * b, 0),
                            d.push(0, b, 0),
                            m.push(.5, .5),
                            g++;
                    var w = g;
                    for (a = 0; a <= r; a++) {
                        var S = a / r * c + s
                            , A = Math.cos(S);
                        S = Math.sin(S),
                            u.x = _ * S,
                            u.y = y * b,
                            u.z = _ * A,
                            f.push(u.x, u.y, u.z),
                            d.push(0, b, 0),
                            o.x = .5 * A + .5,
                            o.y = .5 * S * b + .5,
                            m.push(o.x, o.y),
                            g++
                    }
                    for (a = 0; a < r; a++)
                        o = M + a,
                            u = w + a,
                            !0 === i ? p.push(u, u + 1, o) : p.push(u + 1, u, o),
                            v += 3;
                    h.addGroup(x, v, !0 === i ? 1 : 2),
                        x += v
                }
                k.call(this),
                    this.type = "CylinderBufferGeometry",
                    this.parameters = {
                        radiusTop: t,
                        radiusBottom: e,
                        height: i,
                        radialSegments: r,
                        heightSegments: a,
                        openEnded: o,
                        thetaStart: s,
                        thetaLength: c
                    };
                var h = this;
                t = void 0 !== t ? t : 1,
                    e = void 0 !== e ? e : 1,
                    i = i || 1,
                    r = Math.floor(r) || 8,
                    a = Math.floor(a) || 1,
                    o = void 0 !== o && o,
                    s = void 0 !== s ? s : 0,
                    c = void 0 !== c ? c : 2 * Math.PI;
                var p = []
                    , f = []
                    , d = []
                    , m = []
                    , g = 0
                    , v = []
                    , y = i / 2
                    , x = 0;
                !function() {
                    var n, o, u = new l, _ = new l, b = 0, M = (e - t) / i;
                    for (o = 0; o <= a; o++) {
                        var w = []
                            , S = o / a
                            , A = S * (e - t) + t;
                        for (n = 0; n <= r; n++) {
                            var T = n / r
                                , L = T * c + s
                                , E = Math.sin(L);
                            L = Math.cos(L),
                                _.x = A * E,
                                _.y = -S * i + y,
                                _.z = A * L,
                                f.push(_.x, _.y, _.z),
                                u.set(E, M, L).normalize(),
                                d.push(u.x, u.y, u.z),
                                m.push(T, 1 - S),
                                w.push(g++)
                        }
                        v.push(w)
                    }
                    for (n = 0; n < r; n++)
                        for (o = 0; o < a; o++)
                            u = v[o + 1][n],
                                _ = v[o + 1][n + 1],
                                M = v[o][n + 1],
                                p.push(v[o][n], u, M),
                                p.push(u, _, M),
                                b += 6;
                    h.addGroup(x, b, 0),
                        x += b
                }(),
                !1 === o && (0 < t && u(!0),
                0 < e && u(!1)),
                    this.setIndex(p),
                    this.setAttribute("position", new F(f,3)),
                    this.setAttribute("normal", new F(d,3)),
                    this.setAttribute("uv", new F(m,2))
            }
            function ai(t, e, n, i, r, a, o) {
                ii.call(this, 0, t, e, n, i, r, a, o),
                    this.type = "ConeGeometry",
                    this.parameters = {
                        radius: t,
                        height: e,
                        radialSegments: n,
                        heightSegments: i,
                        openEnded: r,
                        thetaStart: a,
                        thetaLength: o
                    }
            }
            function oi(t, e, n, i, r, a, o) {
                ri.call(this, 0, t, e, n, i, r, a, o),
                    this.type = "ConeBufferGeometry",
                    this.parameters = {
                        radius: t,
                        height: e,
                        radialSegments: n,
                        heightSegments: i,
                        openEnded: r,
                        thetaStart: a,
                        thetaLength: o
                    }
            }
            function si(t, e, n, i) {
                H.call(this),
                    this.type = "CircleGeometry",
                    this.parameters = {
                        radius: t,
                        segments: e,
                        thetaStart: n,
                        thetaLength: i
                    },
                    this.fromBufferGeometry(new ci(t,e,n,i)),
                    this.mergeVertices()
            }
            function ci(t, e, i, r) {
                k.call(this),
                    this.type = "CircleBufferGeometry",
                    this.parameters = {
                        radius: t,
                        segments: e,
                        thetaStart: i,
                        thetaLength: r
                    },
                    t = t || 1,
                    e = void 0 !== e ? Math.max(3, e) : 8,
                    i = void 0 !== i ? i : 0,
                    r = void 0 !== r ? r : 2 * Math.PI;
                var a, o = [], s = [], c = [], u = [], h = new l, p = new n;
                s.push(0, 0, 0),
                    c.push(0, 0, 1),
                    u.push(.5, .5);
                var f = 0;
                for (a = 3; f <= e; f++,
                    a += 3) {
                    var d = i + f / e * r;
                    h.x = t * Math.cos(d),
                        h.y = t * Math.sin(d),
                        s.push(h.x, h.y, h.z),
                        c.push(0, 0, 1),
                        p.x = (s[a] / t + 1) / 2,
                        p.y = (s[a + 1] / t + 1) / 2,
                        u.push(p.x, p.y)
                }
                for (a = 1; a <= e; a++)
                    o.push(a, a + 1, 0);
                this.setIndex(o),
                    this.setAttribute("position", new F(s,3)),
                    this.setAttribute("normal", new F(c,3)),
                    this.setAttribute("uv", new F(u,2))
            }
            function ui(t) {
                L.call(this),
                    this.type = "ShadowMaterial",
                    this.color = new M(0),
                    this.transparent = !0,
                    this.setValues(t)
            }
            function li(t) {
                Y.call(this, t),
                    this.type = "RawShaderMaterial"
            }
            function hi(t) {
                L.call(this),
                    this.defines = {
                        STANDARD: ""
                    },
                    this.type = "MeshStandardMaterial",
                    this.color = new M(16777215),
                    this.roughness = 1,
                    this.metalness = 0,
                    this.lightMap = this.map = null,
                    this.lightMapIntensity = 1,
                    this.aoMap = null,
                    this.aoMapIntensity = 1,
                    this.emissive = new M(0),
                    this.emissiveIntensity = 1,
                    this.bumpMap = this.emissiveMap = null,
                    this.bumpScale = 1,
                    this.normalMap = null,
                    this.normalMapType = 0,
                    this.normalScale = new n(1,1),
                    this.displacementMap = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.envMap = this.alphaMap = this.metalnessMap = this.roughnessMap = null,
                    this.envMapIntensity = 1,
                    this.refractionRatio = .98,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.wireframeLinejoin = this.wireframeLinecap = "round",
                    this.vertexTangents = this.morphNormals = this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function pi(t) {
                hi.call(this),
                    this.defines = {
                        STANDARD: "",
                        PHYSICAL: ""
                    },
                    this.type = "MeshPhysicalMaterial",
                    this.clearcoat = 0,
                    this.clearcoatMap = null,
                    this.clearcoatRoughness = 0,
                    this.clearcoatRoughnessMap = null,
                    this.clearcoatNormalScale = new n(1,1),
                    this.clearcoatNormalMap = null,
                    this.reflectivity = .5,
                    this.sheen = null,
                    this.transparency = 0,
                    this.setValues(t)
            }
            function fi(t) {
                L.call(this),
                    this.type = "MeshPhongMaterial",
                    this.color = new M(16777215),
                    this.specular = new M(1118481),
                    this.shininess = 30,
                    this.lightMap = this.map = null,
                    this.lightMapIntensity = 1,
                    this.aoMap = null,
                    this.aoMapIntensity = 1,
                    this.emissive = new M(0),
                    this.emissiveIntensity = 1,
                    this.bumpMap = this.emissiveMap = null,
                    this.bumpScale = 1,
                    this.normalMap = null,
                    this.normalMapType = 0,
                    this.normalScale = new n(1,1),
                    this.displacementMap = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.envMap = this.alphaMap = this.specularMap = null,
                    this.combine = 0,
                    this.reflectivity = 1,
                    this.refractionRatio = .98,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.wireframeLinejoin = this.wireframeLinecap = "round",
                    this.morphNormals = this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function di(t) {
                L.call(this),
                    this.defines = {
                        TOON: ""
                    },
                    this.type = "MeshToonMaterial",
                    this.color = new M(16777215),
                    this.specular = new M(1118481),
                    this.shininess = 30,
                    this.lightMap = this.gradientMap = this.map = null,
                    this.lightMapIntensity = 1,
                    this.aoMap = null,
                    this.aoMapIntensity = 1,
                    this.emissive = new M(0),
                    this.emissiveIntensity = 1,
                    this.bumpMap = this.emissiveMap = null,
                    this.bumpScale = 1,
                    this.normalMap = null,
                    this.normalMapType = 0,
                    this.normalScale = new n(1,1),
                    this.displacementMap = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.alphaMap = this.specularMap = null,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.wireframeLinejoin = this.wireframeLinecap = "round",
                    this.morphNormals = this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function mi(t) {
                L.call(this),
                    this.type = "MeshNormalMaterial",
                    this.bumpMap = null,
                    this.bumpScale = 1,
                    this.normalMap = null,
                    this.normalMapType = 0,
                    this.normalScale = new n(1,1),
                    this.displacementMap = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.morphNormals = this.morphTargets = this.skinning = this.fog = !1,
                    this.setValues(t)
            }
            function gi(t) {
                L.call(this),
                    this.type = "MeshLambertMaterial",
                    this.color = new M(16777215),
                    this.lightMap = this.map = null,
                    this.lightMapIntensity = 1,
                    this.aoMap = null,
                    this.aoMapIntensity = 1,
                    this.emissive = new M(0),
                    this.emissiveIntensity = 1,
                    this.envMap = this.alphaMap = this.specularMap = this.emissiveMap = null,
                    this.combine = 0,
                    this.reflectivity = 1,
                    this.refractionRatio = .98,
                    this.wireframe = !1,
                    this.wireframeLinewidth = 1,
                    this.wireframeLinejoin = this.wireframeLinecap = "round",
                    this.morphNormals = this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function vi(t) {
                L.call(this),
                    this.defines = {
                        MATCAP: ""
                    },
                    this.type = "MeshMatcapMaterial",
                    this.color = new M(16777215),
                    this.bumpMap = this.map = this.matcap = null,
                    this.bumpScale = 1,
                    this.normalMap = null,
                    this.normalMapType = 0,
                    this.normalScale = new n(1,1),
                    this.displacementMap = null,
                    this.displacementScale = 1,
                    this.displacementBias = 0,
                    this.alphaMap = null,
                    this.morphNormals = this.morphTargets = this.skinning = !1,
                    this.setValues(t)
            }
            function yi(t) {
                Xe.call(this),
                    this.type = "LineDashedMaterial",
                    this.scale = 1,
                    this.dashSize = 3,
                    this.gapSize = 1,
                    this.setValues(t)
            }
            function xi(t, e, n, i) {
                this.parameterPositions = t,
                    this._cachedIndex = 0,
                    this.resultBuffer = void 0 !== i ? i : new e.constructor(n),
                    this.sampleValues = e,
                    this.valueSize = n
            }
            function _i(t, e, n, i) {
                xi.call(this, t, e, n, i),
                    this._offsetNext = this._weightNext = this._offsetPrev = this._weightPrev = -0
            }
            function bi(t, e, n, i) {
                xi.call(this, t, e, n, i)
            }
            function Mi(t, e, n, i) {
                xi.call(this, t, e, n, i)
            }
            function wi(t, e, n, i) {
                if (void 0 === t)
                    throw Error("THREE.KeyframeTrack: track name is undefined");
                if (void 0 === e || 0 === e.length)
                    throw Error("THREE.KeyframeTrack: no keyframes in track named " + t);
                this.name = t,
                    this.times = Ec.convertArray(e, this.TimeBufferType),
                    this.values = Ec.convertArray(n, this.ValueBufferType),
                    this.setInterpolation(i || this.DefaultInterpolation)
            }
            function Si(t, e, n) {
                wi.call(this, t, e, n)
            }
            function Ai(t, e, n, i) {
                wi.call(this, t, e, n, i)
            }
            function Ti(t, e, n, i) {
                wi.call(this, t, e, n, i)
            }
            function Li(t, e, n, i) {
                xi.call(this, t, e, n, i)
            }
            function Ei(t, e, n, i) {
                wi.call(this, t, e, n, i)
            }
            function Pi(t, e, n, i) {
                wi.call(this, t, e, n, i)
            }
            function Ci(t, e, n, i) {
                wi.call(this, t, e, n, i)
            }
            function Oi(t, e, n) {
                this.name = t,
                    this.tracks = n,
                    this.duration = void 0 !== e ? e : -1,
                    this.uuid = Ca.generateUUID(),
                this.duration < 0 && this.resetDuration()
            }
            function Ii(t) {
                if (void 0 === t.type)
                    throw Error("THREE.KeyframeTrack: track type undefined, can not parse");
                var e = function(t) {
                    switch (t.toLowerCase()) {
                        case "scalar":
                        case "double":
                        case "float":
                        case "number":
                        case "integer":
                            return Ti;
                        case "vector":
                        case "vector2":
                        case "vector3":
                        case "vector4":
                            return Ci;
                        case "color":
                            return Ai;
                        case "quaternion":
                            return Ei;
                        case "bool":
                        case "boolean":
                            return Si;
                        case "string":
                            return Pi
                    }
                    throw Error("THREE.KeyframeTrack: Unsupported typeName: " + t)
                }(t.type);
                if (void 0 === t.times) {
                    var n = []
                        , i = [];
                    Ec.flattenJSON(t.keys, n, i, "value"),
                        t.times = n,
                        t.values = i
                }
                return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
            }
            function Ni(t, e, n) {
                var i = this
                    , r = !1
                    , a = 0
                    , o = 0
                    , s = void 0
                    , c = [];
                this.onStart = void 0,
                    this.onLoad = t,
                    this.onProgress = e,
                    this.onError = n,
                    this.itemStart = function(t) {
                        o++,
                        !1 === r && void 0 !== i.onStart && i.onStart(t, a, o),
                            r = !0
                    }
                    ,
                    this.itemEnd = function(t) {
                        a++,
                        void 0 !== i.onProgress && i.onProgress(t, a, o),
                        a === o && (r = !1,
                        void 0 !== i.onLoad) && i.onLoad()
                    }
                    ,
                    this.itemError = function(t) {
                        void 0 !== i.onError && i.onError(t)
                    }
                    ,
                    this.resolveURL = function(t) {
                        return s ? s(t) : t
                    }
                    ,
                    this.setURLModifier = function(t) {
                        return s = t,
                            this
                    }
                    ,
                    this.addHandler = function(t, e) {
                        return c.push(t, e),
                            this
                    }
                    ,
                    this.removeHandler = function(t) {
                        return -1 !== (t = c.indexOf(t)) && c.splice(t, 2),
                            this
                    }
                    ,
                    this.getHandler = function(t) {
                        for (var e = 0, n = c.length; e < n; e += 2) {
                            var i = c[e]
                                , r = c[e + 1];
                            if (i.global && (i.lastIndex = 0),
                                i.test(t))
                                return r
                        }
                        return null
                    }
            }
            function Di(t) {
                this.manager = void 0 !== t ? t : Cc,
                    this.crossOrigin = "anonymous",
                    this.resourcePath = this.path = ""
            }
            function Ri(t) {
                Di.call(this, t)
            }
            function zi(t) {
                Di.call(this, t)
            }
            function Fi(t) {
                Di.call(this, t)
            }
            function Bi(t) {
                Di.call(this, t)
            }
            function Ui(t) {
                Di.call(this, t)
            }
            function Gi(t) {
                Di.call(this, t)
            }
            function ki(t) {
                Di.call(this, t)
            }
            function ji() {
                this.type = "Curve",
                    this.arcLengthDivisions = 200
            }
            function Vi(t, e, n, i, r, a, o, s) {
                ji.call(this),
                    this.type = "EllipseCurve",
                    this.aX = t || 0,
                    this.aY = e || 0,
                    this.xRadius = n || 1,
                    this.yRadius = i || 1,
                    this.aStartAngle = r || 0,
                    this.aEndAngle = a || 2 * Math.PI,
                    this.aClockwise = o || !1,
                    this.aRotation = s || 0
            }
            function Wi(t, e, n, i, r, a) {
                Vi.call(this, t, e, n, n, i, r, a),
                    this.type = "ArcCurve"
            }
            function Hi() {
                var t = 0
                    , e = 0
                    , n = 0
                    , i = 0;
                return {
                    initCatmullRom: function(r, a, o, s, c) {
                        n = -3 * (t = a) + 3 * o - 2 * (e = r = c * (o - r)) - (s = c * (s - a)),
                            i = 2 * a - 2 * o + r + s
                    },
                    initNonuniformCatmullRom: function(r, a, o, s, c, u, l) {
                        n = -3 * (t = a) + 3 * o - 2 * (e = r = ((a - r) / c - (o - r) / (c + u) + (o - a) / u) * u) - (s = ((o - a) / u - (s - a) / (u + l) + (s - o) / l) * u),
                            i = 2 * a - 2 * o + r + s
                    },
                    calc: function(r) {
                        var a = r * r;
                        return t + e * r + n * a + i * a * r
                    }
                }
            }
            function qi(t, e, n, i) {
                ji.call(this),
                    this.type = "CatmullRomCurve3",
                    this.points = t || [],
                    this.closed = e || !1,
                    this.curveType = n || "centripetal",
                    this.tension = i || .5
            }
            function Xi(t, e, n, i, r) {
                var a = t * t;
                return (2 * n - 2 * i + (e = .5 * (i - e)) + (r = .5 * (r - n))) * t * a + (-3 * n + 3 * i - 2 * e - r) * a + e * t + n
            }
            function Yi(t, e, n, i) {
                var r = 1 - t;
                return r * r * e + 2 * (1 - t) * t * n + t * t * i
            }
            function Zi(t, e, n, i, r) {
                var a = 1 - t
                    , o = 1 - t;
                return a * a * a * e + 3 * o * o * t * n + 3 * (1 - t) * t * t * i + t * t * t * r
            }
            function Ji(t, e, i, r) {
                ji.call(this),
                    this.type = "CubicBezierCurve",
                    this.v0 = t || new n,
                    this.v1 = e || new n,
                    this.v2 = i || new n,
                    this.v3 = r || new n
            }
            function Ki(t, e, n, i) {
                ji.call(this),
                    this.type = "CubicBezierCurve3",
                    this.v0 = t || new l,
                    this.v1 = e || new l,
                    this.v2 = n || new l,
                    this.v3 = i || new l
            }
            function Qi(t, e) {
                ji.call(this),
                    this.type = "LineCurve",
                    this.v1 = t || new n,
                    this.v2 = e || new n
            }
            function $i(t, e) {
                ji.call(this),
                    this.type = "LineCurve3",
                    this.v1 = t || new l,
                    this.v2 = e || new l
            }
            function tr(t, e, i) {
                ji.call(this),
                    this.type = "QuadraticBezierCurve",
                    this.v0 = t || new n,
                    this.v1 = e || new n,
                    this.v2 = i || new n
            }
            function er(t, e, n) {
                ji.call(this),
                    this.type = "QuadraticBezierCurve3",
                    this.v0 = t || new l,
                    this.v1 = e || new l,
                    this.v2 = n || new l
            }
            function nr(t) {
                ji.call(this),
                    this.type = "SplineCurve",
                    this.points = t || []
            }
            function ir() {
                ji.call(this),
                    this.type = "CurvePath",
                    this.curves = [],
                    this.autoClose = !1
            }
            function rr(t) {
                ir.call(this),
                    this.type = "Path",
                    this.currentPoint = new n,
                t && this.setFromPoints(t)
            }
            function ar(t) {
                rr.call(this, t),
                    this.uuid = Ca.generateUUID(),
                    this.type = "Shape",
                    this.holes = []
            }
            function or(t, e) {
                d.call(this),
                    this.type = "Light",
                    this.color = new M(t),
                    this.intensity = void 0 !== e ? e : 1,
                    this.receiveShadow = void 0
            }
            function sr(t, e, n) {
                or.call(this, t, n),
                    this.type = "HemisphereLight",
                    this.castShadow = void 0,
                    this.position.copy(d.DefaultUp),
                    this.updateMatrix(),
                    this.groundColor = new M(e)
            }
            function cr(t) {
                this.camera = t,
                    this.bias = 0,
                    this.radius = 1,
                    this.mapSize = new n(512,512),
                    this.mapPass = this.map = null,
                    this.matrix = new h,
                    this._frustum = new tt,
                    this._frameExtents = new n(1,1),
                    this._viewportCount = 1,
                    this._viewports = [new a(0,0,1,1)]
            }
            function ur() {
                cr.call(this, new J(50,1,.5,500))
            }
            function lr(t, e, n, i, r, a) {
                or.call(this, t, e),
                    this.type = "SpotLight",
                    this.position.copy(d.DefaultUp),
                    this.updateMatrix(),
                    this.target = new d,
                    Object.defineProperty(this, "power", {
                        get: function() {
                            return this.intensity * Math.PI
                        },
                        set: function(t) {
                            this.intensity = t / Math.PI
                        }
                    }),
                    this.distance = void 0 !== n ? n : 0,
                    this.angle = void 0 !== i ? i : Math.PI / 3,
                    this.penumbra = void 0 !== r ? r : 0,
                    this.decay = void 0 !== a ? a : 1,
                    this.shadow = new ur
            }
            function hr() {
                cr.call(this, new J(90,1,.5,500)),
                    this._frameExtents = new n(4,2),
                    this._viewportCount = 6,
                    this._viewports = [new a(2,1,1,1), new a(0,1,1,1), new a(3,1,1,1), new a(1,1,1,1), new a(3,0,1,1), new a(1,0,1,1)],
                    this._cubeDirections = [new l(1,0,0), new l(-1,0,0), new l(0,0,1), new l(0,0,-1), new l(0,1,0), new l(0,-1,0)],
                    this._cubeUps = [new l(0,1,0), new l(0,1,0), new l(0,1,0), new l(0,1,0), new l(0,0,1), new l(0,0,-1)]
            }
            function pr(t, e, n, i) {
                or.call(this, t, e),
                    this.type = "PointLight",
                    Object.defineProperty(this, "power", {
                        get: function() {
                            return 4 * this.intensity * Math.PI
                        },
                        set: function(t) {
                            this.intensity = t / (4 * Math.PI)
                        }
                    }),
                    this.distance = void 0 !== n ? n : 0,
                    this.decay = void 0 !== i ? i : 1,
                    this.shadow = new hr
            }
            function fr(t, e, n, i, r, a) {
                Z.call(this),
                    this.type = "OrthographicCamera",
                    this.zoom = 1,
                    this.view = null,
                    this.left = void 0 !== t ? t : -1,
                    this.right = void 0 !== e ? e : 1,
                    this.top = void 0 !== n ? n : 1,
                    this.bottom = void 0 !== i ? i : -1,
                    this.near = void 0 !== r ? r : .1,
                    this.far = void 0 !== a ? a : 2e3,
                    this.updateProjectionMatrix()
            }
            function dr() {
                cr.call(this, new fr(-5,5,5,-5,.5,500))
            }
            function mr(t, e) {
                or.call(this, t, e),
                    this.type = "DirectionalLight",
                    this.position.copy(d.DefaultUp),
                    this.updateMatrix(),
                    this.target = new d,
                    this.shadow = new dr
            }
            function gr(t, e) {
                or.call(this, t, e),
                    this.type = "AmbientLight",
                    this.castShadow = void 0
            }
            function vr(t, e, n, i) {
                or.call(this, t, e),
                    this.type = "RectAreaLight",
                    this.width = void 0 !== n ? n : 10,
                    this.height = void 0 !== i ? i : 10
            }
            function yr(t) {
                Di.call(this, t),
                    this.textures = {}
            }
            function xr() {
                k.call(this),
                    this.type = "InstancedBufferGeometry",
                    this.maxInstancedCount = void 0
            }
            function _r(t, e, n, i) {
                "number" == typeof n && (i = n,
                    n = !1),
                    P.call(this, t, e, n),
                    this.meshPerAttribute = i || 1
            }
            function br(t) {
                Di.call(this, t)
            }
            function Mr(t) {
                Di.call(this, t)
            }
            function wr(t) {
                Di.call(this, t),
                    this.options = void 0
            }
            function Sr() {
                this.type = "ShapePath",
                    this.color = new M,
                    this.subPaths = [],
                    this.currentPath = null
            }
            function Ar(t) {
                this.type = "Font",
                    this.data = t
            }
            function Tr(t) {
                Di.call(this, t)
            }
            function Lr(t) {
                Di.call(this, t)
            }
            function Er() {
                this.coefficients = [];
                for (var t = 0; t < 9; t++)
                    this.coefficients.push(new l)
            }
            function Pr(t, e) {
                or.call(this, void 0, e),
                    this.sh = void 0 !== t ? t : new Er
            }
            function Cr(t, e, n) {
                Pr.call(this, void 0, n),
                    t = (new M).set(t),
                    n = (new M).set(e),
                    e = new l(t.r,t.g,t.b),
                    t = new l(n.r,n.g,n.b);
                var i = (n = Math.sqrt(Math.PI)) * Math.sqrt(.75);
                this.sh.coefficients[0].copy(e).add(t).multiplyScalar(n),
                    this.sh.coefficients[1].copy(e).sub(t).multiplyScalar(i)
            }
            function Or(t, e) {
                Pr.call(this, void 0, e),
                    t = (new M).set(t),
                    this.sh.coefficients[0].set(t.r, t.g, t.b).multiplyScalar(2 * Math.sqrt(Math.PI))
            }
            function Ir() {
                this.type = "StereoCamera",
                    this.aspect = 1,
                    this.eyeSep = .064,
                    this.cameraL = new J,
                    this.cameraL.layers.enable(1),
                    this.cameraL.matrixAutoUpdate = !1,
                    this.cameraR = new J,
                    this.cameraR.layers.enable(2),
                    this.cameraR.matrixAutoUpdate = !1,
                    this._cache = {
                        focus: null,
                        fov: null,
                        aspect: null,
                        near: null,
                        far: null,
                        zoom: null,
                        eyeSep: null
                    }
            }
            function Nr(t) {
                this.autoStart = void 0 === t || t,
                    this.elapsedTime = this.oldTime = this.startTime = 0,
                    this.running = !1
            }
            function Dr() {
                d.call(this),
                    this.type = "AudioListener",
                    this.context = Vc.getContext(),
                    this.gain = this.context.createGain(),
                    this.gain.connect(this.context.destination),
                    this.filter = null,
                    this.timeDelta = 0,
                    this._clock = new Nr
            }
            function Rr(t) {
                d.call(this),
                    this.type = "Audio",
                    this.listener = t,
                    this.context = t.context,
                    this.gain = this.context.createGain(),
                    this.gain.connect(t.getInput()),
                    this.autoplay = !1,
                    this.buffer = null,
                    this.detune = 0,
                    this.loop = !1,
                    this.offset = this.loopEnd = this.loopStart = 0,
                    this.duration = void 0,
                    this.playbackRate = 1,
                    this.isPlaying = !1,
                    this.hasPlaybackControl = !0,
                    this.sourceType = "empty",
                    this._pausedAt = this._startedAt = 0,
                    this.filters = []
            }
            function zr(t) {
                Rr.call(this, t),
                    this.panner = this.context.createPanner(),
                    this.panner.panningModel = "HRTF",
                    this.panner.connect(this.gain)
            }
            function Fr(t, e) {
                this.analyser = t.context.createAnalyser(),
                    this.analyser.fftSize = void 0 !== e ? e : 2048,
                    this.data = new Uint8Array(this.analyser.frequencyBinCount),
                    t.getOutput().connect(this.analyser)
            }
            function Br(t, e, n) {
                switch (this.binding = t,
                    this.valueSize = n,
                    t = Float64Array,
                    e) {
                    case "quaternion":
                        e = this._slerp;
                        break;
                    case "string":
                    case "bool":
                        t = Array,
                            e = this._select;
                        break;
                    default:
                        e = this._lerp
                }
                this.buffer = new t(4 * n),
                    this._mixBufferRegion = e,
                    this.referenceCount = this.useCount = this.cumulativeWeight = 0
            }
            function Ur(t, e, n) {
                n = n || Gr.parseTrackName(e),
                    this._targetGroup = t,
                    this._bindings = t.subscribe_(e, n)
            }
            function Gr(t, e, n) {
                this.path = e,
                    this.parsedPath = n || Gr.parseTrackName(e),
                    this.node = Gr.findNode(t, this.parsedPath.nodeName) || t,
                    this.rootNode = t
            }
            function kr() {
                this.uuid = Ca.generateUUID(),
                    this._objects = Array.prototype.slice.call(arguments),
                    this.nCachedObjects_ = 0;
                var t = {};
                this._indicesByUUID = t;
                for (var e = 0, n = arguments.length; e !== n; ++e)
                    t[arguments[e].uuid] = e;
                this._paths = [],
                    this._parsedPaths = [],
                    this._bindings = [],
                    this._bindingsIndicesByPath = {};
                var i = this;
                this.stats = {
                    objects: {
                        get total() {
                            return i._objects.length
                        },
                        get inUse() {
                            return this.total - i.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return i._bindings.length
                    }
                }
            }
            function jr(t, e, n) {
                this._mixer = t,
                    this._clip = e,
                    this._localRoot = n || null,
                    e = (t = e.tracks).length,
                    n = Array(e);
                for (var i = {
                    endingStart: 2400,
                    endingEnd: 2400
                }, r = 0; r !== e; ++r) {
                    var a = t[r].createInterpolant(null);
                    (n[r] = a).settings = i
                }
                this._interpolantSettings = i,
                    this._interpolants = n,
                    this._propertyBindings = Array(e),
                    this._weightInterpolant = this._timeScaleInterpolant = this._byClipCacheIndex = this._cacheIndex = null,
                    this.loop = 2201,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.time = 0,
                    this._effectiveWeight = this.weight = this._effectiveTimeScale = this.timeScale = 1,
                    this.repetitions = 1 / 0,
                    this.paused = !1,
                    this.enabled = !0,
                    this.clampWhenFinished = !1,
                    this.zeroSlopeAtEnd = this.zeroSlopeAtStart = !0
            }
            function Vr(t) {
                this._root = t,
                    this._initMemoryManager(),
                    this.time = this._accuIndex = 0,
                    this.timeScale = 1
            }
            function Wr(t, e) {
                "string" == typeof t && (t = e),
                    this.value = t
            }
            function Hr(t, e, n) {
                Fe.call(this, t, e),
                    this.meshPerAttribute = n || 1
            }
            function qr(t, e, n, i) {
                this.ray = new x(t,e),
                    this.near = n || 0,
                    this.far = i || 1 / 0,
                    this.camera = null,
                    this.layers = new f,
                    this.params = {
                        Mesh: {},
                        Line: {
                            threshold: 1
                        },
                        LOD: {},
                        Points: {
                            threshold: 1
                        },
                        Sprite: {}
                    },
                    Object.defineProperties(this.params, {
                        PointCloud: {
                            get: function() {
                                return this.Points
                            }
                        }
                    })
            }
            function Xr(t, e) {
                return t.distance - e.distance
            }
            function Yr(t, e, n, i) {
                if (t.layers.test(e.layers) && t.raycast(e, n),
                !0 === i) {
                    i = 0;
                    for (var r = (t = t.children).length; i < r; i++)
                        Yr(t[i], e, n, !0)
                }
            }
            function Zr(t, e, n) {
                return this.radius = void 0 !== t ? t : 1,
                    this.phi = void 0 !== e ? e : 0,
                    this.theta = void 0 !== n ? n : 0,
                    this
            }
            function Jr(t, e, n) {
                return this.radius = void 0 !== t ? t : 1,
                    this.theta = void 0 !== e ? e : 0,
                    this.y = void 0 !== n ? n : 0,
                    this
            }
            function Kr(t, e) {
                this.min = void 0 !== t ? t : new n(1 / 0,1 / 0),
                    this.max = void 0 !== e ? e : new n(-1 / 0,-1 / 0)
            }
            function Qr(t, e) {
                this.start = void 0 !== t ? t : new l,
                    this.end = void 0 !== e ? e : new l
            }
            function $r(t) {
                d.call(this),
                    this.material = t,
                    this.render = function() {}
            }
            function ta(t, e) {
                d.call(this),
                    this.light = t,
                    this.light.updateMatrixWorld(),
                    this.matrix = t.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = e,
                    t = new k,
                    e = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];
                for (var n = 0, i = 1; n < 32; n++,
                    i++) {
                    var r = n / 32 * Math.PI * 2
                        , a = i / 32 * Math.PI * 2;
                    e.push(Math.cos(r), Math.sin(r), 1, Math.cos(a), Math.sin(a), 1)
                }
                t.setAttribute("position", new F(e,3)),
                    e = new Xe({
                        fog: !1,
                        toneMapped: !1
                    }),
                    this.cone = new Ze(t,e),
                    this.add(this.cone),
                    this.update()
            }
            function ea(t) {
                for (var e = function t(e) {
                    var n = [];
                    e && e.isBone && n.push(e);
                    for (var i = 0; i < e.children.length; i++)
                        n.push.apply(n, t(e.children[i]));
                    return n
                }(t), n = new k, i = [], r = [], a = new M(0,0,1), o = new M(0,1,0), s = 0; s < e.length; s++) {
                    var c = e[s];
                    c.parent && c.parent.isBone && (i.push(0, 0, 0),
                        i.push(0, 0, 0),
                        r.push(a.r, a.g, a.b),
                        r.push(o.r, o.g, o.b))
                }
                n.setAttribute("position", new F(i,3)),
                    n.setAttribute("color", new F(r,3)),
                    i = new Xe({
                        vertexColors: !0,
                        depthTest: !1,
                        depthWrite: !1,
                        toneMapped: !1,
                        transparent: !0
                    }),
                    Ze.call(this, n, i),
                    this.root = t,
                    this.bones = e,
                    this.matrix = t.matrixWorld,
                    this.matrixAutoUpdate = !1
            }
            function na(t, e, n) {
                this.light = t,
                    this.light.updateMatrixWorld(),
                    this.color = n,
                    t = new Yn(e,4,2),
                    e = new E({
                        wireframe: !0,
                        fog: !1,
                        toneMapped: !1
                    }),
                    j.call(this, t, e),
                    this.matrix = this.light.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.update()
            }
            function ia(t, e, n) {
                d.call(this),
                    this.light = t,
                    this.light.updateMatrixWorld(),
                    this.matrix = t.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = n,
                    (t = new fn(e)).rotateY(.5 * Math.PI),
                    this.material = new E({
                        wireframe: !0,
                        fog: !1,
                        toneMapped: !1
                    }),
                void 0 === this.color && (this.material.vertexColors = !0),
                    e = t.getAttribute("position"),
                    e = new Float32Array(3 * e.count),
                    t.setAttribute("color", new P(e,3)),
                    this.add(new j(t,this.material)),
                    this.update()
            }
            function ra(t, e, n, i) {
                t = t || 10,
                    e = e || 10,
                    n = new M(void 0 !== n ? n : 4473924),
                    i = new M(void 0 !== i ? i : 8947848);
                var r = e / 2
                    , a = t / e
                    , o = t / 2;
                t = [];
                for (var s = [], c = 0, u = 0, l = -o; c <= e; c++,
                    l += a) {
                    t.push(-o, 0, l, o, 0, l),
                        t.push(l, 0, -o, l, 0, o);
                    var h = c === r ? n : i;
                    h.toArray(s, u),
                        u += 3,
                        h.toArray(s, u),
                        u += 3,
                        h.toArray(s, u),
                        u += 3,
                        h.toArray(s, u),
                        u += 3
                }
                (e = new k).setAttribute("position", new F(t,3)),
                    e.setAttribute("color", new F(s,3)),
                    n = new Xe({
                        vertexColors: !0,
                        toneMapped: !1
                    }),
                    Ze.call(this, e, n)
            }
            function aa(t, e, n, i, r, a) {
                t = t || 10,
                    e = e || 16,
                    n = n || 8,
                    i = i || 64,
                    r = new M(void 0 !== r ? r : 4473924),
                    a = new M(void 0 !== a ? a : 8947848);
                var o, s = [], c = [];
                for (o = 0; o <= e; o++) {
                    var u = o / e * 2 * Math.PI
                        , l = Math.sin(u) * t;
                    u = Math.cos(u) * t,
                        s.push(0, 0, 0),
                        s.push(l, 0, u);
                    var h = 1 & o ? r : a;
                    c.push(h.r, h.g, h.b),
                        c.push(h.r, h.g, h.b)
                }
                for (o = 0; o <= n; o++) {
                    h = 1 & o ? r : a;
                    var p = t - t / n * o;
                    for (e = 0; e < i; e++)
                        u = e / i * 2 * Math.PI,
                            l = Math.sin(u) * p,
                            u = Math.cos(u) * p,
                            s.push(l, 0, u),
                            c.push(h.r, h.g, h.b),
                            u = (e + 1) / i * 2 * Math.PI,
                            l = Math.sin(u) * p,
                            u = Math.cos(u) * p,
                            s.push(l, 0, u),
                            c.push(h.r, h.g, h.b)
                }
                (t = new k).setAttribute("position", new F(s,3)),
                    t.setAttribute("color", new F(c,3)),
                    s = new Xe({
                        vertexColors: !0,
                        toneMapped: !1
                    }),
                    Ze.call(this, t, s)
            }
            function oa(t, e, n) {
                d.call(this),
                    this.light = t,
                    this.light.updateMatrixWorld(),
                    this.matrix = t.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.color = n,
                void 0 === e && (e = 1),
                    (t = new k).setAttribute("position", new F([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3)),
                    e = new Xe({
                        fog: !1,
                        toneMapped: !1
                    }),
                    this.lightPlane = new Ye(t,e),
                    this.add(this.lightPlane),
                    (t = new k).setAttribute("position", new F([0, 0, 0, 0, 0, 1],3)),
                    this.targetLine = new Ye(t,e),
                    this.add(this.targetLine),
                    this.update()
            }
            function sa(t) {
                function e(t, e, i) {
                    n(t, i),
                        n(e, i)
                }
                function n(t, e) {
                    a.push(0, 0, 0),
                        o.push(e.r, e.g, e.b),
                    void 0 === s[t] && (s[t] = []),
                        s[t].push(a.length / 3 - 1)
                }
                var i = new k
                    , r = new Xe({
                    color: 16777215,
                    vertexColors: !0,
                    toneMapped: !1
                })
                    , a = []
                    , o = []
                    , s = {}
                    , c = new M(16755200)
                    , u = new M(16711680)
                    , l = new M(43775)
                    , h = new M(16777215)
                    , p = new M(3355443);
                e("n1", "n2", c),
                    e("n2", "n4", c),
                    e("n4", "n3", c),
                    e("n3", "n1", c),
                    e("f1", "f2", c),
                    e("f2", "f4", c),
                    e("f4", "f3", c),
                    e("f3", "f1", c),
                    e("n1", "f1", c),
                    e("n2", "f2", c),
                    e("n3", "f3", c),
                    e("n4", "f4", c),
                    e("p", "n1", u),
                    e("p", "n2", u),
                    e("p", "n3", u),
                    e("p", "n4", u),
                    e("u1", "u2", l),
                    e("u2", "u3", l),
                    e("u3", "u1", l),
                    e("c", "t", h),
                    e("p", "c", p),
                    e("cn1", "cn2", p),
                    e("cn3", "cn4", p),
                    e("cf1", "cf2", p),
                    e("cf3", "cf4", p),
                    i.setAttribute("position", new F(a,3)),
                    i.setAttribute("color", new F(o,3)),
                    Ze.call(this, i, r),
                    this.camera = t,
                this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                    this.matrix = t.matrixWorld,
                    this.matrixAutoUpdate = !1,
                    this.pointMap = s,
                    this.update()
            }
            function ca(t, e, n, i, r, a, o) {
                if (bu.set(r, a, o).unproject(i),
                void 0 !== (t = e[t]))
                    for (n = n.getAttribute("position"),
                             e = 0,
                             i = t.length; e < i; e++)
                        n.setXYZ(t[e], bu.x, bu.y, bu.z)
            }
            function ua(t, e) {
                this.object = t,
                void 0 === e && (e = 16776960),
                    t = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);
                var n = new Float32Array(24)
                    , i = new k;
                i.setIndex(new P(t,1)),
                    i.setAttribute("position", new P(n,3)),
                    Ze.call(this, i, new Xe({
                        color: e,
                        toneMapped: !1
                    })),
                    this.matrixAutoUpdate = !1,
                    this.update()
            }
            function la(t, e) {
                this.type = "Box3Helper",
                    this.box = t,
                    e = e || 16776960,
                    t = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);
                var n = new k;
                n.setIndex(new P(t,1)),
                    n.setAttribute("position", new F([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],3)),
                    Ze.call(this, n, new Xe({
                        color: e,
                        toneMapped: !1
                    })),
                    this.geometry.computeBoundingSphere()
            }
            function ha(t, e, n) {
                this.type = "PlaneHelper",
                    this.plane = t,
                    this.size = void 0 === e ? 1 : e,
                    t = void 0 !== n ? n : 16776960,
                    (e = new k).setAttribute("position", new F([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],3)),
                    e.computeBoundingSphere(),
                    Ye.call(this, e, new Xe({
                        color: t,
                        toneMapped: !1
                    })),
                    (e = new k).setAttribute("position", new F([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],3)),
                    e.computeBoundingSphere(),
                    this.add(new j(e,new E({
                        color: t,
                        opacity: .2,
                        transparent: !0,
                        depthWrite: !1,
                        toneMapped: !1
                    })))
            }
            function pa(t, e, n, i, r, a) {
                d.call(this),
                void 0 === t && (t = new l(0,0,1)),
                void 0 === e && (e = new l(0,0,0)),
                void 0 === n && (n = 1),
                void 0 === i && (i = 16776960),
                void 0 === r && (r = .2 * n),
                void 0 === a && (a = .2 * r),
                void 0 === Su && ((Su = new k).setAttribute("position", new F([0, 0, 0, 0, 1, 0],3)),
                    (Au = new ri(0,.5,1,5,1)).translate(0, -.5, 0)),
                    this.position.copy(e),
                    this.line = new Ye(Su,new Xe({
                        color: i,
                        toneMapped: !1
                    })),
                    this.line.matrixAutoUpdate = !1,
                    this.add(this.line),
                    this.cone = new j(Au,new E({
                        color: i,
                        toneMapped: !1
                    })),
                    this.cone.matrixAutoUpdate = !1,
                    this.add(this.cone),
                    this.setDirection(t),
                    this.setLength(n, r, a)
            }
            function fa(t) {
                var e = [0, 0, 0, t = t || 1, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t];
                (t = new k).setAttribute("position", new F(e,3)),
                    t.setAttribute("color", new F([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1],3)),
                    e = new Xe({
                        vertexColors: !0,
                        toneMapped: !1
                    }),
                    Ze.call(this, t, e)
            }
            function da(t) {
                ku = t,
                    va(Nu)
            }
            function ma(t) {
                var e = {
                    magFilter: 1003,
                    minFilter: 1003,
                    generateMipmaps: !1,
                    type: t ? t.type : 1009,
                    format: t ? t.format : 1023,
                    encoding: t ? t.encoding : 3002,
                    depthBuffer: !1,
                    stencilBuffer: !1
                }
                    , n = ya(e);
                return n.depthBuffer = !t,
                    Gu = ya(e),
                    n
            }
            function ga(t) {
                Gu.dispose(),
                    ku.setRenderTarget(ju),
                    t.scissorTest = !1,
                    t.setSize(t.width, t.height)
            }
            function va(t) {
                var e = new m;
                e.add(new j(Fu[0],t)),
                    ku.compile(e, Iu)
            }
            function ya(t) {
                return (t = new o(3 * Eu,3 * Eu,t)).texture.mapping = 306,
                    t.texture.name = "PMREM.cubeUv",
                    t.scissorTest = !0,
                    t
            }
            function xa(t, e, n, i, r) {
                t.viewport.set(e, n, i, r),
                    t.scissor.set(e, n, i, r)
            }
            function _a(t) {
                var e = ku.autoClear;
                ku.autoClear = !1;
                for (var n = 1; n < Cu; n++)
                    ba(t, n - 1, n, Math.sqrt(Uu[n] * Uu[n] - Uu[n - 1] * Uu[n - 1]), Hu[(n - 1) % Hu.length]);
                ku.autoClear = e
            }
            function ba(t, e, n, i, r) {
                Ma(t, Gu, e, n, i, "latitudinal", r),
                    Ma(Gu, t, n, n, i, "longitudinal", r)
            }
            function Ma(t, e, n, i, r, a, o) {
                var s = new m;
                s.add(new j(Fu[i],Nu));
                var c = Nu.uniforms
                    , u = Bu[n] - 1
                    , l = r / (u = isFinite(r) ? Math.PI / (2 * u) : 2 * Math.PI / 39)
                    , h = isFinite(r) ? 1 + Math.floor(3 * l) : 20;
                r = [];
                for (var p = 0, f = 0; f < 20; ++f) {
                    var d = f / l;
                    d = Math.exp(-d * d / 2),
                        r.push(d),
                        0 == f ? p += d : f < h && (p += 2 * d)
                }
                for (f = 0; f < r.length; f++)
                    r[f] /= p;
                c.envMap.value = t.texture,
                    c.samples.value = h,
                    c.weights.value = r,
                    c.latitudinal.value = "latitudinal" === a,
                o && (c.poleAxis.value = o),
                    c.dTheta.value = u,
                    c.mipInt.value = 8 - n,
                    c.inputEncoding.value = Ou[t.texture.encoding],
                    c.outputEncoding.value = Ou[t.texture.encoding],
                    t = Bu[i],
                    xa(e, d = 3 * Math.max(0, Eu - 2 * t), (0 === i ? 0 : 2 * Eu) + 2 * t * (4 < i ? i - 8 + 4 : 0), 3 * t, 2 * t),
                    ku.setRenderTarget(e),
                    ku.render(s, Iu)
            }
            function wa() {
                var t = new n(1,1);
                return (t = new li({
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        texelSize: {
                            value: t
                        },
                        inputEncoding: {
                            value: Ou[3e3]
                        },
                        outputEncoding: {
                            value: Ou[3e3]
                        }
                    },
                    vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
                    fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t",
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                })).type = "EquirectangularToCubeUV",
                    t
            }
            function Sa() {
                var t = new li({
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        inputEncoding: {
                            value: Ou[3e3]
                        },
                        outputEncoding: {
                            value: Ou[3e3]
                        }
                    },
                    vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
                    fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t",
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                });
                return t.type = "CubemapToCubeUV",
                    t
            }
            function Aa(t) {
                qi.call(this, t),
                    this.type = "catmullrom",
                    this.closed = !0
            }
            function Ta(t) {
                qi.call(this, t),
                    this.type = "catmullrom"
            }
            function La(t) {
                qi.call(this, t),
                    this.type = "catmullrom"
            }
            void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
            void 0 === Number.isInteger && (Number.isInteger = function(t) {
                    return "number" == typeof t && isFinite(t) && Math.floor(t) === t
                }
            ),
            void 0 === Math.sign && (Math.sign = function(t) {
                    return t < 0 ? -1 : 0 < t ? 1 : +t
                }
            ),
            0 == "name"in Function.prototype && Object.defineProperty(Function.prototype, "name", {
                get: function() {
                    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
                }
            }),
            void 0 === Object.assign && (Object.assign = function(t) {
                    if (null == t)
                        throw new TypeError("Cannot convert undefined or null to object");
                    for (var e = Object(t), n = 1; n < arguments.length; n++) {
                        var i = arguments[n];
                        if (null != i)
                            for (var r in i)
                                Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
                    }
                    return e
                }
            ),
                Object.assign(e.prototype, {
                    addEventListener: function(t, e) {
                        void 0 === this._listeners && (this._listeners = {});
                        var n = this._listeners;
                        void 0 === n[t] && (n[t] = []),
                        -1 === n[t].indexOf(e) && n[t].push(e)
                    },
                    hasEventListener: function(t, e) {
                        if (void 0 === this._listeners)
                            return !1;
                        var n = this._listeners;
                        return void 0 !== n[t] && -1 !== n[t].indexOf(e)
                    },
                    removeEventListener: function(t, e) {
                        void 0 !== this._listeners && void 0 !== (t = this._listeners[t]) && -1 !== (e = t.indexOf(e)) && t.splice(e, 1)
                    },
                    dispatchEvent: function(t) {
                        if (void 0 !== this._listeners) {
                            var e = this._listeners[t.type];
                            if (void 0 !== e) {
                                t.target = this;
                                for (var n = 0, i = (e = e.slice(0)).length; n < i; n++)
                                    e[n].call(this, t)
                            }
                        }
                    }
                });
            for (var Ea = [], Pa = 0; Pa < 256; Pa++)
                Ea[Pa] = (Pa < 16 ? "0" : "") + Pa.toString(16);
            var Ca = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function() {
                    var t = 4294967295 * Math.random() | 0
                        , e = 4294967295 * Math.random() | 0
                        , n = 4294967295 * Math.random() | 0
                        , i = 4294967295 * Math.random() | 0;
                    return (Ea[255 & t] + Ea[t >> 8 & 255] + Ea[t >> 16 & 255] + Ea[t >> 24 & 255] + "-" + Ea[255 & e] + Ea[e >> 8 & 255] + "-" + Ea[e >> 16 & 15 | 64] + Ea[e >> 24 & 255] + "-" + Ea[63 & n | 128] + Ea[n >> 8 & 255] + "-" + Ea[n >> 16 & 255] + Ea[n >> 24 & 255] + Ea[255 & i] + Ea[i >> 8 & 255] + Ea[i >> 16 & 255] + Ea[i >> 24 & 255]).toUpperCase()
                },
                clamp: function(t, e, n) {
                    return Math.max(e, Math.min(n, t))
                },
                euclideanModulo: function(t, e) {
                    return (t % e + e) % e
                },
                mapLinear: function(t, e, n, i, r) {
                    return i + (t - e) * (r - i) / (n - e)
                },
                lerp: function(t, e, n) {
                    return (1 - n) * t + n * e
                },
                smoothstep: function(t, e, n) {
                    return t <= e ? 0 : n <= t ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t)
                },
                smootherstep: function(t, e, n) {
                    return t <= e ? 0 : n <= t ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10)
                },
                randInt: function(t, e) {
                    return t + Math.floor(Math.random() * (e - t + 1))
                },
                randFloat: function(t, e) {
                    return t + Math.random() * (e - t)
                },
                randFloatSpread: function(t) {
                    return t * (.5 - Math.random())
                },
                degToRad: function(t) {
                    return t * Ca.DEG2RAD
                },
                radToDeg: function(t) {
                    return t * Ca.RAD2DEG
                },
                isPowerOfTwo: function(t) {
                    return 0 == (t & t - 1) && 0 !== t
                },
                ceilPowerOfTwo: function(t) {
                    return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2))
                },
                floorPowerOfTwo: function(t) {
                    return Math.pow(2, Math.floor(Math.log(t) / Math.LN2))
                },
                setQuaternionFromProperEuler: function(t, e, n, i, r) {
                    var a = Math.cos
                        , o = Math.sin
                        , s = a(n / 2);
                    n = o(n / 2);
                    var c = a((e + i) / 2)
                        , u = o((e + i) / 2)
                        , l = a((e - i) / 2)
                        , h = o((e - i) / 2);
                    a = a((i - e) / 2),
                        e = o((i - e) / 2),
                        "XYX" === r ? t.set(s * u, n * l, n * h, s * c) : "YZY" === r ? t.set(n * h, s * u, n * l, s * c) : "ZXZ" === r ? t.set(n * l, n * h, s * u, s * c) : "XZX" === r ? t.set(s * u, n * e, n * a, s * c) : "YXY" === r ? t.set(n * a, s * u, n * e, s * c) : "ZYZ" === r && t.set(n * e, n * a, s * u, s * c)
                }
            };
            Object.defineProperties(n.prototype, {
                width: {
                    get: function() {
                        return this.x
                    },
                    set: function(t) {
                        this.x = t
                    }
                },
                height: {
                    get: function() {
                        return this.y
                    },
                    set: function(t) {
                        this.y = t
                    }
                }
            }),
                Object.assign(n.prototype, {
                    isVector2: !0,
                    set: function(t, e) {
                        return this.x = t,
                            this.y = e,
                            this
                    },
                    setScalar: function(t) {
                        return this.y = this.x = t,
                            this
                    },
                    setX: function(t) {
                        return this.x = t,
                            this
                    },
                    setY: function(t) {
                        return this.y = t,
                            this
                    },
                    setComponent: function(t, e) {
                        switch (t) {
                            case 0:
                                this.x = e;
                                break;
                            case 1:
                                this.y = e;
                                break;
                            default:
                                throw Error("index is out of range: " + t)
                        }
                        return this
                    },
                    getComponent: function(t) {
                        switch (t) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            default:
                                throw Error("index is out of range: " + t)
                        }
                    },
                    clone: function() {
                        return new this.constructor(this.x,this.y)
                    },
                    copy: function(t) {
                        return this.x = t.x,
                            this.y = t.y,
                            this
                    },
                    add: function(t, e) {
                        return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                            this.y += t.y,
                            this)
                    },
                    addScalar: function(t) {
                        return this.x += t,
                            this.y += t,
                            this
                    },
                    addVectors: function(t, e) {
                        return this.x = t.x + e.x,
                            this.y = t.y + e.y,
                            this
                    },
                    addScaledVector: function(t, e) {
                        return this.x += t.x * e,
                            this.y += t.y * e,
                            this
                    },
                    sub: function(t, e) {
                        return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                            this.y -= t.y,
                            this)
                    },
                    subScalar: function(t) {
                        return this.x -= t,
                            this.y -= t,
                            this
                    },
                    subVectors: function(t, e) {
                        return this.x = t.x - e.x,
                            this.y = t.y - e.y,
                            this
                    },
                    multiply: function(t) {
                        return this.x *= t.x,
                            this.y *= t.y,
                            this
                    },
                    multiplyScalar: function(t) {
                        return this.x *= t,
                            this.y *= t,
                            this
                    },
                    divide: function(t) {
                        return this.x /= t.x,
                            this.y /= t.y,
                            this
                    },
                    divideScalar: function(t) {
                        return this.multiplyScalar(1 / t)
                    },
                    applyMatrix3: function(t) {
                        var e = this.x
                            , n = this.y;
                        return t = t.elements,
                            this.x = t[0] * e + t[3] * n + t[6],
                            this.y = t[1] * e + t[4] * n + t[7],
                            this
                    },
                    min: function(t) {
                        return this.x = Math.min(this.x, t.x),
                            this.y = Math.min(this.y, t.y),
                            this
                    },
                    max: function(t) {
                        return this.x = Math.max(this.x, t.x),
                            this.y = Math.max(this.y, t.y),
                            this
                    },
                    clamp: function(t, e) {
                        return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                            this.y = Math.max(t.y, Math.min(e.y, this.y)),
                            this
                    },
                    clampScalar: function(t, e) {
                        return this.x = Math.max(t, Math.min(e, this.x)),
                            this.y = Math.max(t, Math.min(e, this.y)),
                            this
                    },
                    clampLength: function(t, e) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                    },
                    floor: function() {
                        return this.x = Math.floor(this.x),
                            this.y = Math.floor(this.y),
                            this
                    },
                    ceil: function() {
                        return this.x = Math.ceil(this.x),
                            this.y = Math.ceil(this.y),
                            this
                    },
                    round: function() {
                        return this.x = Math.round(this.x),
                            this.y = Math.round(this.y),
                            this
                    },
                    roundToZero: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                            this
                    },
                    negate: function() {
                        return this.x = -this.x,
                            this.y = -this.y,
                            this
                    },
                    dot: function(t) {
                        return this.x * t.x + this.y * t.y
                    },
                    cross: function(t) {
                        return this.x * t.y - this.y * t.x
                    },
                    lengthSq: function() {
                        return this.x * this.x + this.y * this.y
                    },
                    length: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y)
                    },
                    manhattanLength: function() {
                        return Math.abs(this.x) + Math.abs(this.y)
                    },
                    normalize: function() {
                        return this.divideScalar(this.length() || 1)
                    },
                    angle: function() {
                        return Math.atan2(-this.y, -this.x) + Math.PI
                    },
                    distanceTo: function(t) {
                        return Math.sqrt(this.distanceToSquared(t))
                    },
                    distanceToSquared: function(t) {
                        var e = this.x - t.x;
                        return e * e + (t = this.y - t.y) * t
                    },
                    manhattanDistanceTo: function(t) {
                        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
                    },
                    setLength: function(t) {
                        return this.normalize().multiplyScalar(t)
                    },
                    lerp: function(t, e) {
                        return this.x += (t.x - this.x) * e,
                            this.y += (t.y - this.y) * e,
                            this
                    },
                    lerpVectors: function(t, e, n) {
                        return this.subVectors(e, t).multiplyScalar(n).add(t)
                    },
                    equals: function(t) {
                        return t.x === this.x && t.y === this.y
                    },
                    fromArray: function(t, e) {
                        return void 0 === e && (e = 0),
                            this.x = t[e],
                            this.y = t[e + 1],
                            this
                    },
                    toArray: function(t, e) {
                        return void 0 === t && (t = []),
                        void 0 === e && (e = 0),
                            t[e] = this.x,
                            t[e + 1] = this.y,
                            t
                    },
                    fromBufferAttribute: function(t, e) {
                        return this.x = t.getX(e),
                            this.y = t.getY(e),
                            this
                    },
                    rotateAround: function(t, e) {
                        var n = Math.cos(e);
                        e = Math.sin(e);
                        var i = this.x - t.x
                            , r = this.y - t.y;
                        return this.x = i * n - r * e + t.x,
                            this.y = i * e + r * n + t.y,
                            this
                    }
                }),
                Object.assign(i.prototype, {
                    isMatrix3: !0,
                    set: function(t, e, n, i, r, a, o, s, c) {
                        var u = this.elements;
                        return u[0] = t,
                            u[1] = i,
                            u[2] = o,
                            u[3] = e,
                            u[4] = r,
                            u[5] = s,
                            u[6] = n,
                            u[7] = a,
                            u[8] = c,
                            this
                    },
                    identity: function() {
                        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                            this
                    },
                    clone: function() {
                        return (new this.constructor).fromArray(this.elements)
                    },
                    copy: function(t) {
                        var e = this.elements;
                        return t = t.elements,
                            e[0] = t[0],
                            e[1] = t[1],
                            e[2] = t[2],
                            e[3] = t[3],
                            e[4] = t[4],
                            e[5] = t[5],
                            e[6] = t[6],
                            e[7] = t[7],
                            e[8] = t[8],
                            this
                    },
                    extractBasis: function(t, e, n) {
                        return t.setFromMatrix3Column(this, 0),
                            e.setFromMatrix3Column(this, 1),
                            n.setFromMatrix3Column(this, 2),
                            this
                    },
                    setFromMatrix4: function(t) {
                        return t = t.elements,
                            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
                            this
                    },
                    multiply: function(t) {
                        return this.multiplyMatrices(this, t)
                    },
                    premultiply: function(t) {
                        return this.multiplyMatrices(t, this)
                    },
                    multiplyMatrices: function(t, e) {
                        var n = t.elements
                            , i = e.elements;
                        e = this.elements,
                            t = n[0];
                        var r = n[3]
                            , a = n[6]
                            , o = n[1]
                            , s = n[4]
                            , c = n[7]
                            , u = n[2]
                            , l = n[5];
                        n = n[8];
                        var h = i[0]
                            , p = i[3]
                            , f = i[6]
                            , d = i[1]
                            , m = i[4]
                            , g = i[7]
                            , v = i[2]
                            , y = i[5];
                        return i = i[8],
                            e[0] = t * h + r * d + a * v,
                            e[3] = t * p + r * m + a * y,
                            e[6] = t * f + r * g + a * i,
                            e[1] = o * h + s * d + c * v,
                            e[4] = o * p + s * m + c * y,
                            e[7] = o * f + s * g + c * i,
                            e[2] = u * h + l * d + n * v,
                            e[5] = u * p + l * m + n * y,
                            e[8] = u * f + l * g + n * i,
                            this
                    },
                    multiplyScalar: function(t) {
                        var e = this.elements;
                        return e[0] *= t,
                            e[3] *= t,
                            e[6] *= t,
                            e[1] *= t,
                            e[4] *= t,
                            e[7] *= t,
                            e[2] *= t,
                            e[5] *= t,
                            e[8] *= t,
                            this
                    },
                    determinant: function() {
                        var t = this.elements
                            , e = t[0]
                            , n = t[1]
                            , i = t[2]
                            , r = t[3]
                            , a = t[4]
                            , o = t[5]
                            , s = t[6]
                            , c = t[7];
                        return e * a * (t = t[8]) - e * o * c - n * r * t + n * o * s + i * r * c - i * a * s
                    },
                    getInverse: function(t, e) {
                        var n = t.elements;
                        t = this.elements,
                            e = n[0];
                        var i = n[1]
                            , r = n[2]
                            , a = n[3]
                            , o = n[4]
                            , s = n[5]
                            , c = n[6]
                            , u = n[7]
                            , l = (n = n[8]) * o - s * u
                            , h = s * c - n * a
                            , p = u * a - o * c
                            , f = e * l + i * h + r * p;
                        return 0 === f ? this.set(0, 0, 0, 0, 0, 0, 0, 0, 0) : (f = 1 / f,
                            t[0] = l * f,
                            t[1] = (r * u - n * i) * f,
                            t[2] = (s * i - r * o) * f,
                            t[3] = h * f,
                            t[4] = (n * e - r * c) * f,
                            t[5] = (r * a - s * e) * f,
                            t[6] = p * f,
                            t[7] = (i * c - u * e) * f,
                            t[8] = (o * e - i * a) * f,
                            this)
                    },
                    transpose: function() {
                        var t = this.elements
                            , e = t[1];
                        return t[1] = t[3],
                            t[3] = e,
                            e = t[2],
                            t[2] = t[6],
                            t[6] = e,
                            e = t[5],
                            t[5] = t[7],
                            t[7] = e,
                            this
                    },
                    getNormalMatrix: function(t) {
                        return this.setFromMatrix4(t).getInverse(this).transpose()
                    },
                    transposeIntoArray: function(t) {
                        var e = this.elements;
                        return t[0] = e[0],
                            t[1] = e[3],
                            t[2] = e[6],
                            t[3] = e[1],
                            t[4] = e[4],
                            t[5] = e[7],
                            t[6] = e[2],
                            t[7] = e[5],
                            t[8] = e[8],
                            this
                    },
                    setUvTransform: function(t, e, n, i, r, a, o) {
                        var s = Math.cos(r);
                        r = Math.sin(r),
                            this.set(n * s, n * r, -n * (s * a + r * o) + a + t, -i * r, i * s, -i * (-r * a + s * o) + o + e, 0, 0, 1)
                    },
                    scale: function(t, e) {
                        var n = this.elements;
                        return n[0] *= t,
                            n[3] *= t,
                            n[6] *= t,
                            n[1] *= e,
                            n[4] *= e,
                            n[7] *= e,
                            this
                    },
                    rotate: function(t) {
                        var e = Math.cos(t);
                        t = Math.sin(t);
                        var n = this.elements
                            , i = n[0]
                            , r = n[3]
                            , a = n[6]
                            , o = n[1]
                            , s = n[4]
                            , c = n[7];
                        return n[0] = e * i + t * o,
                            n[3] = e * r + t * s,
                            n[6] = e * a + t * c,
                            n[1] = -t * i + e * o,
                            n[4] = -t * r + e * s,
                            n[7] = -t * a + e * c,
                            this
                    },
                    translate: function(t, e) {
                        var n = this.elements;
                        return n[0] += t * n[2],
                            n[3] += t * n[5],
                            n[6] += t * n[8],
                            n[1] += e * n[2],
                            n[4] += e * n[5],
                            n[7] += e * n[8],
                            this
                    },
                    equals: function(t) {
                        var e = this.elements;
                        t = t.elements;
                        for (var n = 0; n < 9; n++)
                            if (e[n] !== t[n])
                                return !1;
                        return !0
                    },
                    fromArray: function(t, e) {
                        void 0 === e && (e = 0);
                        for (var n = 0; n < 9; n++)
                            this.elements[n] = t[n + e];
                        return this
                    },
                    toArray: function(t, e) {
                        void 0 === t && (t = []),
                        void 0 === e && (e = 0);
                        var n = this.elements;
                        return t[e] = n[0],
                            t[e + 1] = n[1],
                            t[e + 2] = n[2],
                            t[e + 3] = n[3],
                            t[e + 4] = n[4],
                            t[e + 5] = n[5],
                            t[e + 6] = n[6],
                            t[e + 7] = n[7],
                            t[e + 8] = n[8],
                            t
                    }
                });
            var Oa, Ia = {
                getDataURL: function(t) {
                    if ("undefined" == typeof HTMLCanvasElement)
                        return t.src;
                    if (!(t instanceof HTMLCanvasElement)) {
                        void 0 === Oa && (Oa = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                            Oa.width = t.width,
                            Oa.height = t.height;
                        var e = Oa.getContext("2d");
                        t instanceof ImageData ? e.putImageData(t, 0, 0) : e.drawImage(t, 0, 0, t.width, t.height),
                            t = Oa
                    }
                    return 2048 < t.width || 2048 < t.height ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
                }
            }, Na = 0;
            r.DEFAULT_IMAGE = void 0,
                r.DEFAULT_MAPPING = 300,
                r.prototype = Object.assign(Object.create(e.prototype), {
                    constructor: r,
                    isTexture: !0,
                    updateMatrix: function() {
                        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.name = t.name,
                            this.image = t.image,
                            this.mipmaps = t.mipmaps.slice(0),
                            this.mapping = t.mapping,
                            this.wrapS = t.wrapS,
                            this.wrapT = t.wrapT,
                            this.magFilter = t.magFilter,
                            this.minFilter = t.minFilter,
                            this.anisotropy = t.anisotropy,
                            this.format = t.format,
                            this.internalFormat = t.internalFormat,
                            this.type = t.type,
                            this.offset.copy(t.offset),
                            this.repeat.copy(t.repeat),
                            this.center.copy(t.center),
                            this.rotation = t.rotation,
                            this.matrixAutoUpdate = t.matrixAutoUpdate,
                            this.matrix.copy(t.matrix),
                            this.generateMipmaps = t.generateMipmaps,
                            this.premultiplyAlpha = t.premultiplyAlpha,
                            this.flipY = t.flipY,
                            this.unpackAlignment = t.unpackAlignment,
                            this.encoding = t.encoding,
                            this
                    },
                    toJSON: function(t) {
                        var e = void 0 === t || "string" == typeof t;
                        if (!e && void 0 !== t.textures[this.uuid])
                            return t.textures[this.uuid];
                        var n = {
                            metadata: {
                                version: 4.5,
                                type: "Texture",
                                generator: "Texture.toJSON"
                            },
                            uuid: this.uuid,
                            name: this.name,
                            mapping: this.mapping,
                            repeat: [this.repeat.x, this.repeat.y],
                            offset: [this.offset.x, this.offset.y],
                            center: [this.center.x, this.center.y],
                            rotation: this.rotation,
                            wrap: [this.wrapS, this.wrapT],
                            format: this.format,
                            type: this.type,
                            encoding: this.encoding,
                            minFilter: this.minFilter,
                            magFilter: this.magFilter,
                            anisotropy: this.anisotropy,
                            flipY: this.flipY,
                            premultiplyAlpha: this.premultiplyAlpha,
                            unpackAlignment: this.unpackAlignment
                        };
                        if (void 0 !== this.image) {
                            var i = this.image;
                            if (void 0 === i.uuid && (i.uuid = Ca.generateUUID()),
                            !e && void 0 === t.images[i.uuid]) {
                                if (Array.isArray(i))
                                    for (var r = [], a = 0, o = i.length; a < o; a++)
                                        r.push(Ia.getDataURL(i[a]));
                                else
                                    r = Ia.getDataURL(i);
                                t.images[i.uuid] = {
                                    uuid: i.uuid,
                                    url: r
                                }
                            }
                            n.image = i.uuid
                        }
                        return e || (t.textures[this.uuid] = n),
                            n
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    },
                    transformUv: function(t) {
                        if (300 !== this.mapping)
                            return t;
                        if (t.applyMatrix3(this.matrix),
                        t.x < 0 || 1 < t.x)
                            switch (this.wrapS) {
                                case 1e3:
                                    t.x -= Math.floor(t.x);
                                    break;
                                case 1001:
                                    t.x = t.x < 0 ? 0 : 1;
                                    break;
                                case 1002:
                                    t.x = 1 === Math.abs(Math.floor(t.x) % 2) ? Math.ceil(t.x) - t.x : t.x - Math.floor(t.x)
                            }
                        if (t.y < 0 || 1 < t.y)
                            switch (this.wrapT) {
                                case 1e3:
                                    t.y -= Math.floor(t.y);
                                    break;
                                case 1001:
                                    t.y = t.y < 0 ? 0 : 1;
                                    break;
                                case 1002:
                                    t.y = 1 === Math.abs(Math.floor(t.y) % 2) ? Math.ceil(t.y) - t.y : t.y - Math.floor(t.y)
                            }
                        return this.flipY && (t.y = 1 - t.y),
                            t
                    }
                }),
                Object.defineProperty(r.prototype, "needsUpdate", {
                    set: function(t) {
                        !0 === t && this.version++
                    }
                }),
                Object.defineProperties(a.prototype, {
                    width: {
                        get: function() {
                            return this.z
                        },
                        set: function(t) {
                            this.z = t
                        }
                    },
                    height: {
                        get: function() {
                            return this.w
                        },
                        set: function(t) {
                            this.w = t
                        }
                    }
                }),
                Object.assign(a.prototype, {
                    isVector4: !0,
                    set: function(t, e, n, i) {
                        return this.x = t,
                            this.y = e,
                            this.z = n,
                            this.w = i,
                            this
                    },
                    setScalar: function(t) {
                        return this.w = this.z = this.y = this.x = t,
                            this
                    },
                    setX: function(t) {
                        return this.x = t,
                            this
                    },
                    setY: function(t) {
                        return this.y = t,
                            this
                    },
                    setZ: function(t) {
                        return this.z = t,
                            this
                    },
                    setW: function(t) {
                        return this.w = t,
                            this
                    },
                    setComponent: function(t, e) {
                        switch (t) {
                            case 0:
                                this.x = e;
                                break;
                            case 1:
                                this.y = e;
                                break;
                            case 2:
                                this.z = e;
                                break;
                            case 3:
                                this.w = e;
                                break;
                            default:
                                throw Error("index is out of range: " + t)
                        }
                        return this
                    },
                    getComponent: function(t) {
                        switch (t) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            case 3:
                                return this.w;
                            default:
                                throw Error("index is out of range: " + t)
                        }
                    },
                    clone: function() {
                        return new this.constructor(this.x,this.y,this.z,this.w)
                    },
                    copy: function(t) {
                        return this.x = t.x,
                            this.y = t.y,
                            this.z = t.z,
                            this.w = void 0 !== t.w ? t.w : 1,
                            this
                    },
                    add: function(t, e) {
                        return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                            this.y += t.y,
                            this.z += t.z,
                            this.w += t.w,
                            this)
                    },
                    addScalar: function(t) {
                        return this.x += t,
                            this.y += t,
                            this.z += t,
                            this.w += t,
                            this
                    },
                    addVectors: function(t, e) {
                        return this.x = t.x + e.x,
                            this.y = t.y + e.y,
                            this.z = t.z + e.z,
                            this.w = t.w + e.w,
                            this
                    },
                    addScaledVector: function(t, e) {
                        return this.x += t.x * e,
                            this.y += t.y * e,
                            this.z += t.z * e,
                            this.w += t.w * e,
                            this
                    },
                    sub: function(t, e) {
                        return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                            this.y -= t.y,
                            this.z -= t.z,
                            this.w -= t.w,
                            this)
                    },
                    subScalar: function(t) {
                        return this.x -= t,
                            this.y -= t,
                            this.z -= t,
                            this.w -= t,
                            this
                    },
                    subVectors: function(t, e) {
                        return this.x = t.x - e.x,
                            this.y = t.y - e.y,
                            this.z = t.z - e.z,
                            this.w = t.w - e.w,
                            this
                    },
                    multiplyScalar: function(t) {
                        return this.x *= t,
                            this.y *= t,
                            this.z *= t,
                            this.w *= t,
                            this
                    },
                    applyMatrix4: function(t) {
                        var e = this.x
                            , n = this.y
                            , i = this.z
                            , r = this.w;
                        return t = t.elements,
                            this.x = t[0] * e + t[4] * n + t[8] * i + t[12] * r,
                            this.y = t[1] * e + t[5] * n + t[9] * i + t[13] * r,
                            this.z = t[2] * e + t[6] * n + t[10] * i + t[14] * r,
                            this.w = t[3] * e + t[7] * n + t[11] * i + t[15] * r,
                            this
                    },
                    divideScalar: function(t) {
                        return this.multiplyScalar(1 / t)
                    },
                    setAxisAngleFromQuaternion: function(t) {
                        this.w = 2 * Math.acos(t.w);
                        var e = Math.sqrt(1 - t.w * t.w);
                        return e < 1e-4 ? (this.x = 1,
                            this.z = this.y = 0) : (this.x = t.x / e,
                            this.y = t.y / e,
                            this.z = t.z / e),
                            this
                    },
                    setAxisAngleFromRotationMatrix: function(t) {
                        var e = (t = t.elements)[0]
                            , n = t[4]
                            , i = t[8]
                            , r = t[1]
                            , a = t[5]
                            , o = t[9]
                            , s = t[2]
                            , c = t[6]
                            , u = t[10];
                        return Math.abs(n - r) < .01 && Math.abs(i - s) < .01 && Math.abs(o - c) < .01 ? Math.abs(n + r) < .1 && Math.abs(i + s) < .1 && Math.abs(o + c) < .1 && Math.abs(e + a + u - 3) < .1 ? this.set(1, 0, 0, 0) : (t = Math.PI,
                            u = (u + 1) / 2,
                            n = (n + r) / 4,
                            i = (i + s) / 4,
                            o = (o + c) / 4,
                            (a = (a + 1) / 2) < (e = (e + 1) / 2) && u < e ? n = e < .01 ? (c = 0,
                                s = .707106781) : (s = n / (c = Math.sqrt(e)),
                            i / c) : u < a ? n = a < .01 ? (s = 0,
                                c = .707106781) : (c = n / (s = Math.sqrt(a)),
                            o / s) : u < .01 ? (s = c = .707106781,
                                n = 0) : (c = i / (n = Math.sqrt(u)),
                                s = o / n),
                            this.set(c, s, n, t)) : (t = Math.sqrt((c - o) * (c - o) + (i - s) * (i - s) + (r - n) * (r - n)),
                        Math.abs(t) < .001 && (t = 1),
                            this.x = (c - o) / t,
                            this.y = (i - s) / t,
                            this.z = (r - n) / t,
                            this.w = Math.acos((e + a + u - 1) / 2)),
                            this
                    },
                    min: function(t) {
                        return this.x = Math.min(this.x, t.x),
                            this.y = Math.min(this.y, t.y),
                            this.z = Math.min(this.z, t.z),
                            this.w = Math.min(this.w, t.w),
                            this
                    },
                    max: function(t) {
                        return this.x = Math.max(this.x, t.x),
                            this.y = Math.max(this.y, t.y),
                            this.z = Math.max(this.z, t.z),
                            this.w = Math.max(this.w, t.w),
                            this
                    },
                    clamp: function(t, e) {
                        return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                            this.y = Math.max(t.y, Math.min(e.y, this.y)),
                            this.z = Math.max(t.z, Math.min(e.z, this.z)),
                            this.w = Math.max(t.w, Math.min(e.w, this.w)),
                            this
                    },
                    clampScalar: function(t, e) {
                        return this.x = Math.max(t, Math.min(e, this.x)),
                            this.y = Math.max(t, Math.min(e, this.y)),
                            this.z = Math.max(t, Math.min(e, this.z)),
                            this.w = Math.max(t, Math.min(e, this.w)),
                            this
                    },
                    clampLength: function(t, e) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                    },
                    floor: function() {
                        return this.x = Math.floor(this.x),
                            this.y = Math.floor(this.y),
                            this.z = Math.floor(this.z),
                            this.w = Math.floor(this.w),
                            this
                    },
                    ceil: function() {
                        return this.x = Math.ceil(this.x),
                            this.y = Math.ceil(this.y),
                            this.z = Math.ceil(this.z),
                            this.w = Math.ceil(this.w),
                            this
                    },
                    round: function() {
                        return this.x = Math.round(this.x),
                            this.y = Math.round(this.y),
                            this.z = Math.round(this.z),
                            this.w = Math.round(this.w),
                            this
                    },
                    roundToZero: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                            this
                    },
                    negate: function() {
                        return this.x = -this.x,
                            this.y = -this.y,
                            this.z = -this.z,
                            this.w = -this.w,
                            this
                    },
                    dot: function(t) {
                        return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
                    },
                    lengthSq: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                    },
                    length: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                    },
                    manhattanLength: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                    },
                    normalize: function() {
                        return this.divideScalar(this.length() || 1)
                    },
                    setLength: function(t) {
                        return this.normalize().multiplyScalar(t)
                    },
                    lerp: function(t, e) {
                        return this.x += (t.x - this.x) * e,
                            this.y += (t.y - this.y) * e,
                            this.z += (t.z - this.z) * e,
                            this.w += (t.w - this.w) * e,
                            this
                    },
                    lerpVectors: function(t, e, n) {
                        return this.subVectors(e, t).multiplyScalar(n).add(t)
                    },
                    equals: function(t) {
                        return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
                    },
                    fromArray: function(t, e) {
                        return void 0 === e && (e = 0),
                            this.x = t[e],
                            this.y = t[e + 1],
                            this.z = t[e + 2],
                            this.w = t[e + 3],
                            this
                    },
                    toArray: function(t, e) {
                        return void 0 === t && (t = []),
                        void 0 === e && (e = 0),
                            t[e] = this.x,
                            t[e + 1] = this.y,
                            t[e + 2] = this.z,
                            t[e + 3] = this.w,
                            t
                    },
                    fromBufferAttribute: function(t, e) {
                        return this.x = t.getX(e),
                            this.y = t.getY(e),
                            this.z = t.getZ(e),
                            this.w = t.getW(e),
                            this
                    }
                }),
                o.prototype = Object.assign(Object.create(e.prototype), {
                    constructor: o,
                    isWebGLRenderTarget: !0,
                    setSize: function(t, e) {
                        this.width === t && this.height === e || (this.width = t,
                            this.height = e,
                            this.texture.image.width = t,
                            this.texture.image.height = e,
                            this.dispose()),
                            this.viewport.set(0, 0, t, e),
                            this.scissor.set(0, 0, t, e)
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.width = t.width,
                            this.height = t.height,
                            this.viewport.copy(t.viewport),
                            this.texture = t.texture.clone(),
                            this.depthBuffer = t.depthBuffer,
                            this.stencilBuffer = t.stencilBuffer,
                            this.depthTexture = t.depthTexture,
                            this
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }),
                c.prototype = Object.assign(Object.create(o.prototype), {
                    constructor: c,
                    isWebGLMultisampleRenderTarget: !0,
                    copy: function(t) {
                        return o.prototype.copy.call(this, t),
                            this.samples = t.samples,
                            this
                    }
                }),
                Object.assign(u, {
                    slerp: function(t, e, n, i) {
                        return n.copy(t).slerp(e, i)
                    },
                    slerpFlat: function(t, e, n, i, r, a, o) {
                        var s = n[i + 0]
                            , c = n[i + 1]
                            , u = n[i + 2];
                        n = n[i + 3],
                            i = r[a + 0];
                        var l = r[a + 1]
                            , h = r[a + 2];
                        if (n !== (r = r[a + 3]) || s !== i || c !== l || u !== h) {
                            a = 1 - o;
                            var p = s * i + c * l + u * h + n * r
                                , f = 0 <= p ? 1 : -1
                                , d = 1 - p * p;
                            d > Number.EPSILON && (d = Math.sqrt(d),
                                p = Math.atan2(d, p * f),
                                a = Math.sin(a * p) / d,
                                o = Math.sin(o * p) / d),
                                s = s * a + i * (f *= o),
                                c = c * a + l * f,
                                u = u * a + h * f,
                                n = n * a + r * f,
                            a === 1 - o && (s *= o = 1 / Math.sqrt(s * s + c * c + u * u + n * n),
                                c *= o,
                                u *= o,
                                n *= o)
                        }
                        t[e] = s,
                            t[e + 1] = c,
                            t[e + 2] = u,
                            t[e + 3] = n
                    }
                }),
                Object.defineProperties(u.prototype, {
                    x: {
                        get: function() {
                            return this._x
                        },
                        set: function(t) {
                            this._x = t,
                                this._onChangeCallback()
                        }
                    },
                    y: {
                        get: function() {
                            return this._y
                        },
                        set: function(t) {
                            this._y = t,
                                this._onChangeCallback()
                        }
                    },
                    z: {
                        get: function() {
                            return this._z
                        },
                        set: function(t) {
                            this._z = t,
                                this._onChangeCallback()
                        }
                    },
                    w: {
                        get: function() {
                            return this._w
                        },
                        set: function(t) {
                            this._w = t,
                                this._onChangeCallback()
                        }
                    }
                }),
                Object.assign(u.prototype, {
                    isQuaternion: !0,
                    set: function(t, e, n, i) {
                        return this._x = t,
                            this._y = e,
                            this._z = n,
                            this._w = i,
                            this._onChangeCallback(),
                            this
                    },
                    clone: function() {
                        return new this.constructor(this._x,this._y,this._z,this._w)
                    },
                    copy: function(t) {
                        return this._x = t.x,
                            this._y = t.y,
                            this._z = t.z,
                            this._w = t.w,
                            this._onChangeCallback(),
                            this
                    },
                    setFromEuler: function(t, e) {
                        if (!t || !t.isEuler)
                            throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                        var n = t._x
                            , i = t._y
                            , r = t._z;
                        t = t.order;
                        var a = Math.cos
                            , o = Math.sin
                            , s = a(n / 2)
                            , c = a(i / 2);
                        return a = a(r / 2),
                            n = o(n / 2),
                            i = o(i / 2),
                            r = o(r / 2),
                            "XYZ" === t ? (this._x = n * c * a + s * i * r,
                                this._y = s * i * a - n * c * r,
                                this._z = s * c * r + n * i * a,
                                this._w = s * c * a - n * i * r) : "YXZ" === t ? (this._x = n * c * a + s * i * r,
                                this._y = s * i * a - n * c * r,
                                this._z = s * c * r - n * i * a,
                                this._w = s * c * a + n * i * r) : "ZXY" === t ? (this._x = n * c * a - s * i * r,
                                this._y = s * i * a + n * c * r,
                                this._z = s * c * r + n * i * a,
                                this._w = s * c * a - n * i * r) : "ZYX" === t ? (this._x = n * c * a - s * i * r,
                                this._y = s * i * a + n * c * r,
                                this._z = s * c * r - n * i * a,
                                this._w = s * c * a + n * i * r) : "YZX" === t ? (this._x = n * c * a + s * i * r,
                                this._y = s * i * a + n * c * r,
                                this._z = s * c * r - n * i * a,
                                this._w = s * c * a - n * i * r) : "XZY" === t && (this._x = n * c * a - s * i * r,
                                this._y = s * i * a - n * c * r,
                                this._z = s * c * r + n * i * a,
                                this._w = s * c * a + n * i * r),
                        !1 !== e && this._onChangeCallback(),
                            this
                    },
                    setFromAxisAngle: function(t, e) {
                        e /= 2;
                        var n = Math.sin(e);
                        return this._x = t.x * n,
                            this._y = t.y * n,
                            this._z = t.z * n,
                            this._w = Math.cos(e),
                            this._onChangeCallback(),
                            this
                    },
                    setFromRotationMatrix: function(t) {
                        var e = t.elements
                            , n = e[0];
                        t = e[4];
                        var i = e[8]
                            , r = e[1]
                            , a = e[5]
                            , o = e[9]
                            , s = e[2]
                            , c = e[6]
                            , u = n + a + (e = e[10]);
                        return 0 < u ? (n = .5 / Math.sqrt(u + 1),
                            this._w = .25 / n,
                            this._x = (c - o) * n,
                            this._y = (i - s) * n,
                            this._z = (r - t) * n) : a < n && e < n ? (n = 2 * Math.sqrt(1 + n - a - e),
                            this._w = (c - o) / n,
                            this._x = .25 * n,
                            this._y = (t + r) / n,
                            this._z = (i + s) / n) : e < a ? (n = 2 * Math.sqrt(1 + a - n - e),
                            this._w = (i - s) / n,
                            this._x = (t + r) / n,
                            this._y = .25 * n,
                            this._z = (o + c) / n) : (n = 2 * Math.sqrt(1 + e - n - a),
                            this._w = (r - t) / n,
                            this._x = (i + s) / n,
                            this._y = (o + c) / n,
                            this._z = .25 * n),
                            this._onChangeCallback(),
                            this
                    },
                    setFromUnitVectors: function(t, e) {
                        var n = t.dot(e) + 1;
                        return n < 1e-6 ? (n = 0,
                            Math.abs(t.x) > Math.abs(t.z) ? (this._x = -t.y,
                                this._y = t.x,
                                this._z = 0) : (this._x = 0,
                                this._y = -t.z,
                                this._z = t.y)) : (this._x = t.y * e.z - t.z * e.y,
                            this._y = t.z * e.x - t.x * e.z,
                            this._z = t.x * e.y - t.y * e.x),
                            this._w = n,
                            this.normalize()
                    },
                    angleTo: function(t) {
                        return 2 * Math.acos(Math.abs(Ca.clamp(this.dot(t), -1, 1)))
                    },
                    rotateTowards: function(t, e) {
                        var n = this.angleTo(t);
                        return 0 === n || this.slerp(t, Math.min(1, e / n)),
                            this
                    },
                    inverse: function() {
                        return this.conjugate()
                    },
                    conjugate: function() {
                        return this._x *= -1,
                            this._y *= -1,
                            this._z *= -1,
                            this._onChangeCallback(),
                            this
                    },
                    dot: function(t) {
                        return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
                    },
                    lengthSq: function() {
                        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                    },
                    length: function() {
                        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                    },
                    normalize: function() {
                        var t = this.length();
                        return 0 === t ? (this._z = this._y = this._x = 0,
                            this._w = 1) : (t = 1 / t,
                            this._x *= t,
                            this._y *= t,
                            this._z *= t,
                            this._w *= t),
                            this._onChangeCallback(),
                            this
                    },
                    multiply: function(t, e) {
                        return void 0 !== e ? this.multiplyQuaternions(t, e) : this.multiplyQuaternions(this, t)
                    },
                    premultiply: function(t) {
                        return this.multiplyQuaternions(t, this)
                    },
                    multiplyQuaternions: function(t, e) {
                        var n = t._x
                            , i = t._y
                            , r = t._z;
                        t = t._w;
                        var a = e._x
                            , o = e._y
                            , s = e._z;
                        return e = e._w,
                            this._x = n * e + t * a + i * s - r * o,
                            this._y = i * e + t * o + r * a - n * s,
                            this._z = r * e + t * s + n * o - i * a,
                            this._w = t * e - n * a - i * o - r * s,
                            this._onChangeCallback(),
                            this
                    },
                    slerp: function(t, e) {
                        if (0 === e)
                            return this;
                        if (1 === e)
                            return this.copy(t);
                        var n = this._x
                            , i = this._y
                            , r = this._z
                            , a = this._w
                            , o = a * t._w + n * t._x + i * t._y + r * t._z;
                        if (o < 0 ? (this._w = -t._w,
                            this._x = -t._x,
                            this._y = -t._y,
                            this._z = -t._z,
                            o = -o) : this.copy(t),
                        1 <= o)
                            return this._w = a,
                                this._x = n,
                                this._y = i,
                                this._z = r,
                                this;
                        if ((t = 1 - o * o) <= Number.EPSILON)
                            return o = 1 - e,
                                this._w = o * a + e * this._w,
                                this._x = o * n + e * this._x,
                                this._y = o * i + e * this._y,
                                this._z = o * r + e * this._z,
                                this.normalize(),
                                this._onChangeCallback(),
                                this;
                        t = Math.sqrt(t);
                        var s = Math.atan2(t, o);
                        return o = Math.sin((1 - e) * s) / t,
                            e = Math.sin(e * s) / t,
                            this._w = a * o + this._w * e,
                            this._x = n * o + this._x * e,
                            this._y = i * o + this._y * e,
                            this._z = r * o + this._z * e,
                            this._onChangeCallback(),
                            this
                    },
                    equals: function(t) {
                        return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
                    },
                    fromArray: function(t, e) {
                        return void 0 === e && (e = 0),
                            this._x = t[e],
                            this._y = t[e + 1],
                            this._z = t[e + 2],
                            this._w = t[e + 3],
                            this._onChangeCallback(),
                            this
                    },
                    toArray: function(t, e) {
                        return void 0 === t && (t = []),
                        void 0 === e && (e = 0),
                            t[e] = this._x,
                            t[e + 1] = this._y,
                            t[e + 2] = this._z,
                            t[e + 3] = this._w,
                            t
                    },
                    fromBufferAttribute: function(t, e) {
                        return this._x = t.getX(e),
                            this._y = t.getY(e),
                            this._z = t.getZ(e),
                            this._w = t.getW(e),
                            this
                    },
                    _onChange: function(t) {
                        return this._onChangeCallback = t,
                            this
                    },
                    _onChangeCallback: function() {}
                });
            var Da = new l
                , Ra = new u;
            Object.assign(l.prototype, {
                isVector3: !0,
                set: function(t, e, n) {
                    return this.x = t,
                        this.y = e,
                        this.z = n,
                        this
                },
                setScalar: function(t) {
                    return this.z = this.y = this.x = t,
                        this
                },
                setX: function(t) {
                    return this.x = t,
                        this
                },
                setY: function(t) {
                    return this.y = t,
                        this
                },
                setZ: function(t) {
                    return this.z = t,
                        this
                },
                setComponent: function(t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        case 2:
                            this.z = e;
                            break;
                        default:
                            throw Error("index is out of range: " + t)
                    }
                    return this
                },
                getComponent: function(t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        default:
                            throw Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z)
                },
                copy: function(t) {
                    return this.x = t.x,
                        this.y = t.y,
                        this.z = t.z,
                        this
                },
                add: function(t, e) {
                    return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                        this.y += t.y,
                        this.z += t.z,
                        this)
                },
                addScalar: function(t) {
                    return this.x += t,
                        this.y += t,
                        this.z += t,
                        this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x,
                        this.y = t.y + e.y,
                        this.z = t.z + e.z,
                        this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e,
                        this.y += t.y * e,
                        this.z += t.z * e,
                        this
                },
                sub: function(t, e) {
                    return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                        this.y -= t.y,
                        this.z -= t.z,
                        this)
                },
                subScalar: function(t) {
                    return this.x -= t,
                        this.y -= t,
                        this.z -= t,
                        this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x,
                        this.y = t.y - e.y,
                        this.z = t.z - e.z,
                        this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? this.multiplyVectors(t, e) : (this.x *= t.x,
                        this.y *= t.y,
                        this.z *= t.z,
                        this)
                },
                multiplyScalar: function(t) {
                    return this.x *= t,
                        this.y *= t,
                        this.z *= t,
                        this
                },
                multiplyVectors: function(t, e) {
                    return this.x = t.x * e.x,
                        this.y = t.y * e.y,
                        this.z = t.z * e.z,
                        this
                },
                applyEuler: function(t) {
                    return t && t.isEuler,
                        this.applyQuaternion(Ra.setFromEuler(t))
                },
                applyAxisAngle: function(t, e) {
                    return this.applyQuaternion(Ra.setFromAxisAngle(t, e))
                },
                applyMatrix3: function(t) {
                    var e = this.x
                        , n = this.y
                        , i = this.z;
                    return t = t.elements,
                        this.x = t[0] * e + t[3] * n + t[6] * i,
                        this.y = t[1] * e + t[4] * n + t[7] * i,
                        this.z = t[2] * e + t[5] * n + t[8] * i,
                        this
                },
                applyNormalMatrix: function(t) {
                    return this.applyMatrix3(t).normalize()
                },
                applyMatrix4: function(t) {
                    var e = this.x
                        , n = this.y
                        , i = this.z
                        , r = 1 / ((t = t.elements)[3] * e + t[7] * n + t[11] * i + t[15]);
                    return this.x = (t[0] * e + t[4] * n + t[8] * i + t[12]) * r,
                        this.y = (t[1] * e + t[5] * n + t[9] * i + t[13]) * r,
                        this.z = (t[2] * e + t[6] * n + t[10] * i + t[14]) * r,
                        this
                },
                applyQuaternion: function(t) {
                    var e = this.x
                        , n = this.y
                        , i = this.z
                        , r = t.x
                        , a = t.y
                        , o = t.z
                        , s = (t = t.w) * e + a * i - o * n
                        , c = t * n + o * e - r * i
                        , u = t * i + r * n - a * e;
                    return e = -r * e - a * n - o * i,
                        this.x = s * t + e * -r + c * -o - u * -a,
                        this.y = c * t + e * -a + u * -r - s * -o,
                        this.z = u * t + e * -o + s * -a - c * -r,
                        this
                },
                project: function(t) {
                    return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)
                },
                unproject: function(t) {
                    return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)
                },
                transformDirection: function(t) {
                    var e = this.x
                        , n = this.y
                        , i = this.z;
                    return t = t.elements,
                        this.x = t[0] * e + t[4] * n + t[8] * i,
                        this.y = t[1] * e + t[5] * n + t[9] * i,
                        this.z = t[2] * e + t[6] * n + t[10] * i,
                        this.normalize()
                },
                divide: function(t) {
                    return this.x /= t.x,
                        this.y /= t.y,
                        this.z /= t.z,
                        this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x),
                        this.y = Math.min(this.y, t.y),
                        this.z = Math.min(this.z, t.z),
                        this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x),
                        this.y = Math.max(this.y, t.y),
                        this.z = Math.max(this.z, t.z),
                        this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                        this.y = Math.max(t.y, Math.min(e.y, this.y)),
                        this.z = Math.max(t.z, Math.min(e.z, this.z)),
                        this
                },
                clampScalar: function(t, e) {
                    return this.x = Math.max(t, Math.min(e, this.x)),
                        this.y = Math.max(t, Math.min(e, this.y)),
                        this.z = Math.max(t, Math.min(e, this.z)),
                        this
                },
                clampLength: function(t, e) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                        this.y = Math.floor(this.y),
                        this.z = Math.floor(this.z),
                        this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                        this.y = Math.ceil(this.y),
                        this.z = Math.ceil(this.z),
                        this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                        this.y = Math.round(this.y),
                        this.z = Math.round(this.z),
                        this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                        this
                },
                negate: function() {
                    return this.x = -this.x,
                        this.y = -this.y,
                        this.z = -this.z,
                        this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                manhattanLength: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function(t) {
                    return this.normalize().multiplyScalar(t)
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e,
                        this.y += (t.y - this.y) * e,
                        this.z += (t.z - this.z) * e,
                        this
                },
                lerpVectors: function(t, e, n) {
                    return this.subVectors(e, t).multiplyScalar(n).add(t)
                },
                cross: function(t, e) {
                    return void 0 !== e ? this.crossVectors(t, e) : this.crossVectors(this, t)
                },
                crossVectors: function(t, e) {
                    var n = t.x
                        , i = t.y;
                    t = t.z;
                    var r = e.x
                        , a = e.y;
                    return e = e.z,
                        this.x = i * e - t * a,
                        this.y = t * r - n * e,
                        this.z = n * a - i * r,
                        this
                },
                projectOnVector: function(t) {
                    var e = t.lengthSq();
                    return 0 === e ? this.set(0, 0, 0) : (e = t.dot(this) / e,
                        this.copy(t).multiplyScalar(e))
                },
                projectOnPlane: function(t) {
                    return Da.copy(this).projectOnVector(t),
                        this.sub(Da)
                },
                reflect: function(t) {
                    return this.sub(Da.copy(t).multiplyScalar(2 * this.dot(t)))
                },
                angleTo: function(t) {
                    var e = Math.sqrt(this.lengthSq() * t.lengthSq());
                    return 0 === e ? Math.PI / 2 : (t = this.dot(t) / e,
                        Math.acos(Ca.clamp(t, -1, 1)))
                },
                distanceTo: function(t) {
                    return Math.sqrt(this.distanceToSquared(t))
                },
                distanceToSquared: function(t) {
                    var e = this.x - t.x
                        , n = this.y - t.y;
                    return e * e + n * n + (t = this.z - t.z) * t
                },
                manhattanDistanceTo: function(t) {
                    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
                },
                setFromSpherical: function(t) {
                    return this.setFromSphericalCoords(t.radius, t.phi, t.theta)
                },
                setFromSphericalCoords: function(t, e, n) {
                    var i = Math.sin(e) * t;
                    return this.x = i * Math.sin(n),
                        this.y = Math.cos(e) * t,
                        this.z = i * Math.cos(n),
                        this
                },
                setFromCylindrical: function(t) {
                    return this.setFromCylindricalCoords(t.radius, t.theta, t.y)
                },
                setFromCylindricalCoords: function(t, e, n) {
                    return this.x = t * Math.sin(e),
                        this.y = n,
                        this.z = t * Math.cos(e),
                        this
                },
                setFromMatrixPosition: function(t) {
                    return t = t.elements,
                        this.x = t[12],
                        this.y = t[13],
                        this.z = t[14],
                        this
                },
                setFromMatrixScale: function(t) {
                    var e = this.setFromMatrixColumn(t, 0).length()
                        , n = this.setFromMatrixColumn(t, 1).length();
                    return t = this.setFromMatrixColumn(t, 2).length(),
                        this.x = e,
                        this.y = n,
                        this.z = t,
                        this
                },
                setFromMatrixColumn: function(t, e) {
                    return this.fromArray(t.elements, 4 * e)
                },
                setFromMatrix3Column: function(t, e) {
                    return this.fromArray(t.elements, 3 * e)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                        this.x = t[e],
                        this.y = t[e + 1],
                        this.z = t[e + 2],
                        this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                        t[e] = this.x,
                        t[e + 1] = this.y,
                        t[e + 2] = this.z,
                        t
                },
                fromBufferAttribute: function(t, e) {
                    return this.x = t.getX(e),
                        this.y = t.getY(e),
                        this.z = t.getZ(e),
                        this
                }
            });
            var za = new l
                , Fa = new h
                , Ba = new l(0,0,0)
                , Ua = new l(1,1,1)
                , Ga = new l
                , ka = new l
                , ja = new l;
            Object.assign(h.prototype, {
                isMatrix4: !0,
                set: function(t, e, n, i, r, a, o, s, c, u, l, h, p, f, d, m) {
                    var g = this.elements;
                    return g[0] = t,
                        g[4] = e,
                        g[8] = n,
                        g[12] = i,
                        g[1] = r,
                        g[5] = a,
                        g[9] = o,
                        g[13] = s,
                        g[2] = c,
                        g[6] = u,
                        g[10] = l,
                        g[14] = h,
                        g[3] = p,
                        g[7] = f,
                        g[11] = d,
                        g[15] = m,
                        this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                        this
                },
                clone: function() {
                    return (new h).fromArray(this.elements)
                },
                copy: function(t) {
                    var e = this.elements;
                    return t = t.elements,
                        e[0] = t[0],
                        e[1] = t[1],
                        e[2] = t[2],
                        e[3] = t[3],
                        e[4] = t[4],
                        e[5] = t[5],
                        e[6] = t[6],
                        e[7] = t[7],
                        e[8] = t[8],
                        e[9] = t[9],
                        e[10] = t[10],
                        e[11] = t[11],
                        e[12] = t[12],
                        e[13] = t[13],
                        e[14] = t[14],
                        e[15] = t[15],
                        this
                },
                copyPosition: function(t) {
                    var e = this.elements;
                    return t = t.elements,
                        e[12] = t[12],
                        e[13] = t[13],
                        e[14] = t[14],
                        this
                },
                extractBasis: function(t, e, n) {
                    return t.setFromMatrixColumn(this, 0),
                        e.setFromMatrixColumn(this, 1),
                        n.setFromMatrixColumn(this, 2),
                        this
                },
                makeBasis: function(t, e, n) {
                    return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
                        this
                },
                extractRotation: function(t) {
                    var e = this.elements
                        , n = t.elements
                        , i = 1 / za.setFromMatrixColumn(t, 0).length()
                        , r = 1 / za.setFromMatrixColumn(t, 1).length();
                    return t = 1 / za.setFromMatrixColumn(t, 2).length(),
                        e[0] = n[0] * i,
                        e[1] = n[1] * i,
                        e[2] = n[2] * i,
                        e[3] = 0,
                        e[4] = n[4] * r,
                        e[5] = n[5] * r,
                        e[6] = n[6] * r,
                        e[7] = 0,
                        e[8] = n[8] * t,
                        e[9] = n[9] * t,
                        e[10] = n[10] * t,
                        e[11] = 0,
                        e[12] = 0,
                        e[13] = 0,
                        e[14] = 0,
                        e[15] = 1,
                        this
                },
                makeRotationFromEuler: function(t) {
                    t && t.isEuler;
                    var e = this.elements
                        , n = t.x
                        , i = t.y
                        , r = t.z
                        , a = Math.cos(n);
                    n = Math.sin(n);
                    var o = Math.cos(i);
                    i = Math.sin(i);
                    var s = Math.cos(r);
                    if (r = Math.sin(r),
                    "XYZ" === t.order) {
                        t = a * s;
                        var c = a * r
                            , u = n * s
                            , l = n * r;
                        e[0] = o * s,
                            e[4] = -o * r,
                            e[8] = i,
                            e[1] = c + u * i,
                            e[5] = t - l * i,
                            e[9] = -n * o,
                            e[2] = l - t * i,
                            e[6] = u + c * i,
                            e[10] = a * o
                    } else
                        "YXZ" === t.order ? (t = o * s,
                            c = o * r,
                            u = i * s,
                            l = i * r,
                            e[0] = t + l * n,
                            e[4] = u * n - c,
                            e[8] = a * i,
                            e[1] = a * r,
                            e[5] = a * s,
                            e[9] = -n,
                            e[2] = c * n - u,
                            e[6] = l + t * n,
                            e[10] = a * o) : "ZXY" === t.order ? (t = o * s,
                            c = o * r,
                            u = i * s,
                            l = i * r,
                            e[0] = t - l * n,
                            e[4] = -a * r,
                            e[8] = u + c * n,
                            e[1] = c + u * n,
                            e[5] = a * s,
                            e[9] = l - t * n,
                            e[2] = -a * i,
                            e[6] = n,
                            e[10] = a * o) : "ZYX" === t.order ? (t = a * s,
                            c = a * r,
                            u = n * s,
                            l = n * r,
                            e[0] = o * s,
                            e[4] = u * i - c,
                            e[8] = t * i + l,
                            e[1] = o * r,
                            e[5] = l * i + t,
                            e[9] = c * i - u,
                            e[2] = -i,
                            e[6] = n * o,
                            e[10] = a * o) : "YZX" === t.order ? (t = a * o,
                            c = a * i,
                            u = n * o,
                            l = n * i,
                            e[0] = o * s,
                            e[4] = l - t * r,
                            e[8] = u * r + c,
                            e[1] = r,
                            e[5] = a * s,
                            e[9] = -n * s,
                            e[2] = -i * s,
                            e[6] = c * r + u,
                            e[10] = t - l * r) : "XZY" === t.order && (t = a * o,
                            c = a * i,
                            u = n * o,
                            l = n * i,
                            e[0] = o * s,
                            e[4] = -r,
                            e[8] = i * s,
                            e[1] = t * r + l,
                            e[5] = a * s,
                            e[9] = c * r - u,
                            e[2] = u * r - c,
                            e[6] = n * s,
                            e[10] = l * r + t);
                    return e[3] = 0,
                        e[7] = 0,
                        e[11] = 0,
                        e[12] = 0,
                        e[13] = 0,
                        e[14] = 0,
                        e[15] = 1,
                        this
                },
                makeRotationFromQuaternion: function(t) {
                    return this.compose(Ba, t, Ua)
                },
                lookAt: function(t, e, n) {
                    var i = this.elements;
                    return ja.subVectors(t, e),
                    0 === ja.lengthSq() && (ja.z = 1),
                        ja.normalize(),
                        Ga.crossVectors(n, ja),
                    0 === Ga.lengthSq() && (1 === Math.abs(n.z) ? ja.x += 1e-4 : ja.z += 1e-4,
                        ja.normalize(),
                        Ga.crossVectors(n, ja)),
                        Ga.normalize(),
                        ka.crossVectors(ja, Ga),
                        i[0] = Ga.x,
                        i[4] = ka.x,
                        i[8] = ja.x,
                        i[1] = Ga.y,
                        i[5] = ka.y,
                        i[9] = ja.y,
                        i[2] = Ga.z,
                        i[6] = ka.z,
                        i[10] = ja.z,
                        this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? this.multiplyMatrices(t, e) : this.multiplyMatrices(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyMatrices(t, this)
                },
                multiplyMatrices: function(t, e) {
                    var n = t.elements
                        , i = e.elements;
                    e = this.elements,
                        t = n[0];
                    var r = n[4]
                        , a = n[8]
                        , o = n[12]
                        , s = n[1]
                        , c = n[5]
                        , u = n[9]
                        , l = n[13]
                        , h = n[2]
                        , p = n[6]
                        , f = n[10]
                        , d = n[14]
                        , m = n[3]
                        , g = n[7]
                        , v = n[11];
                    n = n[15];
                    var y = i[0]
                        , x = i[4]
                        , _ = i[8]
                        , b = i[12]
                        , M = i[1]
                        , w = i[5]
                        , S = i[9]
                        , A = i[13]
                        , T = i[2]
                        , L = i[6]
                        , E = i[10]
                        , P = i[14]
                        , C = i[3]
                        , O = i[7]
                        , I = i[11];
                    return i = i[15],
                        e[0] = t * y + r * M + a * T + o * C,
                        e[4] = t * x + r * w + a * L + o * O,
                        e[8] = t * _ + r * S + a * E + o * I,
                        e[12] = t * b + r * A + a * P + o * i,
                        e[1] = s * y + c * M + u * T + l * C,
                        e[5] = s * x + c * w + u * L + l * O,
                        e[9] = s * _ + c * S + u * E + l * I,
                        e[13] = s * b + c * A + u * P + l * i,
                        e[2] = h * y + p * M + f * T + d * C,
                        e[6] = h * x + p * w + f * L + d * O,
                        e[10] = h * _ + p * S + f * E + d * I,
                        e[14] = h * b + p * A + f * P + d * i,
                        e[3] = m * y + g * M + v * T + n * C,
                        e[7] = m * x + g * w + v * L + n * O,
                        e[11] = m * _ + g * S + v * E + n * I,
                        e[15] = m * b + g * A + v * P + n * i,
                        this
                },
                multiplyScalar: function(t) {
                    var e = this.elements;
                    return e[0] *= t,
                        e[4] *= t,
                        e[8] *= t,
                        e[12] *= t,
                        e[1] *= t,
                        e[5] *= t,
                        e[9] *= t,
                        e[13] *= t,
                        e[2] *= t,
                        e[6] *= t,
                        e[10] *= t,
                        e[14] *= t,
                        e[3] *= t,
                        e[7] *= t,
                        e[11] *= t,
                        e[15] *= t,
                        this
                },
                determinant: function() {
                    var t = this.elements
                        , e = t[0]
                        , n = t[4]
                        , i = t[8]
                        , r = t[12]
                        , a = t[1]
                        , o = t[5]
                        , s = t[9]
                        , c = t[13]
                        , u = t[2]
                        , l = t[6]
                        , h = t[10]
                        , p = t[14];
                    return t[3] * (r * s * l - i * c * l - r * o * h + n * c * h + i * o * p - n * s * p) + t[7] * (e * s * p - e * c * h + r * a * h - i * a * p + i * c * u - r * s * u) + t[11] * (e * c * l - e * o * p - r * a * l + n * a * p + r * o * u - n * c * u) + t[15] * (-i * o * u - e * s * l + e * o * h + i * a * l - n * a * h + n * s * u)
                },
                transpose: function() {
                    var t = this.elements
                        , e = t[1];
                    return t[1] = t[4],
                        t[4] = e,
                        e = t[2],
                        t[2] = t[8],
                        t[8] = e,
                        e = t[6],
                        t[6] = t[9],
                        t[9] = e,
                        e = t[3],
                        t[3] = t[12],
                        t[12] = e,
                        e = t[7],
                        t[7] = t[13],
                        t[13] = e,
                        e = t[11],
                        t[11] = t[14],
                        t[14] = e,
                        this
                },
                setPosition: function(t, e, n) {
                    var i = this.elements;
                    return t.isVector3 ? (i[12] = t.x,
                        i[13] = t.y,
                        i[14] = t.z) : (i[12] = t,
                        i[13] = e,
                        i[14] = n),
                        this
                },
                getInverse: function(t, e) {
                    e = this.elements;
                    var n = t.elements;
                    t = n[0];
                    var i = n[1]
                        , r = n[2]
                        , a = n[3]
                        , o = n[4]
                        , s = n[5]
                        , c = n[6]
                        , u = n[7]
                        , l = n[8]
                        , h = n[9]
                        , p = n[10]
                        , f = n[11]
                        , d = n[12]
                        , m = n[13]
                        , g = n[14]
                        , v = h * g * u - m * p * u + m * c * f - s * g * f - h * c * (n = n[15]) + s * p * n
                        , y = d * p * u - l * g * u - d * c * f + o * g * f + l * c * n - o * p * n
                        , x = l * m * u - d * h * u + d * s * f - o * m * f - l * s * n + o * h * n
                        , _ = d * h * c - l * m * c - d * s * p + o * m * p + l * s * g - o * h * g
                        , b = t * v + i * y + r * x + a * _;
                    return 0 === b ? this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) : (b = 1 / b,
                        e[0] = v * b,
                        e[1] = (m * p * a - h * g * a - m * r * f + i * g * f + h * r * n - i * p * n) * b,
                        e[2] = (s * g * a - m * c * a + m * r * u - i * g * u - s * r * n + i * c * n) * b,
                        e[3] = (h * c * a - s * p * a - h * r * u + i * p * u + s * r * f - i * c * f) * b,
                        e[4] = y * b,
                        e[5] = (l * g * a - d * p * a + d * r * f - t * g * f - l * r * n + t * p * n) * b,
                        e[6] = (d * c * a - o * g * a - d * r * u + t * g * u + o * r * n - t * c * n) * b,
                        e[7] = (o * p * a - l * c * a + l * r * u - t * p * u - o * r * f + t * c * f) * b,
                        e[8] = x * b,
                        e[9] = (d * h * a - l * m * a - d * i * f + t * m * f + l * i * n - t * h * n) * b,
                        e[10] = (o * m * a - d * s * a + d * i * u - t * m * u - o * i * n + t * s * n) * b,
                        e[11] = (l * s * a - o * h * a - l * i * u + t * h * u + o * i * f - t * s * f) * b,
                        e[12] = _ * b,
                        e[13] = (l * m * r - d * h * r + d * i * p - t * m * p - l * i * g + t * h * g) * b,
                        e[14] = (d * s * r - o * m * r - d * i * c + t * m * c + o * i * g - t * s * g) * b,
                        e[15] = (o * h * r - l * s * r + l * i * c - t * h * c - o * i * p + t * s * p) * b,
                        this)
                },
                scale: function(t) {
                    var e = this.elements
                        , n = t.x
                        , i = t.y;
                    return t = t.z,
                        e[0] *= n,
                        e[4] *= i,
                        e[8] *= t,
                        e[1] *= n,
                        e[5] *= i,
                        e[9] *= t,
                        e[2] *= n,
                        e[6] *= i,
                        e[10] *= t,
                        e[3] *= n,
                        e[7] *= i,
                        e[11] *= t,
                        this
                },
                getMaxScaleOnAxis: function() {
                    var t = this.elements;
                    return Math.sqrt(Math.max(t[0] * t[0] + t[1] * t[1] + t[2] * t[2], t[4] * t[4] + t[5] * t[5] + t[6] * t[6], t[8] * t[8] + t[9] * t[9] + t[10] * t[10]))
                },
                makeTranslation: function(t, e, n) {
                    return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
                        this
                },
                makeRotationX: function(t) {
                    var e = Math.cos(t);
                    return t = Math.sin(t),
                        this.set(1, 0, 0, 0, 0, e, -t, 0, 0, t, e, 0, 0, 0, 0, 1),
                        this
                },
                makeRotationY: function(t) {
                    var e = Math.cos(t);
                    return t = Math.sin(t),
                        this.set(e, 0, t, 0, 0, 1, 0, 0, -t, 0, e, 0, 0, 0, 0, 1),
                        this
                },
                makeRotationZ: function(t) {
                    var e = Math.cos(t);
                    return t = Math.sin(t),
                        this.set(e, -t, 0, 0, t, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                        this
                },
                makeRotationAxis: function(t, e) {
                    var n = Math.cos(e);
                    e = Math.sin(e);
                    var i = 1 - n
                        , r = t.x
                        , a = t.y;
                    t = t.z;
                    var o = i * r
                        , s = i * a;
                    return this.set(o * r + n, o * a - e * t, o * t + e * a, 0, o * a + e * t, s * a + n, s * t - e * r, 0, o * t - e * a, s * t + e * r, i * t * t + n, 0, 0, 0, 0, 1),
                        this
                },
                makeScale: function(t, e, n) {
                    return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                        this
                },
                makeShear: function(t, e, n) {
                    return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1),
                        this
                },
                compose: function(t, e, n) {
                    var i = this.elements
                        , r = e._x
                        , a = e._y
                        , o = e._z
                        , s = e._w
                        , c = r + r
                        , u = a + a
                        , l = o + o;
                    e = r * c;
                    var h = r * u;
                    r *= l;
                    var p = a * u;
                    a *= l,
                        o *= l,
                        c *= s,
                        u *= s,
                        s *= l,
                        l = n.x;
                    var f = n.y;
                    return n = n.z,
                        i[0] = (1 - (p + o)) * l,
                        i[1] = (h + s) * l,
                        i[2] = (r - u) * l,
                        i[3] = 0,
                        i[4] = (h - s) * f,
                        i[5] = (1 - (e + o)) * f,
                        i[6] = (a + c) * f,
                        i[7] = 0,
                        i[8] = (r + u) * n,
                        i[9] = (a - c) * n,
                        i[10] = (1 - (e + p)) * n,
                        i[11] = 0,
                        i[12] = t.x,
                        i[13] = t.y,
                        i[14] = t.z,
                        i[15] = 1,
                        this
                },
                decompose: function(t, e, n) {
                    var i = this.elements
                        , r = za.set(i[0], i[1], i[2]).length()
                        , a = za.set(i[4], i[5], i[6]).length()
                        , o = za.set(i[8], i[9], i[10]).length();
                    this.determinant() < 0 && (r = -r),
                        t.x = i[12],
                        t.y = i[13],
                        t.z = i[14],
                        Fa.copy(this),
                        t = 1 / r,
                        i = 1 / a;
                    var s = 1 / o;
                    return Fa.elements[0] *= t,
                        Fa.elements[1] *= t,
                        Fa.elements[2] *= t,
                        Fa.elements[4] *= i,
                        Fa.elements[5] *= i,
                        Fa.elements[6] *= i,
                        Fa.elements[8] *= s,
                        Fa.elements[9] *= s,
                        Fa.elements[10] *= s,
                        e.setFromRotationMatrix(Fa),
                        n.x = r,
                        n.y = a,
                        n.z = o,
                        this
                },
                makePerspective: function(t, e, n, i, r, a) {
                    var o = this.elements;
                    return o[0] = 2 * r / (e - t),
                        o[4] = 0,
                        o[8] = (e + t) / (e - t),
                        o[12] = 0,
                        o[1] = 0,
                        o[5] = 2 * r / (n - i),
                        o[9] = (n + i) / (n - i),
                        o[13] = 0,
                        o[2] = 0,
                        o[6] = 0,
                        o[10] = -(a + r) / (a - r),
                        o[14] = -2 * a * r / (a - r),
                        o[3] = 0,
                        o[7] = 0,
                        o[11] = -1,
                        o[15] = 0,
                        this
                },
                makeOrthographic: function(t, e, n, i, r, a) {
                    var o = this.elements
                        , s = 1 / (e - t)
                        , c = 1 / (n - i)
                        , u = 1 / (a - r);
                    return o[0] = 2 * s,
                        o[4] = 0,
                        o[8] = 0,
                        o[12] = -(e + t) * s,
                        o[1] = 0,
                        o[5] = 2 * c,
                        o[9] = 0,
                        o[13] = -(n + i) * c,
                        o[2] = 0,
                        o[6] = 0,
                        o[10] = -2 * u,
                        o[14] = -(a + r) * u,
                        o[3] = 0,
                        o[7] = 0,
                        o[11] = 0,
                        o[15] = 1,
                        this
                },
                equals: function(t) {
                    var e = this.elements;
                    t = t.elements;
                    for (var n = 0; n < 16; n++)
                        if (e[n] !== t[n])
                            return !1;
                    return !0
                },
                fromArray: function(t, e) {
                    void 0 === e && (e = 0);
                    for (var n = 0; n < 16; n++)
                        this.elements[n] = t[n + e];
                    return this
                },
                toArray: function(t, e) {
                    void 0 === t && (t = []),
                    void 0 === e && (e = 0);
                    var n = this.elements;
                    return t[e] = n[0],
                        t[e + 1] = n[1],
                        t[e + 2] = n[2],
                        t[e + 3] = n[3],
                        t[e + 4] = n[4],
                        t[e + 5] = n[5],
                        t[e + 6] = n[6],
                        t[e + 7] = n[7],
                        t[e + 8] = n[8],
                        t[e + 9] = n[9],
                        t[e + 10] = n[10],
                        t[e + 11] = n[11],
                        t[e + 12] = n[12],
                        t[e + 13] = n[13],
                        t[e + 14] = n[14],
                        t[e + 15] = n[15],
                        t
                }
            });
            var Va = new h
                , Wa = new u;
            p.RotationOrders = "XYZ YZX ZXY XZY YXZ ZYX".split(" "),
                p.DefaultOrder = "XYZ",
                Object.defineProperties(p.prototype, {
                    x: {
                        get: function() {
                            return this._x
                        },
                        set: function(t) {
                            this._x = t,
                                this._onChangeCallback()
                        }
                    },
                    y: {
                        get: function() {
                            return this._y
                        },
                        set: function(t) {
                            this._y = t,
                                this._onChangeCallback()
                        }
                    },
                    z: {
                        get: function() {
                            return this._z
                        },
                        set: function(t) {
                            this._z = t,
                                this._onChangeCallback()
                        }
                    },
                    order: {
                        get: function() {
                            return this._order
                        },
                        set: function(t) {
                            this._order = t,
                                this._onChangeCallback()
                        }
                    }
                }),
                Object.assign(p.prototype, {
                    isEuler: !0,
                    set: function(t, e, n, i) {
                        return this._x = t,
                            this._y = e,
                            this._z = n,
                            this._order = i || this._order,
                            this._onChangeCallback(),
                            this
                    },
                    clone: function() {
                        return new this.constructor(this._x,this._y,this._z,this._order)
                    },
                    copy: function(t) {
                        return this._x = t._x,
                            this._y = t._y,
                            this._z = t._z,
                            this._order = t._order,
                            this._onChangeCallback(),
                            this
                    },
                    setFromRotationMatrix: function(t, e, n) {
                        var i = Ca.clamp
                            , r = t.elements;
                        t = r[0];
                        var a = r[4]
                            , o = r[8]
                            , s = r[1]
                            , c = r[5]
                            , u = r[9]
                            , l = r[2]
                            , h = r[6];
                        return r = r[10],
                            "XYZ" === (e = e || this._order) ? (this._y = Math.asin(i(o, -1, 1)),
                                Math.abs(o) < .9999999 ? (this._x = Math.atan2(-u, r),
                                    this._z = Math.atan2(-a, t)) : (this._x = Math.atan2(h, c),
                                    this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-i(u, -1, 1)),
                                Math.abs(u) < .9999999 ? (this._y = Math.atan2(o, r),
                                    this._z = Math.atan2(s, c)) : (this._y = Math.atan2(-l, t),
                                    this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(i(h, -1, 1)),
                                Math.abs(h) < .9999999 ? (this._y = Math.atan2(-l, r),
                                    this._z = Math.atan2(-a, c)) : (this._y = 0,
                                    this._z = Math.atan2(s, t))) : "ZYX" === e ? (this._y = Math.asin(-i(l, -1, 1)),
                                Math.abs(l) < .9999999 ? (this._x = Math.atan2(h, r),
                                    this._z = Math.atan2(s, t)) : (this._x = 0,
                                    this._z = Math.atan2(-a, c))) : "YZX" === e ? (this._z = Math.asin(i(s, -1, 1)),
                                Math.abs(s) < .9999999 ? (this._x = Math.atan2(-u, c),
                                    this._y = Math.atan2(-l, t)) : (this._x = 0,
                                    this._y = Math.atan2(o, r))) : "XZY" === e && (this._z = Math.asin(-i(a, -1, 1)),
                                Math.abs(a) < .9999999 ? (this._x = Math.atan2(h, c),
                                    this._y = Math.atan2(o, t)) : (this._x = Math.atan2(-u, r),
                                    this._y = 0)),
                            this._order = e,
                        !1 !== n && this._onChangeCallback(),
                            this
                    },
                    setFromQuaternion: function(t, e, n) {
                        return Va.makeRotationFromQuaternion(t),
                            this.setFromRotationMatrix(Va, e, n)
                    },
                    setFromVector3: function(t, e) {
                        return this.set(t.x, t.y, t.z, e || this._order)
                    },
                    reorder: function(t) {
                        return Wa.setFromEuler(this),
                            this.setFromQuaternion(Wa, t)
                    },
                    equals: function(t) {
                        return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
                    },
                    fromArray: function(t) {
                        return this._x = t[0],
                            this._y = t[1],
                            this._z = t[2],
                        void 0 !== t[3] && (this._order = t[3]),
                            this._onChangeCallback(),
                            this
                    },
                    toArray: function(t, e) {
                        return void 0 === t && (t = []),
                        void 0 === e && (e = 0),
                            t[e] = this._x,
                            t[e + 1] = this._y,
                            t[e + 2] = this._z,
                            t[e + 3] = this._order,
                            t
                    },
                    toVector3: function(t) {
                        return t ? t.set(this._x, this._y, this._z) : new l(this._x,this._y,this._z)
                    },
                    _onChange: function(t) {
                        return this._onChangeCallback = t,
                            this
                    },
                    _onChangeCallback: function() {}
                }),
                Object.assign(f.prototype, {
                    set: function(t) {
                        this.mask = 1 << t | 0
                    },
                    enable: function(t) {
                        this.mask = this.mask | 1 << t | 0
                    },
                    enableAll: function() {
                        this.mask = -1
                    },
                    toggle: function(t) {
                        this.mask ^= 1 << t | 0
                    },
                    disable: function(t) {
                        this.mask &= ~(1 << t | 0)
                    },
                    disableAll: function() {
                        this.mask = 0
                    },
                    test: function(t) {
                        return 0 != (this.mask & t.mask)
                    }
                });
            var Ha = 0
                , qa = new l
                , Xa = new u
                , Ya = new h
                , Za = new l
                , Ja = new l
                , Ka = new l
                , Qa = new u
                , $a = new l(1,0,0)
                , to = new l(0,1,0)
                , eo = new l(0,0,1)
                , no = {
                type: "added"
            }
                , io = {
                type: "removed"
            };
            d.DefaultUp = new l(0,1,0),
                d.DefaultMatrixAutoUpdate = !0,
                d.prototype = Object.assign(Object.create(e.prototype), {
                    constructor: d,
                    isObject3D: !0,
                    onBeforeRender: function() {},
                    onAfterRender: function() {},
                    applyMatrix4: function(t) {
                        this.matrixAutoUpdate && this.updateMatrix(),
                            this.matrix.premultiply(t),
                            this.matrix.decompose(this.position, this.quaternion, this.scale)
                    },
                    applyQuaternion: function(t) {
                        return this.quaternion.premultiply(t),
                            this
                    },
                    setRotationFromAxisAngle: function(t, e) {
                        this.quaternion.setFromAxisAngle(t, e)
                    },
                    setRotationFromEuler: function(t) {
                        this.quaternion.setFromEuler(t, !0)
                    },
                    setRotationFromMatrix: function(t) {
                        this.quaternion.setFromRotationMatrix(t)
                    },
                    setRotationFromQuaternion: function(t) {
                        this.quaternion.copy(t)
                    },
                    rotateOnAxis: function(t, e) {
                        return Xa.setFromAxisAngle(t, e),
                            this.quaternion.multiply(Xa),
                            this
                    },
                    rotateOnWorldAxis: function(t, e) {
                        return Xa.setFromAxisAngle(t, e),
                            this.quaternion.premultiply(Xa),
                            this
                    },
                    rotateX: function(t) {
                        return this.rotateOnAxis($a, t)
                    },
                    rotateY: function(t) {
                        return this.rotateOnAxis(to, t)
                    },
                    rotateZ: function(t) {
                        return this.rotateOnAxis(eo, t)
                    },
                    translateOnAxis: function(t, e) {
                        return qa.copy(t).applyQuaternion(this.quaternion),
                            this.position.add(qa.multiplyScalar(e)),
                            this
                    },
                    translateX: function(t) {
                        return this.translateOnAxis($a, t)
                    },
                    translateY: function(t) {
                        return this.translateOnAxis(to, t)
                    },
                    translateZ: function(t) {
                        return this.translateOnAxis(eo, t)
                    },
                    localToWorld: function(t) {
                        return t.applyMatrix4(this.matrixWorld)
                    },
                    worldToLocal: function(t) {
                        return t.applyMatrix4(Ya.getInverse(this.matrixWorld))
                    },
                    lookAt: function(t, e, n) {
                        t.isVector3 ? Za.copy(t) : Za.set(t, e, n),
                            t = this.parent,
                            this.updateWorldMatrix(!0, !1),
                            Ja.setFromMatrixPosition(this.matrixWorld),
                            this.isCamera || this.isLight ? Ya.lookAt(Ja, Za, this.up) : Ya.lookAt(Za, Ja, this.up),
                            this.quaternion.setFromRotationMatrix(Ya),
                        t && (Ya.extractRotation(t.matrixWorld),
                            Xa.setFromRotationMatrix(Ya),
                            this.quaternion.premultiply(Xa.inverse()))
                    },
                    add: function(t) {
                        if (1 < arguments.length) {
                            for (var e = 0; e < arguments.length; e++)
                                this.add(arguments[e]);
                            return this
                        }
                        return t === this || t && t.isObject3D && (null !== t.parent && t.parent.remove(t),
                            (t.parent = this).children.push(t),
                            t.dispatchEvent(no)),
                            this
                    },
                    remove: function(t) {
                        if (1 < arguments.length) {
                            for (var e = 0; e < arguments.length; e++)
                                this.remove(arguments[e]);
                            return this
                        }
                        return -1 !== (e = this.children.indexOf(t)) && (t.parent = null,
                            this.children.splice(e, 1),
                            t.dispatchEvent(io)),
                            this
                    },
                    attach: function(t) {
                        return this.updateWorldMatrix(!0, !1),
                            Ya.getInverse(this.matrixWorld),
                        null !== t.parent && (t.parent.updateWorldMatrix(!0, !1),
                            Ya.multiply(t.parent.matrixWorld)),
                            t.applyMatrix4(Ya),
                            t.updateWorldMatrix(!1, !1),
                            this.add(t),
                            this
                    },
                    getObjectById: function(t) {
                        return this.getObjectByProperty("id", t)
                    },
                    getObjectByName: function(t) {
                        return this.getObjectByProperty("name", t)
                    },
                    getObjectByProperty: function(t, e) {
                        if (this[t] === e)
                            return this;
                        for (var n = 0, i = this.children.length; n < i; n++) {
                            var r = this.children[n].getObjectByProperty(t, e);
                            if (void 0 !== r)
                                return r
                        }
                    },
                    getWorldPosition: function(t) {
                        return void 0 === t && (t = new l),
                            this.updateMatrixWorld(!0),
                            t.setFromMatrixPosition(this.matrixWorld)
                    },
                    getWorldQuaternion: function(t) {
                        return void 0 === t && (t = new u),
                            this.updateMatrixWorld(!0),
                            this.matrixWorld.decompose(Ja, t, Ka),
                            t
                    },
                    getWorldScale: function(t) {
                        return void 0 === t && (t = new l),
                            this.updateMatrixWorld(!0),
                            this.matrixWorld.decompose(Ja, Qa, t),
                            t
                    },
                    getWorldDirection: function(t) {
                        void 0 === t && (t = new l),
                            this.updateMatrixWorld(!0);
                        var e = this.matrixWorld.elements;
                        return t.set(e[8], e[9], e[10]).normalize()
                    },
                    raycast: function() {},
                    traverse: function(t) {
                        t(this);
                        for (var e = this.children, n = 0, i = e.length; n < i; n++)
                            e[n].traverse(t)
                    },
                    traverseVisible: function(t) {
                        if (!1 !== this.visible) {
                            t(this);
                            for (var e = this.children, n = 0, i = e.length; n < i; n++)
                                e[n].traverseVisible(t)
                        }
                    },
                    traverseAncestors: function(t) {
                        var e = this.parent;
                        null !== e && (t(e),
                            e.traverseAncestors(t))
                    },
                    updateMatrix: function() {
                        this.matrix.compose(this.position, this.quaternion, this.scale),
                            this.matrixWorldNeedsUpdate = !0
                    },
                    updateMatrixWorld: function(t) {
                        this.matrixAutoUpdate && this.updateMatrix(),
                        (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                            t = !(this.matrixWorldNeedsUpdate = !1));
                        for (var e = this.children, n = 0, i = e.length; n < i; n++)
                            e[n].updateMatrixWorld(t)
                    },
                    updateWorldMatrix: function(t, e) {
                        var n = this.parent;
                        if (!0 === t && null !== n && n.updateWorldMatrix(!0, !1),
                        this.matrixAutoUpdate && this.updateMatrix(),
                            null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                        !0 === e)
                            for (e = 0,
                                     n = (t = this.children).length; e < n; e++)
                                t[e].updateWorldMatrix(!1, !0)
                    },
                    toJSON: function(t) {
                        function e(e, n) {
                            return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)),
                                n.uuid
                        }
                        function n(t) {
                            var e, n = [];
                            for (e in t) {
                                var i = t[e];
                                delete i.metadata,
                                    n.push(i)
                            }
                            return n
                        }
                        var i = void 0 === t || "string" == typeof t
                            , r = {};
                        i && (t = {
                            geometries: {},
                            materials: {},
                            textures: {},
                            images: {},
                            shapes: {}
                        },
                            r.metadata = {
                                version: 4.5,
                                type: "Object",
                                generator: "Object3D.toJSON"
                            });
                        var a = {};
                        if (a.uuid = this.uuid,
                            a.type = this.type,
                        "" !== this.name && (a.name = this.name),
                        !0 === this.castShadow && (a.castShadow = !0),
                        !0 === this.receiveShadow && (a.receiveShadow = !0),
                        !1 === this.visible && (a.visible = !1),
                        !1 === this.frustumCulled && (a.frustumCulled = !1),
                        0 !== this.renderOrder && (a.renderOrder = this.renderOrder),
                        "{}" !== JSON.stringify(this.userData) && (a.userData = this.userData),
                            a.layers = this.layers.mask,
                            a.matrix = this.matrix.toArray(),
                        !1 === this.matrixAutoUpdate && (a.matrixAutoUpdate = !1),
                        this.isInstancedMesh && (a.type = "InstancedMesh",
                            a.count = this.count,
                            a.instanceMatrix = this.instanceMatrix.toJSON()),
                        this.isMesh || this.isLine || this.isPoints) {
                            a.geometry = e(t.geometries, this.geometry);
                            var o = this.geometry.parameters;
                            if (void 0 !== o && void 0 !== o.shapes)
                                if (o = o.shapes,
                                    Array.isArray(o))
                                    for (var s = 0, c = o.length; s < c; s++)
                                        e(t.shapes, o[s]);
                                else
                                    e(t.shapes, o)
                        }
                        if (void 0 !== this.material)
                            if (Array.isArray(this.material)) {
                                for (o = [],
                                         s = 0,
                                         c = this.material.length; s < c; s++)
                                    o.push(e(t.materials, this.material[s]));
                                a.material = o
                            } else
                                a.material = e(t.materials, this.material);
                        if (0 < this.children.length)
                            for (a.children = [],
                                     s = 0; s < this.children.length; s++)
                                a.children.push(this.children[s].toJSON(t).object);
                        if (i) {
                            i = n(t.geometries),
                                s = n(t.materials),
                                c = n(t.textures);
                            var u = n(t.images);
                            o = n(t.shapes),
                            0 < i.length && (r.geometries = i),
                            0 < s.length && (r.materials = s),
                            0 < c.length && (r.textures = c),
                            0 < u.length && (r.images = u),
                            0 < o.length && (r.shapes = o)
                        }
                        return r.object = a,
                            r
                    },
                    clone: function(t) {
                        return (new this.constructor).copy(this, t)
                    },
                    copy: function(t, e) {
                        if (void 0 === e && (e = !0),
                            this.name = t.name,
                            this.up.copy(t.up),
                            this.position.copy(t.position),
                            this.quaternion.copy(t.quaternion),
                            this.scale.copy(t.scale),
                            this.matrix.copy(t.matrix),
                            this.matrixWorld.copy(t.matrixWorld),
                            this.matrixAutoUpdate = t.matrixAutoUpdate,
                            this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
                            this.layers.mask = t.layers.mask,
                            this.visible = t.visible,
                            this.castShadow = t.castShadow,
                            this.receiveShadow = t.receiveShadow,
                            this.frustumCulled = t.frustumCulled,
                            this.renderOrder = t.renderOrder,
                            this.userData = JSON.parse(JSON.stringify(t.userData)),
                        !0 === e)
                            for (e = 0; e < t.children.length; e++)
                                this.add(t.children[e].clone());
                        return this
                    }
                }),
                m.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: m,
                    isScene: !0,
                    copy: function(t, e) {
                        return d.prototype.copy.call(this, t, e),
                        null !== t.background && (this.background = t.background.clone()),
                        null !== t.environment && (this.environment = t.environment.clone()),
                        null !== t.fog && (this.fog = t.fog.clone()),
                        null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
                            this.autoUpdate = t.autoUpdate,
                            this.matrixAutoUpdate = t.matrixAutoUpdate,
                            this
                    },
                    toJSON: function(t) {
                        var e = d.prototype.toJSON.call(this, t);
                        return null !== this.background && (e.object.background = this.background.toJSON(t)),
                        null !== this.environment && (e.object.environment = this.environment.toJSON(t)),
                        null !== this.fog && (e.object.fog = this.fog.toJSON()),
                            e
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                });
            var ro = [new l, new l, new l, new l, new l, new l, new l, new l]
                , ao = new l
                , oo = new g
                , so = new l
                , co = new l
                , uo = new l
                , lo = new l
                , ho = new l
                , po = new l
                , fo = new l
                , mo = new l
                , go = new l
                , vo = new l;
            Object.assign(g.prototype, {
                isBox3: !0,
                set: function(t, e) {
                    return this.min.copy(t),
                        this.max.copy(e),
                        this
                },
                setFromArray: function(t) {
                    for (var e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, c = t.length; s < c; s += 3) {
                        var u = t[s]
                            , l = t[s + 1]
                            , h = t[s + 2];
                        u < e && (e = u),
                        l < n && (n = l),
                        h < i && (i = h),
                        r < u && (r = u),
                        a < l && (a = l),
                        o < h && (o = h)
                    }
                    return this.min.set(e, n, i),
                        this.max.set(r, a, o),
                        this
                },
                setFromBufferAttribute: function(t) {
                    for (var e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, c = t.count; s < c; s++) {
                        var u = t.getX(s)
                            , l = t.getY(s)
                            , h = t.getZ(s);
                        u < e && (e = u),
                        l < n && (n = l),
                        h < i && (i = h),
                        r < u && (r = u),
                        a < l && (a = l),
                        o < h && (o = h)
                    }
                    return this.min.set(e, n, i),
                        this.max.set(r, a, o),
                        this
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, n = t.length; e < n; e++)
                        this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function(t, e) {
                    return e = ao.copy(e).multiplyScalar(.5),
                        this.min.copy(t).sub(e),
                        this.max.copy(t).add(e),
                        this
                },
                setFromObject: function(t) {
                    return this.makeEmpty(),
                        this.expandByObject(t)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min),
                        this.max.copy(t.max),
                        this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = this.min.z = 1 / 0,
                        this.max.x = this.max.y = this.max.z = -1 / 0,
                        this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                getCenter: function(t) {
                    return void 0 === t && (t = new l),
                        this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(t) {
                    return void 0 === t && (t = new l),
                        this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t),
                        this.max.max(t),
                        this
                },
                expandByVector: function(t) {
                    return this.min.sub(t),
                        this.max.add(t),
                        this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t),
                        this.max.addScalar(t),
                        this
                },
                expandByObject: function(t) {
                    t.updateWorldMatrix(!1, !1);
                    var e = t.geometry;
                    void 0 !== e && (null === e.boundingBox && e.computeBoundingBox(),
                        oo.copy(e.boundingBox),
                        oo.applyMatrix4(t.matrixWorld),
                        this.union(oo)),
                        e = 0;
                    for (var n = (t = t.children).length; e < n; e++)
                        this.expandByObject(t[e]);
                    return this
                },
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
                },
                getParameter: function(t, e) {
                    return void 0 === e && (e = new l),
                        e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
                },
                intersectsSphere: function(t) {
                    return this.clampPoint(t.center, ao),
                    ao.distanceToSquared(t.center) <= t.radius * t.radius
                },
                intersectsPlane: function(t) {
                    if (0 < t.normal.x)
                        var e = t.normal.x * this.min.x
                            , n = t.normal.x * this.max.x;
                    else
                        e = t.normal.x * this.max.x,
                            n = t.normal.x * this.min.x;
                    return 0 < t.normal.y ? (e += t.normal.y * this.min.y,
                        n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
                        n += t.normal.y * this.min.y),
                        0 < t.normal.z ? (e += t.normal.z * this.min.z,
                            n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
                            n += t.normal.z * this.min.z),
                    e <= -t.constant && n >= -t.constant
                },
                intersectsTriangle: function(t) {
                    return !this.isEmpty() && (this.getCenter(fo),
                        mo.subVectors(this.max, fo),
                        so.subVectors(t.a, fo),
                        co.subVectors(t.b, fo),
                        uo.subVectors(t.c, fo),
                        lo.subVectors(co, so),
                        ho.subVectors(uo, co),
                        po.subVectors(so, uo),
                    !!v(t = [0, -lo.z, lo.y, 0, -ho.z, ho.y, 0, -po.z, po.y, lo.z, 0, -lo.x, ho.z, 0, -ho.x, po.z, 0, -po.x, -lo.y, lo.x, 0, -ho.y, ho.x, 0, -po.y, po.x, 0], so, co, uo, mo) && !!v(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], so, co, uo, mo) && (go.crossVectors(lo, ho),
                        v(t = [go.x, go.y, go.z], so, co, uo, mo)))
                },
                clampPoint: function(t, e) {
                    return void 0 === e && (e = new l),
                        e.copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function(t) {
                    return ao.copy(t).clamp(this.min, this.max).sub(t).length()
                },
                getBoundingSphere: function(t) {
                    return this.getCenter(t.center),
                        t.radius = .5 * this.getSize(ao).length(),
                        t
                },
                intersect: function(t) {
                    return this.min.max(t.min),
                        this.max.min(t.max),
                    this.isEmpty() && this.makeEmpty(),
                        this
                },
                union: function(t) {
                    return this.min.min(t.min),
                        this.max.max(t.max),
                        this
                },
                applyMatrix4: function(t) {
                    return this.isEmpty() || (ro[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
                        ro[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
                        ro[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
                        ro[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
                        ro[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
                        ro[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
                        ro[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
                        ro[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
                        this.setFromPoints(ro)),
                        this
                },
                translate: function(t) {
                    return this.min.add(t),
                        this.max.add(t),
                        this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            });
            var yo = new g;
            Object.assign(y.prototype, {
                set: function(t, e) {
                    return this.center.copy(t),
                        this.radius = e,
                        this
                },
                setFromPoints: function(t, e) {
                    var n = this.center;
                    void 0 !== e ? n.copy(e) : yo.setFromPoints(t).getCenter(n);
                    for (var i = e = 0, r = t.length; i < r; i++)
                        e = Math.max(e, n.distanceToSquared(t[i]));
                    return this.radius = Math.sqrt(e),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.center.copy(t.center),
                        this.radius = t.radius,
                        this
                },
                empty: function() {
                    return this.radius <= 0
                },
                containsPoint: function(t) {
                    return t.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function(t) {
                    return t.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function(t) {
                    var e = this.radius + t.radius;
                    return t.center.distanceToSquared(this.center) <= e * e
                },
                intersectsBox: function(t) {
                    return t.intersectsSphere(this)
                },
                intersectsPlane: function(t) {
                    return Math.abs(t.distanceToPoint(this.center)) <= this.radius
                },
                clampPoint: function(t, e) {
                    var n = this.center.distanceToSquared(t);
                    return void 0 === e && (e = new l),
                        e.copy(t),
                    n > this.radius * this.radius && (e.sub(this.center).normalize(),
                        e.multiplyScalar(this.radius).add(this.center)),
                        e
                },
                getBoundingBox: function(t) {
                    return void 0 === t && (t = new g),
                        t.set(this.center, this.center),
                        t.expandByScalar(this.radius),
                        t
                },
                applyMatrix4: function(t) {
                    return this.center.applyMatrix4(t),
                        this.radius *= t.getMaxScaleOnAxis(),
                        this
                },
                translate: function(t) {
                    return this.center.add(t),
                        this
                },
                equals: function(t) {
                    return t.center.equals(this.center) && t.radius === this.radius
                }
            });
            var xo = new l
                , _o = new l
                , bo = new l
                , Mo = new l
                , wo = new l
                , So = new l
                , Ao = new l;
            Object.assign(x.prototype, {
                set: function(t, e) {
                    return this.origin.copy(t),
                        this.direction.copy(e),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.origin.copy(t.origin),
                        this.direction.copy(t.direction),
                        this
                },
                at: function(t, e) {
                    return void 0 === e && (e = new l),
                        e.copy(this.direction).multiplyScalar(t).add(this.origin)
                },
                lookAt: function(t) {
                    return this.direction.copy(t).sub(this.origin).normalize(),
                        this
                },
                recast: function(t) {
                    return this.origin.copy(this.at(t, xo)),
                        this
                },
                closestPointToPoint: function(t, e) {
                    return void 0 === e && (e = new l),
                        e.subVectors(t, this.origin),
                        (t = e.dot(this.direction)) < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(t).add(this.origin)
                },
                distanceToPoint: function(t) {
                    return Math.sqrt(this.distanceSqToPoint(t))
                },
                distanceSqToPoint: function(t) {
                    var e = xo.subVectors(t, this.origin).dot(this.direction);
                    return e < 0 ? this.origin.distanceToSquared(t) : (xo.copy(this.direction).multiplyScalar(e).add(this.origin),
                        xo.distanceToSquared(t))
                },
                distanceSqToSegment: function(t, e, n, i) {
                    _o.copy(t).add(e).multiplyScalar(.5),
                        bo.copy(e).sub(t).normalize(),
                        Mo.copy(this.origin).sub(_o);
                    var r = .5 * t.distanceTo(e)
                        , a = -this.direction.dot(bo)
                        , o = Mo.dot(this.direction)
                        , s = -Mo.dot(bo)
                        , c = Mo.lengthSq()
                        , u = Math.abs(1 - a * a);
                    if (0 < u) {
                        e = a * o - s;
                        var l = r * u;
                        a = 0 <= (t = a * s - o) ? -l <= e ? e <= l ? (t *= r = 1 / u) * (t + a * (e *= r) + 2 * o) + e * (a * t + e + 2 * s) + c : (e = r,
                        -(t = Math.max(0, -(a * e + o))) * t + e * (e + 2 * s) + c) : (e = -r,
                        -(t = Math.max(0, -(a * e + o))) * t + e * (e + 2 * s) + c) : e <= -l ? -(t = Math.max(0, -(-a * r + o))) * t + (e = 0 < t ? -r : Math.min(Math.max(-r, -s), r)) * (e + 2 * s) + c : e <= l ? (t = 0,
                        (e = Math.min(Math.max(-r, -s), r)) * (e + 2 * s) + c) : -(t = Math.max(0, -(a * r + o))) * t + (e = 0 < t ? r : Math.min(Math.max(-r, -s), r)) * (e + 2 * s) + c
                    } else
                        e = 0 < a ? -r : r,
                            a = -(t = Math.max(0, -(a * e + o))) * t + e * (e + 2 * s) + c;
                    return n && n.copy(this.direction).multiplyScalar(t).add(this.origin),
                    i && i.copy(bo).multiplyScalar(e).add(_o),
                        a
                },
                intersectSphere: function(t, e) {
                    xo.subVectors(t.center, this.origin);
                    var n = xo.dot(this.direction)
                        , i = xo.dot(xo) - n * n;
                    return (t = t.radius * t.radius) < i ? null : (i = n - (t = Math.sqrt(t - i)),
                        n += t,
                        i < 0 && n < 0 ? null : i < 0 ? this.at(n, e) : this.at(i, e))
                },
                intersectsSphere: function(t) {
                    return this.distanceSqToPoint(t.center) <= t.radius * t.radius
                },
                distanceToPlane: function(t) {
                    var e = t.normal.dot(this.direction);
                    return 0 === e ? 0 === t.distanceToPoint(this.origin) ? 0 : null : 0 <= (t = -(this.origin.dot(t.normal) + t.constant) / e) ? t : null
                },
                intersectPlane: function(t, e) {
                    return null === (t = this.distanceToPlane(t)) ? null : this.at(t, e)
                },
                intersectsPlane: function(t) {
                    var e = t.distanceToPoint(this.origin);
                    return 0 === e || t.normal.dot(this.direction) * e < 0
                },
                intersectBox: function(t, e) {
                    var n = 1 / this.direction.x
                        , i = 1 / this.direction.y
                        , r = 1 / this.direction.z
                        , a = this.origin;
                    if (0 <= n) {
                        var o = (t.min.x - a.x) * n;
                        n *= t.max.x - a.x
                    } else
                        o = (t.max.x - a.x) * n,
                            n *= t.min.x - a.x;
                    if (0 <= i) {
                        var s = (t.min.y - a.y) * i;
                        i *= t.max.y - a.y
                    } else
                        s = (t.max.y - a.y) * i,
                            i *= t.min.y - a.y;
                    return i < o || n < s ? null : ((o < s || o != o) && (o = s),
                    (i < n || n != n) && (n = i),
                        (t = 0 <= r ? (s = (t.min.z - a.z) * r,
                        (t.max.z - a.z) * r) : (s = (t.max.z - a.z) * r,
                        (t.min.z - a.z) * r)) < o || n < s ? null : ((o < s || o != o) && (o = s),
                        (t < n || n != n) && (n = t),
                            n < 0 ? null : this.at(0 <= o ? o : n, e)))
                },
                intersectsBox: function(t) {
                    return null !== this.intersectBox(t, xo)
                },
                intersectTriangle: function(t, e, n, i, r) {
                    if (wo.subVectors(e, t),
                        So.subVectors(n, t),
                        Ao.crossVectors(wo, So),
                    0 < (e = this.direction.dot(Ao))) {
                        if (i)
                            return null;
                        i = 1
                    } else {
                        if (!(e < 0))
                            return null;
                        i = -1,
                            e = -e
                    }
                    return Mo.subVectors(this.origin, t),
                        (t = i * this.direction.dot(So.crossVectors(Mo, So))) < 0 || (n = i * this.direction.dot(wo.cross(Mo))) < 0 || e < t + n || (t = -i * Mo.dot(Ao)) < 0 ? null : this.at(t / e, r)
                },
                applyMatrix4: function(t) {
                    return this.origin.applyMatrix4(t),
                        this.direction.transformDirection(t),
                        this
                },
                equals: function(t) {
                    return t.origin.equals(this.origin) && t.direction.equals(this.direction)
                }
            });
            var To = new l
                , Lo = new l
                , Eo = new i;
            Object.assign(_.prototype, {
                isPlane: !0,
                set: function(t, e) {
                    return this.normal.copy(t),
                        this.constant = e,
                        this
                },
                setComponents: function(t, e, n, i) {
                    return this.normal.set(t, e, n),
                        this.constant = i,
                        this
                },
                setFromNormalAndCoplanarPoint: function(t, e) {
                    return this.normal.copy(t),
                        this.constant = -e.dot(this.normal),
                        this
                },
                setFromCoplanarPoints: function(t, e, n) {
                    return e = To.subVectors(n, e).cross(Lo.subVectors(t, e)).normalize(),
                        this.setFromNormalAndCoplanarPoint(e, t),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.normal.copy(t.normal),
                        this.constant = t.constant,
                        this
                },
                normalize: function() {
                    var t = 1 / this.normal.length();
                    return this.normal.multiplyScalar(t),
                        this.constant *= t,
                        this
                },
                negate: function() {
                    return this.constant *= -1,
                        this.normal.negate(),
                        this
                },
                distanceToPoint: function(t) {
                    return this.normal.dot(t) + this.constant
                },
                distanceToSphere: function(t) {
                    return this.distanceToPoint(t.center) - t.radius
                },
                projectPoint: function(t, e) {
                    return void 0 === e && (e = new l),
                        e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
                },
                intersectLine: function(t, e) {
                    void 0 === e && (e = new l);
                    var n = t.delta(To)
                        , i = this.normal.dot(n);
                    if (0 === i) {
                        if (0 === this.distanceToPoint(t.start))
                            return e.copy(t.start)
                    } else if (!((i = -(t.start.dot(this.normal) + this.constant) / i) < 0 || 1 < i))
                        return e.copy(n).multiplyScalar(i).add(t.start)
                },
                intersectsLine: function(t) {
                    var e = this.distanceToPoint(t.start);
                    return t = this.distanceToPoint(t.end),
                    e < 0 && 0 < t || t < 0 && 0 < e
                },
                intersectsBox: function(t) {
                    return t.intersectsPlane(this)
                },
                intersectsSphere: function(t) {
                    return t.intersectsPlane(this)
                },
                coplanarPoint: function(t) {
                    return void 0 === t && (t = new l),
                        t.copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function(t, e) {
                    return e = e || Eo.getNormalMatrix(t),
                        t = this.coplanarPoint(To).applyMatrix4(t),
                        e = this.normal.applyMatrix3(e).normalize(),
                        this.constant = -t.dot(e),
                        this
                },
                translate: function(t) {
                    return this.constant -= t.dot(this.normal),
                        this
                },
                equals: function(t) {
                    return t.normal.equals(this.normal) && t.constant === this.constant
                }
            });
            var Po = new l
                , Co = new l
                , Oo = new l
                , Io = new l
                , No = new l
                , Do = new l
                , Ro = new l
                , zo = new l
                , Fo = new l
                , Bo = new l;
            Object.assign(b, {
                getNormal: function(t, e, n, i) {
                    return void 0 === i && (i = new l),
                        i.subVectors(n, e),
                        Po.subVectors(t, e),
                        i.cross(Po),
                        0 < (t = i.lengthSq()) ? i.multiplyScalar(1 / Math.sqrt(t)) : i.set(0, 0, 0)
                },
                getBarycoord: function(t, e, n, i, r) {
                    Po.subVectors(i, e),
                        Co.subVectors(n, e),
                        Oo.subVectors(t, e),
                        t = Po.dot(Po),
                        e = Po.dot(Co),
                        n = Po.dot(Oo);
                    var a = Co.dot(Co);
                    i = Co.dot(Oo);
                    var o = t * a - e * e;
                    return void 0 === r && (r = new l),
                        0 === o ? r.set(-2, -1, -1) : (a = (a * n - e * i) * (o = 1 / o),
                            t = (t * i - e * n) * o,
                            r.set(1 - a - t, t, a))
                },
                containsPoint: function(t, e, n, i) {
                    return b.getBarycoord(t, e, n, i, Io),
                    0 <= Io.x && 0 <= Io.y && Io.x + Io.y <= 1
                },
                getUV: function(t, e, n, i, r, a, o, s) {
                    return this.getBarycoord(t, e, n, i, Io),
                        s.set(0, 0),
                        s.addScaledVector(r, Io.x),
                        s.addScaledVector(a, Io.y),
                        s.addScaledVector(o, Io.z),
                        s
                },
                isFrontFacing: function(t, e, n, i) {
                    return Po.subVectors(n, e),
                        Co.subVectors(t, e),
                    Po.cross(Co).dot(i) < 0
                }
            }),
                Object.assign(b.prototype, {
                    set: function(t, e, n) {
                        return this.a.copy(t),
                            this.b.copy(e),
                            this.c.copy(n),
                            this
                    },
                    setFromPointsAndIndices: function(t, e, n, i) {
                        return this.a.copy(t[e]),
                            this.b.copy(t[n]),
                            this.c.copy(t[i]),
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.a.copy(t.a),
                            this.b.copy(t.b),
                            this.c.copy(t.c),
                            this
                    },
                    getArea: function() {
                        return Po.subVectors(this.c, this.b),
                            Co.subVectors(this.a, this.b),
                        .5 * Po.cross(Co).length()
                    },
                    getMidpoint: function(t) {
                        return void 0 === t && (t = new l),
                            t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                    },
                    getNormal: function(t) {
                        return b.getNormal(this.a, this.b, this.c, t)
                    },
                    getPlane: function(t) {
                        return void 0 === t && (t = new _),
                            t.setFromCoplanarPoints(this.a, this.b, this.c)
                    },
                    getBarycoord: function(t, e) {
                        return b.getBarycoord(t, this.a, this.b, this.c, e)
                    },
                    getUV: function(t, e, n, i, r) {
                        return b.getUV(t, this.a, this.b, this.c, e, n, i, r)
                    },
                    containsPoint: function(t) {
                        return b.containsPoint(t, this.a, this.b, this.c)
                    },
                    isFrontFacing: function(t) {
                        return b.isFrontFacing(this.a, this.b, this.c, t)
                    },
                    intersectsBox: function(t) {
                        return t.intersectsTriangle(this)
                    },
                    closestPointToPoint: function(t, e) {
                        void 0 === e && (e = new l);
                        var n = this.a
                            , i = this.b
                            , r = this.c;
                        No.subVectors(i, n),
                            Do.subVectors(r, n),
                            zo.subVectors(t, n);
                        var a = No.dot(zo)
                            , o = Do.dot(zo);
                        if (a <= 0 && o <= 0)
                            return e.copy(n);
                        Fo.subVectors(t, i);
                        var s = No.dot(Fo)
                            , c = Do.dot(Fo);
                        if (0 <= s && c <= s)
                            return e.copy(i);
                        var u = a * c - s * o;
                        if (u <= 0 && 0 <= a && s <= 0)
                            return i = a / (a - s),
                                e.copy(n).addScaledVector(No, i);
                        Bo.subVectors(t, r),
                            t = No.dot(Bo);
                        var h = Do.dot(Bo);
                        return 0 <= h && t <= h ? e.copy(r) : (a = t * o - a * h) <= 0 && 0 <= o && h <= 0 ? (u = o / (o - h),
                            e.copy(n).addScaledVector(Do, u)) : (o = s * h - t * c) <= 0 && 0 <= c - s && 0 <= t - h ? (Ro.subVectors(r, i),
                            u = (c - s) / (c - s + (t - h)),
                            e.copy(i).addScaledVector(Ro, u)) : (i = a * (r = 1 / (o + a + u)),
                            u *= r,
                            e.copy(n).addScaledVector(No, i).addScaledVector(Do, u))
                    },
                    equals: function(t) {
                        return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
                    }
                });
            var Uo = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            }
                , Go = {
                h: 0,
                s: 0,
                l: 0
            }
                , ko = {
                h: 0,
                s: 0,
                l: 0
            };
            Object.assign(M.prototype, {
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function(t) {
                    return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
                        this
                },
                setScalar: function(t) {
                    return this.b = this.g = this.r = t,
                        this
                },
                setHex: function(t) {
                    return t = Math.floor(t),
                        this.r = (t >> 16 & 255) / 255,
                        this.g = (t >> 8 & 255) / 255,
                        this.b = (255 & t) / 255,
                        this
                },
                setRGB: function(t, e, n) {
                    return this.r = t,
                        this.g = e,
                        this.b = n,
                        this
                },
                setHSL: function(t, e, n) {
                    return t = Ca.euclideanModulo(t, 1),
                        e = Ca.clamp(e, 0, 1),
                        n = Ca.clamp(n, 0, 1),
                        0 === e ? this.r = this.g = this.b = n : (n = 2 * n - (e = n <= .5 ? n * (1 + e) : n + e - n * e),
                            this.r = w(n, e, t + 1 / 3),
                            this.g = w(n, e, t),
                            this.b = w(n, e, t - 1 / 3)),
                        this
                },
                setStyle: function(t) {
                    function e(t) {
                        void 0 !== t && parseFloat(t)
                    }
                    var n;
                    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                        var i = n[2];
                        switch (n[1]) {
                            case "rgb":
                            case "rgba":
                                if (n = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))
                                    return this.r = Math.min(255, parseInt(n[1], 10)) / 255,
                                        this.g = Math.min(255, parseInt(n[2], 10)) / 255,
                                        this.b = Math.min(255, parseInt(n[3], 10)) / 255,
                                        e(n[5]),
                                        this;
                                if (n = /^(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))
                                    return this.r = Math.min(100, parseInt(n[1], 10)) / 100,
                                        this.g = Math.min(100, parseInt(n[2], 10)) / 100,
                                        this.b = Math.min(100, parseInt(n[3], 10)) / 100,
                                        e(n[5]),
                                        this;
                                break;
                            case "hsl":
                            case "hsla":
                                if (n = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)) {
                                    i = parseFloat(n[1]) / 360;
                                    var r = parseInt(n[2], 10) / 100
                                        , a = parseInt(n[3], 10) / 100;
                                    return e(n[5]),
                                        this.setHSL(i, r, a)
                                }
                        }
                    } else if (n = /^#([A-Fa-f0-9]+)$/.exec(t)) {
                        if (3 === (i = (n = n[1]).length))
                            return this.r = parseInt(n.charAt(0) + n.charAt(0), 16) / 255,
                                this.g = parseInt(n.charAt(1) + n.charAt(1), 16) / 255,
                                this.b = parseInt(n.charAt(2) + n.charAt(2), 16) / 255,
                                this;
                        if (6 === i)
                            return this.r = parseInt(n.charAt(0) + n.charAt(1), 16) / 255,
                                this.g = parseInt(n.charAt(2) + n.charAt(3), 16) / 255,
                                this.b = parseInt(n.charAt(4) + n.charAt(5), 16) / 255,
                                this
                    }
                    return t && 0 < t.length ? this.setColorName(t) : this
                },
                setColorName: function(t) {
                    var e = Uo[t];
                    return void 0 !== e && this.setHex(e),
                        this
                },
                clone: function() {
                    return new this.constructor(this.r,this.g,this.b)
                },
                copy: function(t) {
                    return this.r = t.r,
                        this.g = t.g,
                        this.b = t.b,
                        this
                },
                copyGammaToLinear: function(t, e) {
                    return void 0 === e && (e = 2),
                        this.r = Math.pow(t.r, e),
                        this.g = Math.pow(t.g, e),
                        this.b = Math.pow(t.b, e),
                        this
                },
                copyLinearToGamma: function(t, e) {
                    return void 0 === e && (e = 2),
                        e = 0 < e ? 1 / e : 1,
                        this.r = Math.pow(t.r, e),
                        this.g = Math.pow(t.g, e),
                        this.b = Math.pow(t.b, e),
                        this
                },
                convertGammaToLinear: function(t) {
                    return this.copyGammaToLinear(this, t),
                        this
                },
                convertLinearToGamma: function(t) {
                    return this.copyLinearToGamma(this, t),
                        this
                },
                copySRGBToLinear: function(t) {
                    return this.r = S(t.r),
                        this.g = S(t.g),
                        this.b = S(t.b),
                        this
                },
                copyLinearToSRGB: function(t) {
                    return this.r = A(t.r),
                        this.g = A(t.g),
                        this.b = A(t.b),
                        this
                },
                convertSRGBToLinear: function() {
                    return this.copySRGBToLinear(this),
                        this
                },
                convertLinearToSRGB: function() {
                    return this.copyLinearToSRGB(this),
                        this
                },
                getHex: function() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function(t) {
                    void 0 === t && (t = {
                        h: 0,
                        s: 0,
                        l: 0
                    });
                    var e, n = this.r, i = this.g, r = this.b, a = Math.max(n, i, r), o = Math.min(n, i, r), s = (o + a) / 2;
                    if (o === a)
                        o = e = 0;
                    else {
                        var c = a - o;
                        switch (o = s <= .5 ? c / (a + o) : c / (2 - a - o),
                            a) {
                            case n:
                                e = (i - r) / c + (i < r ? 6 : 0);
                                break;
                            case i:
                                e = (r - n) / c + 2;
                                break;
                            case r:
                                e = (n - i) / c + 4
                        }
                        e /= 6
                    }
                    return t.h = e,
                        t.s = o,
                        t.l = s,
                        t
                },
                getStyle: function() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function(t, e, n) {
                    return this.getHSL(Go),
                        Go.h += t,
                        Go.s += e,
                        Go.l += n,
                        this.setHSL(Go.h, Go.s, Go.l),
                        this
                },
                add: function(t) {
                    return this.r += t.r,
                        this.g += t.g,
                        this.b += t.b,
                        this
                },
                addColors: function(t, e) {
                    return this.r = t.r + e.r,
                        this.g = t.g + e.g,
                        this.b = t.b + e.b,
                        this
                },
                addScalar: function(t) {
                    return this.r += t,
                        this.g += t,
                        this.b += t,
                        this
                },
                sub: function(t) {
                    return this.r = Math.max(0, this.r - t.r),
                        this.g = Math.max(0, this.g - t.g),
                        this.b = Math.max(0, this.b - t.b),
                        this
                },
                multiply: function(t) {
                    return this.r *= t.r,
                        this.g *= t.g,
                        this.b *= t.b,
                        this
                },
                multiplyScalar: function(t) {
                    return this.r *= t,
                        this.g *= t,
                        this.b *= t,
                        this
                },
                lerp: function(t, e) {
                    return this.r += (t.r - this.r) * e,
                        this.g += (t.g - this.g) * e,
                        this.b += (t.b - this.b) * e,
                        this
                },
                lerpHSL: function(t, e) {
                    this.getHSL(Go),
                        t.getHSL(ko),
                        t = Ca.lerp(Go.h, ko.h, e);
                    var n = Ca.lerp(Go.s, ko.s, e);
                    return e = Ca.lerp(Go.l, ko.l, e),
                        this.setHSL(t, n, e),
                        this
                },
                equals: function(t) {
                    return t.r === this.r && t.g === this.g && t.b === this.b
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0),
                        this.r = t[e],
                        this.g = t[e + 1],
                        this.b = t[e + 2],
                        this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                        t[e] = this.r,
                        t[e + 1] = this.g,
                        t[e + 2] = this.b,
                        t
                },
                toJSON: function() {
                    return this.getHex()
                }
            }),
                M.NAMES = Uo,
                Object.assign(T.prototype, {
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        this.a = t.a,
                            this.b = t.b,
                            this.c = t.c,
                            this.normal.copy(t.normal),
                            this.color.copy(t.color),
                            this.materialIndex = t.materialIndex;
                        for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                            this.vertexNormals[e] = t.vertexNormals[e].clone();
                        for (e = 0,
                                 n = t.vertexColors.length; e < n; e++)
                            this.vertexColors[e] = t.vertexColors[e].clone();
                        return this
                    }
                });
            var jo = 0;
            L.prototype = Object.assign(Object.create(e.prototype), {
                constructor: L,
                isMaterial: !0,
                onBeforeCompile: function() {},
                setValues: function(t) {
                    if (void 0 !== t)
                        for (var e in t) {
                            var n = t[e];
                            if (void 0 !== n)
                                if ("shading" === e)
                                    this.flatShading = 1 === n;
                                else {
                                    var i = this[e];
                                    void 0 !== i && (i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[e] = n)
                                }
                        }
                },
                toJSON: function(t) {
                    function e(t) {
                        var e, n = [];
                        for (e in t) {
                            var i = t[e];
                            delete i.metadata,
                                n.push(i)
                        }
                        return n
                    }
                    var n = void 0 === t || "string" == typeof t;
                    n && (t = {
                        textures: {},
                        images: {}
                    });
                    var i = {
                        metadata: {
                            version: 4.5,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    return i.uuid = this.uuid,
                        i.type = this.type,
                    "" !== this.name && (i.name = this.name),
                    this.color && this.color.isColor && (i.color = this.color.getHex()),
                    void 0 !== this.roughness && (i.roughness = this.roughness),
                    void 0 !== this.metalness && (i.metalness = this.metalness),
                    this.sheen && this.sheen.isColor && (i.sheen = this.sheen.getHex()),
                    this.emissive && this.emissive.isColor && (i.emissive = this.emissive.getHex()),
                    this.emissiveIntensity && 1 !== this.emissiveIntensity && (i.emissiveIntensity = this.emissiveIntensity),
                    this.specular && this.specular.isColor && (i.specular = this.specular.getHex()),
                    void 0 !== this.shininess && (i.shininess = this.shininess),
                    void 0 !== this.clearcoat && (i.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness && (i.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap && this.clearcoatMap.isTexture && (i.clearcoatMap = this.clearcoatMap.toJSON(t).uuid),
                    this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (i.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(t).uuid),
                    this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (i.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(t).uuid,
                        i.clearcoatNormalScale = this.clearcoatNormalScale.toArray()),
                    this.map && this.map.isTexture && (i.map = this.map.toJSON(t).uuid),
                    this.matcap && this.matcap.isTexture && (i.matcap = this.matcap.toJSON(t).uuid),
                    this.alphaMap && this.alphaMap.isTexture && (i.alphaMap = this.alphaMap.toJSON(t).uuid),
                    this.lightMap && this.lightMap.isTexture && (i.lightMap = this.lightMap.toJSON(t).uuid),
                    this.aoMap && this.aoMap.isTexture && (i.aoMap = this.aoMap.toJSON(t).uuid,
                        i.aoMapIntensity = this.aoMapIntensity),
                    this.bumpMap && this.bumpMap.isTexture && (i.bumpMap = this.bumpMap.toJSON(t).uuid,
                        i.bumpScale = this.bumpScale),
                    this.normalMap && this.normalMap.isTexture && (i.normalMap = this.normalMap.toJSON(t).uuid,
                        i.normalMapType = this.normalMapType,
                        i.normalScale = this.normalScale.toArray()),
                    this.displacementMap && this.displacementMap.isTexture && (i.displacementMap = this.displacementMap.toJSON(t).uuid,
                        i.displacementScale = this.displacementScale,
                        i.displacementBias = this.displacementBias),
                    this.roughnessMap && this.roughnessMap.isTexture && (i.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                    this.metalnessMap && this.metalnessMap.isTexture && (i.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                    this.emissiveMap && this.emissiveMap.isTexture && (i.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                    this.specularMap && this.specularMap.isTexture && (i.specularMap = this.specularMap.toJSON(t).uuid),
                    this.envMap && this.envMap.isTexture && (i.envMap = this.envMap.toJSON(t).uuid,
                        i.reflectivity = this.reflectivity,
                        i.refractionRatio = this.refractionRatio,
                    void 0 !== this.combine && (i.combine = this.combine),
                    void 0 !== this.envMapIntensity && (i.envMapIntensity = this.envMapIntensity)),
                    this.gradientMap && this.gradientMap.isTexture && (i.gradientMap = this.gradientMap.toJSON(t).uuid),
                    void 0 !== this.size && (i.size = this.size),
                    void 0 !== this.sizeAttenuation && (i.sizeAttenuation = this.sizeAttenuation),
                    1 !== this.blending && (i.blending = this.blending),
                    !0 === this.flatShading && (i.flatShading = this.flatShading),
                    0 !== this.side && (i.side = this.side),
                    this.vertexColors && (i.vertexColors = !0),
                    this.opacity < 1 && (i.opacity = this.opacity),
                    !0 === this.transparent && (i.transparent = this.transparent),
                        i.depthFunc = this.depthFunc,
                        i.depthTest = this.depthTest,
                        i.depthWrite = this.depthWrite,
                        i.stencilWrite = this.stencilWrite,
                        i.stencilWriteMask = this.stencilWriteMask,
                        i.stencilFunc = this.stencilFunc,
                        i.stencilRef = this.stencilRef,
                        i.stencilFuncMask = this.stencilFuncMask,
                        i.stencilFail = this.stencilFail,
                        i.stencilZFail = this.stencilZFail,
                        i.stencilZPass = this.stencilZPass,
                    this.rotation && 0 !== this.rotation && (i.rotation = this.rotation),
                    !0 === this.polygonOffset && (i.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor && (i.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits && (i.polygonOffsetUnits = this.polygonOffsetUnits),
                    this.linewidth && 1 !== this.linewidth && (i.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (i.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (i.gapSize = this.gapSize),
                    void 0 !== this.scale && (i.scale = this.scale),
                    !0 === this.dithering && (i.dithering = !0),
                    0 < this.alphaTest && (i.alphaTest = this.alphaTest),
                    !0 === this.premultipliedAlpha && (i.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.wireframe && (i.wireframe = this.wireframe),
                    1 < this.wireframeLinewidth && (i.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap && (i.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin && (i.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.morphTargets && (i.morphTargets = !0),
                    !0 === this.morphNormals && (i.morphNormals = !0),
                    !0 === this.skinning && (i.skinning = !0),
                    !1 === this.visible && (i.visible = !1),
                    !1 === this.toneMapped && (i.toneMapped = !1),
                    "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData),
                    n && (n = e(t.textures),
                        t = e(t.images),
                    0 < n.length && (i.textures = n),
                    0 < t.length && (i.images = t)),
                        i
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    this.name = t.name,
                        this.fog = t.fog,
                        this.blending = t.blending,
                        this.side = t.side,
                        this.flatShading = t.flatShading,
                        this.vertexColors = t.vertexColors,
                        this.opacity = t.opacity,
                        this.transparent = t.transparent,
                        this.blendSrc = t.blendSrc,
                        this.blendDst = t.blendDst,
                        this.blendEquation = t.blendEquation,
                        this.blendSrcAlpha = t.blendSrcAlpha,
                        this.blendDstAlpha = t.blendDstAlpha,
                        this.blendEquationAlpha = t.blendEquationAlpha,
                        this.depthFunc = t.depthFunc,
                        this.depthTest = t.depthTest,
                        this.depthWrite = t.depthWrite,
                        this.stencilWriteMask = t.stencilWriteMask,
                        this.stencilFunc = t.stencilFunc,
                        this.stencilRef = t.stencilRef,
                        this.stencilFuncMask = t.stencilFuncMask,
                        this.stencilFail = t.stencilFail,
                        this.stencilZFail = t.stencilZFail,
                        this.stencilZPass = t.stencilZPass,
                        this.stencilWrite = t.stencilWrite;
                    var e = t.clippingPlanes
                        , n = null;
                    if (null !== e) {
                        var i = e.length;
                        n = Array(i);
                        for (var r = 0; r !== i; ++r)
                            n[r] = e[r].clone()
                    }
                    return this.clippingPlanes = n,
                        this.clipIntersection = t.clipIntersection,
                        this.clipShadows = t.clipShadows,
                        this.shadowSide = t.shadowSide,
                        this.colorWrite = t.colorWrite,
                        this.precision = t.precision,
                        this.polygonOffset = t.polygonOffset,
                        this.polygonOffsetFactor = t.polygonOffsetFactor,
                        this.polygonOffsetUnits = t.polygonOffsetUnits,
                        this.dithering = t.dithering,
                        this.alphaTest = t.alphaTest,
                        this.premultipliedAlpha = t.premultipliedAlpha,
                        this.visible = t.visible,
                        this.toneMapped = t.toneMapped,
                        this.userData = JSON.parse(JSON.stringify(t.userData)),
                        this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
                Object.defineProperty(L.prototype, "needsUpdate", {
                    set: function(t) {
                        !0 === t && this.version++
                    }
                }),
                ((E.prototype = Object.create(L.prototype)).constructor = E).prototype.isMeshBasicMaterial = !0,
                E.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.map = t.map,
                        this.lightMap = t.lightMap,
                        this.lightMapIntensity = t.lightMapIntensity,
                        this.aoMap = t.aoMap,
                        this.aoMapIntensity = t.aoMapIntensity,
                        this.specularMap = t.specularMap,
                        this.alphaMap = t.alphaMap,
                        this.envMap = t.envMap,
                        this.combine = t.combine,
                        this.reflectivity = t.reflectivity,
                        this.refractionRatio = t.refractionRatio,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.wireframeLinecap = t.wireframeLinecap,
                        this.wireframeLinejoin = t.wireframeLinejoin,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this
                }
            ;
            var Vo = new l;
            Object.defineProperty(P.prototype, "needsUpdate", {
                set: function(t) {
                    !0 === t && this.version++
                }
            }),
                Object.assign(P.prototype, {
                    isBufferAttribute: !0,
                    onUploadCallback: function() {},
                    setUsage: function(t) {
                        return this.usage = t,
                            this
                    },
                    copy: function(t) {
                        return this.name = t.name,
                            this.array = new t.array.constructor(t.array),
                            this.itemSize = t.itemSize,
                            this.count = t.count,
                            this.normalized = t.normalized,
                            this.usage = t.usage,
                            this
                    },
                    copyAt: function(t, e, n) {
                        t *= this.itemSize,
                            n *= e.itemSize;
                        for (var i = 0, r = this.itemSize; i < r; i++)
                            this.array[t + i] = e.array[n + i];
                        return this
                    },
                    copyArray: function(t) {
                        return this.array.set(t),
                            this
                    },
                    copyColorsArray: function(t) {
                        for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                            var a = t[i];
                            void 0 === a && (a = new M),
                                e[n++] = a.r,
                                e[n++] = a.g,
                                e[n++] = a.b
                        }
                        return this
                    },
                    copyVector2sArray: function(t) {
                        for (var e = this.array, i = 0, r = 0, a = t.length; r < a; r++) {
                            var o = t[r];
                            void 0 === o && (o = new n),
                                e[i++] = o.x,
                                e[i++] = o.y
                        }
                        return this
                    },
                    copyVector3sArray: function(t) {
                        for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                            var a = t[i];
                            void 0 === a && (a = new l),
                                e[n++] = a.x,
                                e[n++] = a.y,
                                e[n++] = a.z
                        }
                        return this
                    },
                    copyVector4sArray: function(t) {
                        for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                            var o = t[i];
                            void 0 === o && (o = new a),
                                e[n++] = o.x,
                                e[n++] = o.y,
                                e[n++] = o.z,
                                e[n++] = o.w
                        }
                        return this
                    },
                    applyMatrix3: function(t) {
                        for (var e = 0, n = this.count; e < n; e++)
                            Vo.x = this.getX(e),
                                Vo.y = this.getY(e),
                                Vo.z = this.getZ(e),
                                Vo.applyMatrix3(t),
                                this.setXYZ(e, Vo.x, Vo.y, Vo.z);
                        return this
                    },
                    applyMatrix4: function(t) {
                        for (var e = 0, n = this.count; e < n; e++)
                            Vo.x = this.getX(e),
                                Vo.y = this.getY(e),
                                Vo.z = this.getZ(e),
                                Vo.applyMatrix4(t),
                                this.setXYZ(e, Vo.x, Vo.y, Vo.z);
                        return this
                    },
                    applyNormalMatrix: function(t) {
                        for (var e = 0, n = this.count; e < n; e++)
                            Vo.x = this.getX(e),
                                Vo.y = this.getY(e),
                                Vo.z = this.getZ(e),
                                Vo.applyNormalMatrix(t),
                                this.setXYZ(e, Vo.x, Vo.y, Vo.z);
                        return this
                    },
                    transformDirection: function(t) {
                        for (var e = 0, n = this.count; e < n; e++)
                            Vo.x = this.getX(e),
                                Vo.y = this.getY(e),
                                Vo.z = this.getZ(e),
                                Vo.transformDirection(t),
                                this.setXYZ(e, Vo.x, Vo.y, Vo.z);
                        return this
                    },
                    set: function(t, e) {
                        return void 0 === e && (e = 0),
                            this.array.set(t, e),
                            this
                    },
                    getX: function(t) {
                        return this.array[t * this.itemSize]
                    },
                    setX: function(t, e) {
                        return this.array[t * this.itemSize] = e,
                            this
                    },
                    getY: function(t) {
                        return this.array[t * this.itemSize + 1]
                    },
                    setY: function(t, e) {
                        return this.array[t * this.itemSize + 1] = e,
                            this
                    },
                    getZ: function(t) {
                        return this.array[t * this.itemSize + 2]
                    },
                    setZ: function(t, e) {
                        return this.array[t * this.itemSize + 2] = e,
                            this
                    },
                    getW: function(t) {
                        return this.array[t * this.itemSize + 3]
                    },
                    setW: function(t, e) {
                        return this.array[t * this.itemSize + 3] = e,
                            this
                    },
                    setXY: function(t, e, n) {
                        return t *= this.itemSize,
                            this.array[t + 0] = e,
                            this.array[t + 1] = n,
                            this
                    },
                    setXYZ: function(t, e, n, i) {
                        return t *= this.itemSize,
                            this.array[t + 0] = e,
                            this.array[t + 1] = n,
                            this.array[t + 2] = i,
                            this
                    },
                    setXYZW: function(t, e, n, i, r) {
                        return t *= this.itemSize,
                            this.array[t + 0] = e,
                            this.array[t + 1] = n,
                            this.array[t + 2] = i,
                            this.array[t + 3] = r,
                            this
                    },
                    onUpload: function(t) {
                        return this.onUploadCallback = t,
                            this
                    },
                    clone: function() {
                        return new this.constructor(this.array,this.itemSize).copy(this)
                    },
                    toJSON: function() {
                        return {
                            itemSize: this.itemSize,
                            type: this.array.constructor.name,
                            array: Array.prototype.slice.call(this.array),
                            normalized: this.normalized
                        }
                    }
                }),
                (C.prototype = Object.create(P.prototype)).constructor = C,
                (O.prototype = Object.create(P.prototype)).constructor = O,
                (I.prototype = Object.create(P.prototype)).constructor = I,
                (N.prototype = Object.create(P.prototype)).constructor = N,
                (D.prototype = Object.create(P.prototype)).constructor = D,
                (R.prototype = Object.create(P.prototype)).constructor = R,
                (z.prototype = Object.create(P.prototype)).constructor = z,
                (F.prototype = Object.create(P.prototype)).constructor = F,
                (B.prototype = Object.create(P.prototype)).constructor = B,
                Object.assign(U.prototype, {
                    computeGroups: function(t) {
                        var e = []
                            , n = void 0;
                        t = t.faces;
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            if (r.materialIndex !== n) {
                                n = r.materialIndex,
                                void 0 !== a && (a.count = 3 * i - a.start,
                                    e.push(a));
                                var a = {
                                    start: 3 * i,
                                    materialIndex: n
                                }
                            }
                        }
                        void 0 !== a && (a.count = 3 * i - a.start,
                            e.push(a)),
                            this.groups = e
                    },
                    fromGeometry: function(t) {
                        var e = t.faces
                            , i = t.vertices
                            , r = t.faceVertexUvs
                            , a = r[0] && 0 < r[0].length
                            , o = r[1] && 0 < r[1].length
                            , s = t.morphTargets
                            , c = s.length;
                        if (0 < c) {
                            for (var u = [], l = 0; l < c; l++)
                                u[l] = {
                                    name: s[l].name,
                                    data: []
                                };
                            this.morphTargets.position = u
                        }
                        var h = t.morphNormals
                            , p = h.length;
                        if (0 < p) {
                            var f = [];
                            for (l = 0; l < p; l++)
                                f[l] = {
                                    name: h[l].name,
                                    data: []
                                };
                            this.morphTargets.normal = f
                        }
                        var d = t.skinIndices
                            , m = t.skinWeights
                            , g = d.length === i.length
                            , v = m.length === i.length;
                        for (0 < i.length && e.length,
                                 l = 0; l < e.length; l++) {
                            var y = e[l];
                            this.vertices.push(i[y.a], i[y.b], i[y.c]);
                            var x = y.vertexNormals;
                            for (3 === x.length ? this.normals.push(x[0], x[1], x[2]) : (x = y.normal,
                                this.normals.push(x, x, x)),
                                     3 === (x = y.vertexColors).length ? this.colors.push(x[0], x[1], x[2]) : (x = y.color,
                                         this.colors.push(x, x, x)),
                                 !0 === a && (void 0 !== (x = r[0][l]) ? this.uvs.push(x[0], x[1], x[2]) : this.uvs.push(new n, new n, new n)),
                                 !0 === o && (void 0 !== (x = r[1][l]) ? this.uvs2.push(x[0], x[1], x[2]) : this.uvs2.push(new n, new n, new n)),
                                     x = 0; x < c; x++) {
                                var _ = s[x].vertices;
                                u[x].data.push(_[y.a], _[y.b], _[y.c])
                            }
                            for (x = 0; x < p; x++)
                                _ = h[x].vertexNormals[l],
                                    f[x].data.push(_.a, _.b, _.c);
                            g && this.skinIndices.push(d[y.a], d[y.b], d[y.c]),
                            v && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                        }
                        return this.computeGroups(t),
                            this.verticesNeedUpdate = t.verticesNeedUpdate,
                            this.normalsNeedUpdate = t.normalsNeedUpdate,
                            this.colorsNeedUpdate = t.colorsNeedUpdate,
                            this.uvsNeedUpdate = t.uvsNeedUpdate,
                            this.groupsNeedUpdate = t.groupsNeedUpdate,
                        null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                        null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                            this
                    }
                });
            var Wo = 1
                , Ho = new h
                , qo = new d
                , Xo = new l
                , Yo = new g
                , Zo = new g
                , Jo = new l;
            k.prototype = Object.assign(Object.create(e.prototype), {
                constructor: k,
                isBufferGeometry: !0,
                getIndex: function() {
                    return this.index
                },
                setIndex: function(t) {
                    Array.isArray(t) ? this.index = new (65535 < G(t) ? z : D)(t,1) : this.index = t
                },
                getAttribute: function(t) {
                    return this.attributes[t]
                },
                setAttribute: function(t, e) {
                    return this.attributes[t] = e,
                        this
                },
                deleteAttribute: function(t) {
                    return delete this.attributes[t],
                        this
                },
                addGroup: function(t, e, n) {
                    this.groups.push({
                        start: t,
                        count: e,
                        materialIndex: void 0 !== n ? n : 0
                    })
                },
                clearGroups: function() {
                    this.groups = []
                },
                setDrawRange: function(t, e) {
                    this.drawRange.start = t,
                        this.drawRange.count = e
                },
                applyMatrix4: function(t) {
                    var e = this.attributes.position;
                    if (void 0 !== e && (e.applyMatrix4(t),
                        e.needsUpdate = !0),
                    void 0 !== (e = this.attributes.normal)) {
                        var n = (new i).getNormalMatrix(t);
                        e.applyNormalMatrix(n),
                            e.needsUpdate = !0
                    }
                    return void 0 !== (e = this.attributes.tangent) && (e.transformDirection(t),
                        e.needsUpdate = !0),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                        this
                },
                rotateX: function(t) {
                    return Ho.makeRotationX(t),
                        this.applyMatrix4(Ho),
                        this
                },
                rotateY: function(t) {
                    return Ho.makeRotationY(t),
                        this.applyMatrix4(Ho),
                        this
                },
                rotateZ: function(t) {
                    return Ho.makeRotationZ(t),
                        this.applyMatrix4(Ho),
                        this
                },
                translate: function(t, e, n) {
                    return Ho.makeTranslation(t, e, n),
                        this.applyMatrix4(Ho),
                        this
                },
                scale: function(t, e, n) {
                    return Ho.makeScale(t, e, n),
                        this.applyMatrix4(Ho),
                        this
                },
                lookAt: function(t) {
                    return qo.lookAt(t),
                        qo.updateMatrix(),
                        this.applyMatrix4(qo.matrix),
                        this
                },
                center: function() {
                    return this.computeBoundingBox(),
                        this.boundingBox.getCenter(Xo).negate(),
                        this.translate(Xo.x, Xo.y, Xo.z),
                        this
                },
                setFromObject: function(t) {
                    var e = t.geometry;
                    if (t.isPoints || t.isLine) {
                        t = new F(3 * e.vertices.length,3);
                        var n = new F(3 * e.colors.length,3);
                        this.setAttribute("position", t.copyVector3sArray(e.vertices)),
                            this.setAttribute("color", n.copyColorsArray(e.colors)),
                        e.lineDistances && e.lineDistances.length === e.vertices.length && (t = new F(e.lineDistances.length,1),
                            this.setAttribute("lineDistance", t.copyArray(e.lineDistances))),
                        null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                    } else
                        t.isMesh && e && e.isGeometry && this.fromGeometry(e);
                    return this
                },
                setFromPoints: function(t) {
                    for (var e = [], n = 0, i = t.length; n < i; n++) {
                        var r = t[n];
                        e.push(r.x, r.y, r.z || 0)
                    }
                    return this.setAttribute("position", new F(e,3)),
                        this
                },
                updateFromObject: function(t) {
                    var e = t.geometry;
                    if (t.isMesh) {
                        var n = e.__directGeometry;
                        if (!0 === e.elementsNeedUpdate && (n = void 0,
                            e.elementsNeedUpdate = !1),
                        void 0 === n)
                            return this.fromGeometry(e);
                        n.verticesNeedUpdate = e.verticesNeedUpdate,
                            n.normalsNeedUpdate = e.normalsNeedUpdate,
                            n.colorsNeedUpdate = e.colorsNeedUpdate,
                            n.uvsNeedUpdate = e.uvsNeedUpdate,
                            n.groupsNeedUpdate = e.groupsNeedUpdate,
                            e.verticesNeedUpdate = !1,
                            e.normalsNeedUpdate = !1,
                            e.colorsNeedUpdate = !1,
                            e.uvsNeedUpdate = !1,
                            e.groupsNeedUpdate = !1,
                            e = n
                    }
                    return !0 === e.verticesNeedUpdate && (void 0 !== (n = this.attributes.position) && (n.copyVector3sArray(e.vertices),
                        n.needsUpdate = !0),
                        e.verticesNeedUpdate = !1),
                    !0 === e.normalsNeedUpdate && (void 0 !== (n = this.attributes.normal) && (n.copyVector3sArray(e.normals),
                        n.needsUpdate = !0),
                        e.normalsNeedUpdate = !1),
                    !0 === e.colorsNeedUpdate && (void 0 !== (n = this.attributes.color) && (n.copyColorsArray(e.colors),
                        n.needsUpdate = !0),
                        e.colorsNeedUpdate = !1),
                    e.uvsNeedUpdate && (void 0 !== (n = this.attributes.uv) && (n.copyVector2sArray(e.uvs),
                        n.needsUpdate = !0),
                        e.uvsNeedUpdate = !1),
                    e.lineDistancesNeedUpdate && (void 0 !== (n = this.attributes.lineDistance) && (n.copyArray(e.lineDistances),
                        n.needsUpdate = !0),
                        e.lineDistancesNeedUpdate = !1),
                    e.groupsNeedUpdate && (e.computeGroups(t.geometry),
                        this.groups = e.groups,
                        e.groupsNeedUpdate = !1),
                        this
                },
                fromGeometry: function(t) {
                    return t.__directGeometry = (new U).fromGeometry(t),
                        this.fromDirectGeometry(t.__directGeometry)
                },
                fromDirectGeometry: function(t) {
                    var e = new Float32Array(3 * t.vertices.length);
                    for (var n in this.setAttribute("position", new P(e,3).copyVector3sArray(t.vertices)),
                    0 < t.normals.length && (e = new Float32Array(3 * t.normals.length),
                        this.setAttribute("normal", new P(e,3).copyVector3sArray(t.normals))),
                    0 < t.colors.length && (e = new Float32Array(3 * t.colors.length),
                        this.setAttribute("color", new P(e,3).copyColorsArray(t.colors))),
                    0 < t.uvs.length && (e = new Float32Array(2 * t.uvs.length),
                        this.setAttribute("uv", new P(e,2).copyVector2sArray(t.uvs))),
                    0 < t.uvs2.length && (e = new Float32Array(2 * t.uvs2.length),
                        this.setAttribute("uv2", new P(e,2).copyVector2sArray(t.uvs2))),
                        this.groups = t.groups,
                        t.morphTargets) {
                        e = [];
                        for (var i = t.morphTargets[n], r = 0, a = i.length; r < a; r++) {
                            var o = i[r]
                                , s = new F(3 * o.data.length,3);
                            s.name = o.name,
                                e.push(s.copyVector3sArray(o.data))
                        }
                        this.morphAttributes[n] = e
                    }
                    return 0 < t.skinIndices.length && (n = new F(4 * t.skinIndices.length,4),
                        this.setAttribute("skinIndex", n.copyVector4sArray(t.skinIndices))),
                    0 < t.skinWeights.length && (n = new F(4 * t.skinWeights.length,4),
                        this.setAttribute("skinWeight", n.copyVector4sArray(t.skinWeights))),
                    null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                    null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                        this
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new g);
                    var t = this.attributes.position
                        , e = this.morphAttributes.position;
                    if (void 0 !== t) {
                        if (this.boundingBox.setFromBufferAttribute(t),
                            e) {
                            t = 0;
                            for (var n = e.length; t < n; t++)
                                Yo.setFromBufferAttribute(e[t]),
                                    this.morphTargetsRelative ? (Jo.addVectors(this.boundingBox.min, Yo.min),
                                        this.boundingBox.expandByPoint(Jo),
                                        Jo.addVectors(this.boundingBox.max, Yo.max),
                                        this.boundingBox.expandByPoint(Jo)) : (this.boundingBox.expandByPoint(Yo.min),
                                        this.boundingBox.expandByPoint(Yo.max))
                        }
                    } else
                        this.boundingBox.makeEmpty();
                    isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new y);
                    var t = this.attributes.position
                        , e = this.morphAttributes.position;
                    if (t) {
                        var n = this.boundingSphere.center;
                        if (Yo.setFromBufferAttribute(t),
                            e)
                            for (var i = 0, r = e.length; i < r; i++) {
                                var a = e[i];
                                Zo.setFromBufferAttribute(a),
                                    this.morphTargetsRelative ? (Jo.addVectors(Yo.min, Zo.min),
                                        Yo.expandByPoint(Jo),
                                        Jo.addVectors(Yo.max, Zo.max),
                                        Yo.expandByPoint(Jo)) : (Yo.expandByPoint(Zo.min),
                                        Yo.expandByPoint(Zo.max))
                            }
                        Yo.getCenter(n);
                        var o = 0;
                        for (i = 0,
                                 r = t.count; i < r; i++)
                            Jo.fromBufferAttribute(t, i),
                                o = Math.max(o, n.distanceToSquared(Jo));
                        if (e)
                            for (i = 0,
                                     r = e.length; i < r; i++) {
                                a = e[i];
                                for (var s = this.morphTargetsRelative, c = 0, u = a.count; c < u; c++)
                                    Jo.fromBufferAttribute(a, c),
                                    s && (Xo.fromBufferAttribute(t, c),
                                        Jo.add(Xo)),
                                        o = Math.max(o, n.distanceToSquared(Jo))
                            }
                        this.boundingSphere.radius = Math.sqrt(o),
                            isNaN(this.boundingSphere.radius)
                    }
                },
                computeFaceNormals: function() {},
                computeVertexNormals: function() {
                    var t = this.index
                        , e = this.attributes;
                    if (e.position) {
                        var n = e.position.array;
                        if (void 0 === e.normal)
                            this.setAttribute("normal", new P(new Float32Array(n.length),3));
                        else
                            for (var i = e.normal.array, r = 0, a = i.length; r < a; r++)
                                i[r] = 0;
                        i = e.normal.array;
                        var o = new l
                            , s = new l
                            , c = new l
                            , u = new l
                            , h = new l;
                        if (t) {
                            var p = t.array;
                            for (r = 0,
                                     a = t.count; r < a; r += 3) {
                                t = 3 * p[r + 0];
                                var f = 3 * p[r + 1]
                                    , d = 3 * p[r + 2];
                                o.fromArray(n, t),
                                    s.fromArray(n, f),
                                    c.fromArray(n, d),
                                    u.subVectors(c, s),
                                    h.subVectors(o, s),
                                    u.cross(h),
                                    i[t] += u.x,
                                    i[t + 1] += u.y,
                                    i[t + 2] += u.z,
                                    i[f] += u.x,
                                    i[1 + f] += u.y,
                                    i[2 + f] += u.z,
                                    i[d] += u.x,
                                    i[1 + d] += u.y,
                                    i[2 + d] += u.z
                            }
                        } else
                            for (r = 0,
                                     a = n.length; r < a; r += 9)
                                o.fromArray(n, r),
                                    s.fromArray(n, r + 3),
                                    c.fromArray(n, r + 6),
                                    u.subVectors(c, s),
                                    h.subVectors(o, s),
                                    u.cross(h),
                                    i[r] = u.x,
                                    i[r + 1] = u.y,
                                    i[r + 2] = u.z,
                                    i[r + 3] = u.x,
                                    i[r + 4] = u.y,
                                    i[r + 5] = u.z,
                                    i[r + 6] = u.x,
                                    i[r + 7] = u.y,
                                    i[r + 8] = u.z;
                        this.normalizeNormals(),
                            e.normal.needsUpdate = !0
                    }
                },
                merge: function(t, e) {
                    if (t && t.isBufferGeometry) {
                        void 0 === e && (e = 0);
                        var n, i = this.attributes;
                        for (n in i)
                            if (void 0 !== t.attributes[n]) {
                                var r = i[n].array
                                    , a = t.attributes[n]
                                    , o = a.array
                                    , s = a.itemSize * e;
                                a = Math.min(o.length, r.length - s);
                                for (var c = 0; c < a; c++,
                                    s++)
                                    r[s] = o[c]
                            }
                        return this
                    }
                },
                normalizeNormals: function() {
                    for (var t = this.attributes.normal, e = 0, n = t.count; e < n; e++)
                        Jo.x = t.getX(e),
                            Jo.y = t.getY(e),
                            Jo.z = t.getZ(e),
                            Jo.normalize(),
                            t.setXYZ(e, Jo.x, Jo.y, Jo.z)
                },
                toNonIndexed: function() {
                    function t(t, e) {
                        var n = t.array;
                        t = t.itemSize;
                        for (var i, r = new n.constructor(e.length * t), a = 0, o = 0, s = e.length; o < s; o++) {
                            i = e[o] * t;
                            for (var c = 0; c < t; c++)
                                r[a++] = n[i++]
                        }
                        return new P(r,t)
                    }
                    if (null === this.index)
                        return this;
                    var e, n = new k, i = this.index.array, r = this.attributes;
                    for (e in r) {
                        var a = r[e];
                        a = t(a, i),
                            n.setAttribute(e, a)
                    }
                    var o = this.morphAttributes;
                    for (e in o) {
                        var s = []
                            , c = o[e];
                        r = 0;
                        for (var u = c.length; r < u; r++)
                            a = t(a = c[r], i),
                                s.push(a);
                        n.morphAttributes[e] = s
                    }
                    for (n.morphTargetsRelative = this.morphTargetsRelative,
                             r = 0,
                             e = (i = this.groups).length; r < e; r++)
                        a = i[r],
                            n.addGroup(a.start, a.count, a.materialIndex);
                    return n
                },
                toJSON: function() {
                    var t = {
                        metadata: {
                            version: 4.5,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (t.uuid = this.uuid,
                        t.type = this.type,
                    "" !== this.name && (t.name = this.name),
                    0 < Object.keys(this.userData).length && (t.userData = this.userData),
                    void 0 !== this.parameters) {
                        var e = this.parameters;
                        for (u in e)
                            void 0 !== e[u] && (t[u] = e[u]);
                        return t
                    }
                    t.data = {
                        attributes: {}
                    },
                    null !== (e = this.index) && (t.data.index = {
                        type: e.array.constructor.name,
                        array: Array.prototype.slice.call(e.array)
                    });
                    var n = this.attributes;
                    for (u in n) {
                        var i = (e = n[u]).toJSON();
                        "" !== e.name && (i.name = e.name),
                            t.data.attributes[u] = i
                    }
                    var r = !(n = {});
                    for (u in this.morphAttributes) {
                        for (var a = this.morphAttributes[u], o = [], s = 0, c = a.length; s < c; s++)
                            i = (e = a[s]).toJSON(),
                            "" !== e.name && (i.name = e.name),
                                o.push(i);
                        0 < o.length && (n[u] = o,
                            r = !0)
                    }
                    r && (t.data.morphAttributes = n,
                        t.data.morphTargetsRelative = this.morphTargetsRelative);
                    var u = this.groups;
                    return 0 < u.length && (t.data.groups = JSON.parse(JSON.stringify(u))),
                    null !== (u = this.boundingSphere) && (t.data.boundingSphere = {
                        center: u.center.toArray(),
                        radius: u.radius
                    }),
                        t
                },
                clone: function() {
                    return (new k).copy(this)
                },
                copy: function(t) {
                    var e;
                    this.index = null,
                        this.attributes = {},
                        this.morphAttributes = {},
                        this.groups = [],
                        this.boundingSphere = this.boundingBox = null,
                        this.name = t.name;
                    var n = t.index;
                    for (o in null !== n && this.setIndex(n.clone()),
                        n = t.attributes)
                        this.setAttribute(o, n[o].clone());
                    var i = t.morphAttributes;
                    for (o in i) {
                        var r = []
                            , a = i[o];
                        for (n = 0,
                                 e = a.length; n < e; n++)
                            r.push(a[n].clone());
                        this.morphAttributes[o] = r
                    }
                    this.morphTargetsRelative = t.morphTargetsRelative;
                    var o = t.groups;
                    for (n = 0,
                             e = o.length; n < e; n++)
                        i = o[n],
                            this.addGroup(i.start, i.count, i.materialIndex);
                    return null !== (o = t.boundingBox) && (this.boundingBox = o.clone()),
                    null !== (o = t.boundingSphere) && (this.boundingSphere = o.clone()),
                        this.drawRange.start = t.drawRange.start,
                        this.drawRange.count = t.drawRange.count,
                        this.userData = t.userData,
                        this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            var Ko = new h
                , Qo = new x
                , $o = new y
                , ts = new l
                , es = new l
                , ns = new l
                , is = new l
                , rs = new l
                , as = new l
                , os = new l
                , ss = new l
                , cs = new l
                , us = new n
                , ls = new n
                , hs = new n
                , ps = new l
                , fs = new l;
            j.prototype = Object.assign(Object.create(d.prototype), {
                constructor: j,
                isMesh: !0,
                copy: function(t) {
                    return d.prototype.copy.call(this, t),
                    void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()),
                    void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)),
                        this
                },
                updateMorphTargets: function() {
                    var t = this.geometry;
                    if (t.isBufferGeometry) {
                        t = t.morphAttributes;
                        var e = Object.keys(t);
                        if (0 < e.length) {
                            var n = t[e[0]];
                            if (void 0 !== n)
                                for (this.morphTargetInfluences = [],
                                         this.morphTargetDictionary = {},
                                         t = 0,
                                         e = n.length; t < e; t++) {
                                    var i = n[t].name || String(t);
                                    this.morphTargetInfluences.push(0),
                                        this.morphTargetDictionary[i] = t
                                }
                        }
                    } else
                        void 0 !== (t = t.morphTargets) && t.length
                },
                raycast: function(t, e) {
                    var i = this.geometry
                        , r = this.material
                        , a = this.matrixWorld;
                    if (void 0 !== r && (null === i.boundingSphere && i.computeBoundingSphere(),
                        $o.copy(i.boundingSphere),
                        $o.applyMatrix4(a),
                    !1 !== t.ray.intersectsSphere($o) && (Ko.getInverse(a),
                        Qo.copy(t.ray).applyMatrix4(Ko),
                    null === i.boundingBox || !1 !== Qo.intersectsBox(i.boundingBox))))
                        if (i.isBufferGeometry) {
                            var o = i.index;
                            a = i.attributes.position;
                            var s, c, u = i.morphAttributes.position, l = i.morphTargetsRelative, h = i.attributes.uv, p = i.attributes.uv2, f = i.groups, d = i.drawRange;
                            if (null !== o)
                                if (Array.isArray(r)) {
                                    var m = 0;
                                    for (s = f.length; m < s; m++) {
                                        var g = f[m]
                                            , v = r[g.materialIndex]
                                            , y = Math.max(g.start, d.start);
                                        for (c = i = Math.min(g.start + g.count, d.start + d.count); y < c; y += 3) {
                                            i = o.getX(y);
                                            var x = o.getX(y + 1)
                                                , _ = o.getX(y + 2);
                                            (i = W(this, v, t, Qo, a, u, l, h, p, i, x, _)) && (i.faceIndex = Math.floor(y / 3),
                                                i.face.materialIndex = g.materialIndex,
                                                e.push(i))
                                        }
                                    }
                                } else
                                    for (m = y = Math.max(0, d.start),
                                             s = i = Math.min(o.count, d.start + d.count); m < s; m += 3)
                                        i = o.getX(m),
                                            x = o.getX(m + 1),
                                            _ = o.getX(m + 2),
                                        (i = W(this, r, t, Qo, a, u, l, h, p, i, x, _)) && (i.faceIndex = Math.floor(m / 3),
                                            e.push(i));
                            else if (void 0 !== a)
                                if (Array.isArray(r))
                                    for (m = 0,
                                             s = f.length; m < s; m++)
                                        for (v = r[(g = f[m]).materialIndex],
                                                 y = Math.max(g.start, d.start),
                                                 c = i = Math.min(g.start + g.count, d.start + d.count); y < c; y += 3)
                                            (i = W(this, v, t, Qo, a, u, l, h, p, i = y, x = y + 1, _ = y + 2)) && (i.faceIndex = Math.floor(y / 3),
                                                i.face.materialIndex = g.materialIndex,
                                                e.push(i));
                                else
                                    for (m = y = Math.max(0, d.start),
                                             s = i = Math.min(a.count, d.start + d.count); m < s; m += 3)
                                        (i = W(this, r, t, Qo, a, u, l, h, p, i = m, x = m + 1, _ = m + 2)) && (i.faceIndex = Math.floor(m / 3),
                                            e.push(i))
                        } else if (i.isGeometry)
                            for (a = Array.isArray(r),
                                     u = i.vertices,
                                     l = i.faces,
                                 0 < (i = i.faceVertexUvs[0]).length && (o = i),
                                     d = 0,
                                     m = l.length; d < m; d++)
                                s = l[d],
                                void 0 !== (i = a ? r[s.materialIndex] : r) && (h = u[s.a],
                                    p = u[s.b],
                                    f = u[s.c],
                                    i = V(this, i, t, Qo, h, p, f, ps)) && (o && o[d] && (g = o[d],
                                    us.copy(g[0]),
                                    ls.copy(g[1]),
                                    hs.copy(g[2]),
                                    i.uv = b.getUV(ps, h, p, f, us, ls, hs, new n)),
                                    i.face = s,
                                    i.faceIndex = d,
                                    e.push(i))
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            });
            var ds = 0
                , ms = new h
                , gs = new d
                , vs = new l;
            H.prototype = Object.assign(Object.create(e.prototype), {
                constructor: H,
                isGeometry: !0,
                applyMatrix4: function(t) {
                    for (var e = (new i).getNormalMatrix(t), n = 0, r = this.vertices.length; n < r; n++)
                        this.vertices[n].applyMatrix4(t);
                    for (n = 0,
                             r = this.faces.length; n < r; n++) {
                        (t = this.faces[n]).normal.applyMatrix3(e).normalize();
                        for (var a = 0, o = t.vertexNormals.length; a < o; a++)
                            t.vertexNormals[a].applyMatrix3(e).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                        this.normalsNeedUpdate = this.verticesNeedUpdate = !0,
                        this
                },
                rotateX: function(t) {
                    return ms.makeRotationX(t),
                        this.applyMatrix4(ms),
                        this
                },
                rotateY: function(t) {
                    return ms.makeRotationY(t),
                        this.applyMatrix4(ms),
                        this
                },
                rotateZ: function(t) {
                    return ms.makeRotationZ(t),
                        this.applyMatrix4(ms),
                        this
                },
                translate: function(t, e, n) {
                    return ms.makeTranslation(t, e, n),
                        this.applyMatrix4(ms),
                        this
                },
                scale: function(t, e, n) {
                    return ms.makeScale(t, e, n),
                        this.applyMatrix4(ms),
                        this
                },
                lookAt: function(t) {
                    return gs.lookAt(t),
                        gs.updateMatrix(),
                        this.applyMatrix4(gs.matrix),
                        this
                },
                fromBufferGeometry: function(t) {
                    function e(t, e, r, a) {
                        var o = void 0 === c ? [] : [i.colors[t].clone(), i.colors[e].clone(), i.colors[r].clone()];
                        a = new T(t,e,r,void 0 === s ? [] : [(new l).fromArray(s, 3 * t), (new l).fromArray(s, 3 * e), (new l).fromArray(s, 3 * r)],o,a),
                            i.faces.push(a),
                        void 0 !== u && i.faceVertexUvs[0].push([(new n).fromArray(u, 2 * t), (new n).fromArray(u, 2 * e), (new n).fromArray(u, 2 * r)]),
                        void 0 !== h && i.faceVertexUvs[1].push([(new n).fromArray(h, 2 * t), (new n).fromArray(h, 2 * e), (new n).fromArray(h, 2 * r)])
                    }
                    var i = this
                        , r = null !== t.index ? t.index.array : void 0
                        , a = t.attributes;
                    if (void 0 === a.position)
                        return this;
                    var o = a.position.array
                        , s = void 0 !== a.normal ? a.normal.array : void 0
                        , c = void 0 !== a.color ? a.color.array : void 0
                        , u = void 0 !== a.uv ? a.uv.array : void 0
                        , h = void 0 !== a.uv2 ? a.uv2.array : void 0;
                    for (void 0 !== h && (this.faceVertexUvs[1] = []),
                             a = 0; a < o.length; a += 3)
                        i.vertices.push((new l).fromArray(o, a)),
                        void 0 !== c && i.colors.push((new M).fromArray(c, a));
                    var p = t.groups;
                    if (0 < p.length)
                        for (a = 0; a < p.length; a++) {
                            var f = (o = p[a]).start
                                , d = f;
                            for (f += o.count; d < f; d += 3)
                                void 0 !== r ? e(r[d], r[d + 1], r[d + 2], o.materialIndex) : e(d, d + 1, d + 2, o.materialIndex)
                        }
                    else if (void 0 !== r)
                        for (a = 0; a < r.length; a += 3)
                            e(r[a], r[a + 1], r[a + 2]);
                    else
                        for (a = 0; a < o.length / 3; a += 3)
                            e(a, a + 1, a + 2);
                    return this.computeFaceNormals(),
                    null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                    null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                        this
                },
                center: function() {
                    return this.computeBoundingBox(),
                        this.boundingBox.getCenter(vs).negate(),
                        this.translate(vs.x, vs.y, vs.z),
                        this
                },
                normalize: function() {
                    this.computeBoundingSphere();
                    var t = this.boundingSphere.center
                        , e = this.boundingSphere.radius;
                    e = 0 === e ? 1 : 1 / e;
                    var n = new h;
                    return n.set(e, 0, 0, -e * t.x, 0, e, 0, -e * t.y, 0, 0, e, -e * t.z, 0, 0, 0, 1),
                        this.applyMatrix4(n),
                        this
                },
                computeFaceNormals: function() {
                    for (var t = new l, e = new l, n = 0, i = this.faces.length; n < i; n++) {
                        var r = this.faces[n]
                            , a = this.vertices[r.a]
                            , o = this.vertices[r.b];
                        t.subVectors(this.vertices[r.c], o),
                            e.subVectors(a, o),
                            t.cross(e),
                            t.normalize(),
                            r.normal.copy(t)
                    }
                },
                computeVertexNormals: function(t) {
                    var e;
                    void 0 === t && (t = !0);
                    var n = Array(this.vertices.length)
                        , i = 0;
                    for (e = this.vertices.length; i < e; i++)
                        n[i] = new l;
                    if (t) {
                        var r = new l
                            , a = new l;
                        for (t = 0,
                                 i = this.faces.length; t < i; t++) {
                            e = this.faces[t];
                            var o = this.vertices[e.a]
                                , s = this.vertices[e.b]
                                , c = this.vertices[e.c];
                            r.subVectors(c, s),
                                a.subVectors(o, s),
                                r.cross(a),
                                n[e.a].add(r),
                                n[e.b].add(r),
                                n[e.c].add(r)
                        }
                    } else
                        for (this.computeFaceNormals(),
                                 t = 0,
                                 i = this.faces.length; t < i; t++)
                            n[(e = this.faces[t]).a].add(e.normal),
                                n[e.b].add(e.normal),
                                n[e.c].add(e.normal);
                    for (i = 0,
                             e = this.vertices.length; i < e; i++)
                        n[i].normalize();
                    for (t = 0,
                             i = this.faces.length; t < i; t++)
                        3 === (o = (e = this.faces[t]).vertexNormals).length ? (o[0].copy(n[e.a]),
                            o[1].copy(n[e.b]),
                            o[2].copy(n[e.c])) : (o[0] = n[e.a].clone(),
                            o[1] = n[e.b].clone(),
                            o[2] = n[e.c].clone());
                    0 < this.faces.length && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function() {
                    var t;
                    this.computeFaceNormals();
                    var e = 0;
                    for (t = this.faces.length; e < t; e++) {
                        var n = this.faces[e]
                            , i = n.vertexNormals;
                        3 === i.length ? (i[0].copy(n.normal),
                            i[1].copy(n.normal),
                            i[2].copy(n.normal)) : (i[0] = n.normal.clone(),
                            i[1] = n.normal.clone(),
                            i[2] = n.normal.clone())
                    }
                    0 < this.faces.length && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function() {
                    var t, e, n = 0;
                    for (e = this.faces.length; n < e; n++) {
                        var i = this.faces[n];
                        i.__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(),
                        i.__originalVertexNormals || (i.__originalVertexNormals = []);
                        var r = 0;
                        for (t = i.vertexNormals.length; r < t; r++)
                            i.__originalVertexNormals[r] ? i.__originalVertexNormals[r].copy(i.vertexNormals[r]) : i.__originalVertexNormals[r] = i.vertexNormals[r].clone()
                    }
                    var a = new H;
                    for (a.faces = this.faces,
                             r = 0,
                             t = this.morphTargets.length; r < t; r++) {
                        if (!this.morphNormals[r]) {
                            this.morphNormals[r] = {},
                                this.morphNormals[r].faceNormals = [],
                                this.morphNormals[r].vertexNormals = [],
                                i = this.morphNormals[r].faceNormals;
                            var o = this.morphNormals[r].vertexNormals;
                            for (n = 0,
                                     e = this.faces.length; n < e; n++) {
                                var s = new l
                                    , c = {
                                    a: new l,
                                    b: new l,
                                    c: new l
                                };
                                i.push(s),
                                    o.push(c)
                            }
                        }
                        for (o = this.morphNormals[r],
                                 a.vertices = this.morphTargets[r].vertices,
                                 a.computeFaceNormals(),
                                 a.computeVertexNormals(),
                                 n = 0,
                                 e = this.faces.length; n < e; n++)
                            i = this.faces[n],
                                s = o.faceNormals[n],
                                c = o.vertexNormals[n],
                                s.copy(i.normal),
                                c.a.copy(i.vertexNormals[0]),
                                c.b.copy(i.vertexNormals[1]),
                                c.c.copy(i.vertexNormals[2])
                    }
                    for (n = 0,
                             e = this.faces.length; n < e; n++)
                        (i = this.faces[n]).normal = i.__originalFaceNormal,
                            i.vertexNormals = i.__originalVertexNormals
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new g),
                        this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new y),
                        this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function(t, e, n) {
                    if (t && t.isGeometry) {
                        var r, a = this.vertices.length, o = this.vertices, s = t.vertices, c = this.faces, u = t.faces, l = this.colors, h = t.colors;
                        void 0 === n && (n = 0),
                        void 0 !== e && (r = (new i).getNormalMatrix(e));
                        for (var p = 0, f = s.length; p < f; p++) {
                            var d = s[p].clone();
                            void 0 !== e && d.applyMatrix4(e),
                                o.push(d)
                        }
                        for (p = 0,
                                 f = h.length; p < f; p++)
                            l.push(h[p].clone());
                        for (p = 0,
                                 f = u.length; p < f; p++) {
                            var m = (s = u[p]).vertexNormals;
                            for (h = s.vertexColors,
                                     (l = new T(s.a + a,s.b + a,s.c + a)).normal.copy(s.normal),
                                 void 0 !== r && l.normal.applyMatrix3(r).normalize(),
                                     e = 0,
                                     o = m.length; e < o; e++)
                                d = m[e].clone(),
                                void 0 !== r && d.applyMatrix3(r).normalize(),
                                    l.vertexNormals.push(d);
                            for (l.color.copy(s.color),
                                     e = 0,
                                     o = h.length; e < o; e++)
                                d = h[e],
                                    l.vertexColors.push(d.clone());
                            l.materialIndex = s.materialIndex + n,
                                c.push(l)
                        }
                        for (p = 0,
                                 f = t.faceVertexUvs.length; p < f; p++)
                            for (n = t.faceVertexUvs[p],
                                 void 0 === this.faceVertexUvs[p] && (this.faceVertexUvs[p] = []),
                                     e = 0,
                                     o = n.length; e < o; e++) {
                                for (a = [],
                                         c = 0,
                                         u = (r = n[e]).length; c < u; c++)
                                    a.push(r[c].clone());
                                this.faceVertexUvs[p].push(a)
                            }
                    }
                },
                mergeMesh: function(t) {
                    t && t.isMesh && (t.matrixAutoUpdate && t.updateMatrix(),
                        this.merge(t.geometry, t.matrix))
                },
                mergeVertices: function() {
                    var t, e = {}, n = [], i = [], r = Math.pow(10, 4), a = 0;
                    for (t = this.vertices.length; a < t; a++) {
                        var o = this.vertices[a];
                        void 0 === e[o = Math.round(o.x * r) + "_" + Math.round(o.y * r) + "_" + Math.round(o.z * r)] ? (e[o] = a,
                            n.push(this.vertices[a]),
                            i[a] = n.length - 1) : i[a] = i[e[o]]
                    }
                    for (e = [],
                             a = 0,
                             t = this.faces.length; a < t; a++)
                        for ((r = this.faces[a]).a = i[r.a],
                                 r.b = i[r.b],
                                 r.c = i[r.c],
                                 r = [r.a, r.b, r.c],
                                 o = 0; o < 3; o++)
                            if (r[o] === r[(o + 1) % 3]) {
                                e.push(a);
                                break
                            }
                    for (a = e.length - 1; 0 <= a; a--)
                        for (r = e[a],
                                 this.faces.splice(r, 1),
                                 i = 0,
                                 t = this.faceVertexUvs.length; i < t; i++)
                            this.faceVertexUvs[i].splice(r, 1);
                    return a = this.vertices.length - n.length,
                        this.vertices = n,
                        a
                },
                setFromPoints: function(t) {
                    this.vertices = [];
                    for (var e = 0, n = t.length; e < n; e++) {
                        var i = t[e];
                        this.vertices.push(new l(i.x,i.y,i.z || 0))
                    }
                    return this
                },
                sortFacesByMaterialIndex: function() {
                    for (var t = this.faces, e = t.length, n = 0; n < e; n++)
                        t[n]._id = n;
                    t.sort((function(t, e) {
                            return t.materialIndex - e.materialIndex
                        }
                    ));
                    var i, r, a = this.faceVertexUvs[0], o = this.faceVertexUvs[1];
                    for (a && a.length === e && (i = []),
                         o && o.length === e && (r = []),
                             n = 0; n < e; n++) {
                        var s = t[n]._id;
                        i && i.push(a[s]),
                        r && r.push(o[s])
                    }
                    i && (this.faceVertexUvs[0] = i),
                    r && (this.faceVertexUvs[1] = r)
                },
                toJSON: function() {
                    function t(t, e, n) {
                        return n ? t | 1 << e : t & ~(1 << e)
                    }
                    function e(t) {
                        var e = t.x.toString() + t.y.toString() + t.z.toString();
                        return void 0 !== u[e] || (u[e] = c.length / 3,
                            c.push(t.x, t.y, t.z)),
                            u[e]
                    }
                    function n(t) {
                        var e = t.r.toString() + t.g.toString() + t.b.toString();
                        return void 0 !== h[e] || (h[e] = l.length,
                            l.push(t.getHex())),
                            h[e]
                    }
                    function i(t) {
                        var e = t.x.toString() + t.y.toString();
                        return void 0 !== f[e] || (f[e] = p.length / 2,
                            p.push(t.x, t.y)),
                            f[e]
                    }
                    var r = {
                        metadata: {
                            version: 4.5,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (r.uuid = this.uuid,
                        r.type = this.type,
                    "" !== this.name && (r.name = this.name),
                    void 0 !== this.parameters) {
                        var a, o = this.parameters;
                        for (a in o)
                            void 0 !== o[a] && (r[a] = o[a]);
                        return r
                    }
                    for (o = [],
                             a = 0; a < this.vertices.length; a++) {
                        var s = this.vertices[a];
                        o.push(s.x, s.y, s.z)
                    }
                    s = [];
                    var c = []
                        , u = {}
                        , l = []
                        , h = {}
                        , p = []
                        , f = {};
                    for (a = 0; a < this.faces.length; a++) {
                        var d = this.faces[a]
                            , m = void 0 !== this.faceVertexUvs[0][a]
                            , g = 0 < d.normal.length()
                            , v = 0 < d.vertexNormals.length
                            , y = 1 !== d.color.r || 1 !== d.color.g || 1 !== d.color.b
                            , x = 0 < d.vertexColors.length
                            , _ = 0;
                        _ = t(_, 0, 0),
                            _ = t(_, 1, !0),
                            _ = t(_, 2, !1),
                            _ = t(_, 3, m),
                            _ = t(_, 4, g),
                            _ = t(_, 5, v),
                            _ = t(_, 6, y),
                            _ = t(_, 7, x),
                            s.push(_),
                            s.push(d.a, d.b, d.c),
                            s.push(d.materialIndex),
                        m && (m = this.faceVertexUvs[0][a],
                            s.push(i(m[0]), i(m[1]), i(m[2]))),
                        g && s.push(e(d.normal)),
                        v && (g = d.vertexNormals,
                            s.push(e(g[0]), e(g[1]), e(g[2]))),
                        y && s.push(n(d.color)),
                        x && (d = d.vertexColors,
                            s.push(n(d[0]), n(d[1]), n(d[2])))
                    }
                    return r.data = {},
                        r.data.vertices = o,
                        r.data.normals = c,
                    0 < l.length && (r.data.colors = l),
                    0 < p.length && (r.data.uvs = [p]),
                        r.data.faces = s,
                        r
                },
                clone: function() {
                    return (new H).copy(this)
                },
                copy: function(t) {
                    var e, n, i;
                    this.vertices = [],
                        this.colors = [],
                        this.faces = [],
                        this.faceVertexUvs = [[]],
                        this.morphTargets = [],
                        this.morphNormals = [],
                        this.skinWeights = [],
                        this.skinIndices = [],
                        this.lineDistances = [],
                        this.boundingSphere = this.boundingBox = null,
                        this.name = t.name;
                    var r = t.vertices
                        , a = 0;
                    for (e = r.length; a < e; a++)
                        this.vertices.push(r[a].clone());
                    for (a = 0,
                             e = (r = t.colors).length; a < e; a++)
                        this.colors.push(r[a].clone());
                    for (a = 0,
                             e = (r = t.faces).length; a < e; a++)
                        this.faces.push(r[a].clone());
                    for (a = 0,
                             e = t.faceVertexUvs.length; a < e; a++) {
                        var o = t.faceVertexUvs[a];
                        for (void 0 === this.faceVertexUvs[a] && (this.faceVertexUvs[a] = []),
                                 r = 0,
                                 n = o.length; r < n; r++) {
                            var s = o[r]
                                , c = []
                                , u = 0;
                            for (i = s.length; u < i; u++)
                                c.push(s[u].clone());
                            this.faceVertexUvs[a].push(c)
                        }
                    }
                    for (a = 0,
                             e = (u = t.morphTargets).length; a < e; a++) {
                        if ((i = {}).name = u[a].name,
                        void 0 !== u[a].vertices)
                            for (i.vertices = [],
                                     r = 0,
                                     n = u[a].vertices.length; r < n; r++)
                                i.vertices.push(u[a].vertices[r].clone());
                        if (void 0 !== u[a].normals)
                            for (i.normals = [],
                                     r = 0,
                                     n = u[a].normals.length; r < n; r++)
                                i.normals.push(u[a].normals[r].clone());
                        this.morphTargets.push(i)
                    }
                    for (a = 0,
                             e = (u = t.morphNormals).length; a < e; a++) {
                        if (i = {},
                        void 0 !== u[a].vertexNormals)
                            for (i.vertexNormals = [],
                                     r = 0,
                                     n = u[a].vertexNormals.length; r < n; r++)
                                o = u[a].vertexNormals[r],
                                    (s = {}).a = o.a.clone(),
                                    s.b = o.b.clone(),
                                    s.c = o.c.clone(),
                                    i.vertexNormals.push(s);
                        if (void 0 !== u[a].faceNormals)
                            for (i.faceNormals = [],
                                     r = 0,
                                     n = u[a].faceNormals.length; r < n; r++)
                                i.faceNormals.push(u[a].faceNormals[r].clone());
                        this.morphNormals.push(i)
                    }
                    for (a = 0,
                             e = (r = t.skinWeights).length; a < e; a++)
                        this.skinWeights.push(r[a].clone());
                    for (a = 0,
                             e = (r = t.skinIndices).length; a < e; a++)
                        this.skinIndices.push(r[a].clone());
                    for (a = 0,
                             e = (r = t.lineDistances).length; a < e; a++)
                        this.lineDistances.push(r[a]);
                    return null !== (a = t.boundingBox) && (this.boundingBox = a.clone()),
                    null !== (a = t.boundingSphere) && (this.boundingSphere = a.clone()),
                        this.elementsNeedUpdate = t.elementsNeedUpdate,
                        this.verticesNeedUpdate = t.verticesNeedUpdate,
                        this.uvsNeedUpdate = t.uvsNeedUpdate,
                        this.normalsNeedUpdate = t.normalsNeedUpdate,
                        this.colorsNeedUpdate = t.colorsNeedUpdate,
                        this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
                        this.groupsNeedUpdate = t.groupsNeedUpdate,
                        this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            var ys, xs, _s = ((xs = H) && (Ss.__proto__ = xs),
                (Ss.prototype = Object.create(xs && xs.prototype)).constructor = Ss), bs = ((ys = k) && (ws.__proto__ = ys),
                (ws.prototype = Object.create(ys && ys.prototype)).constructor = ws), Ms = {
                clone: q,
                merge: X
            };
            function ws(t, e, n, i, r, a) {
                function o(t, e, n, i, r, a, o, m, g, v, y) {
                    var x = a / g
                        , _ = o / v
                        , b = a / 2
                        , M = o / 2
                        , w = m / 2;
                    o = g + 1;
                    var S, A, T = v + 1, L = a = 0, E = new l;
                    for (A = 0; A < T; A++) {
                        var P = A * _ - M;
                        for (S = 0; S < o; S++)
                            E[t] = (S * x - b) * i,
                                E[e] = P * r,
                                E[n] = w,
                                u.push(E.x, E.y, E.z),
                                E[t] = 0,
                                E[e] = 0,
                                E[n] = 0 < m ? 1 : -1,
                                h.push(E.x, E.y, E.z),
                                p.push(S / g),
                                p.push(1 - A / v),
                                a += 1
                    }
                    for (A = 0; A < v; A++)
                        for (S = 0; S < g; S++)
                            t = f + S + o * (A + 1),
                                e = f + (S + 1) + o * (A + 1),
                                n = f + (S + 1) + o * A,
                                c.push(f + S + o * A, t, n),
                                c.push(t, e, n),
                                L += 6;
                    s.addGroup(d, L, y),
                        d += L,
                        f += a
                }
                ys.call(this),
                    this.type = "BoxBufferGeometry",
                    this.parameters = {
                        width: t,
                        height: e,
                        depth: n,
                        widthSegments: i,
                        heightSegments: r,
                        depthSegments: a
                    };
                var s = this;
                t = t || 1,
                    e = e || 1,
                    n = n || 1,
                    i = Math.floor(i) || 1,
                    r = Math.floor(r) || 1,
                    a = Math.floor(a) || 1;
                var c = []
                    , u = []
                    , h = []
                    , p = []
                    , f = 0
                    , d = 0;
                o("z", "y", "x", -1, -1, n, e, t, a, r, 0),
                    o("z", "y", "x", 1, -1, n, e, -t, a, r, 1),
                    o("x", "z", "y", 1, 1, t, n, e, i, a, 2),
                    o("x", "z", "y", 1, -1, t, n, -e, i, a, 3),
                    o("x", "y", "z", 1, -1, t, e, n, i, r, 4),
                    o("x", "y", "z", -1, -1, t, e, -n, i, r, 5),
                    this.setIndex(c),
                    this.setAttribute("position", new F(u,3)),
                    this.setAttribute("normal", new F(h,3)),
                    this.setAttribute("uv", new F(p,2))
            }
            function Ss(t, e, n, i, r, a) {
                xs.call(this),
                    this.type = "BoxGeometry",
                    this.parameters = {
                        width: t,
                        height: e,
                        depth: n,
                        widthSegments: i,
                        heightSegments: r,
                        depthSegments: a
                    },
                    this.fromBufferGeometry(new bs(t,e,n,i,r,a)),
                    this.mergeVertices()
            }
            ((Y.prototype = Object.create(L.prototype)).constructor = Y).prototype.isShaderMaterial = !0,
                Y.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.fragmentShader = t.fragmentShader,
                        this.vertexShader = t.vertexShader,
                        this.uniforms = q(t.uniforms),
                        this.defines = Object.assign({}, t.defines),
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.lights = t.lights,
                        this.clipping = t.clipping,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this.extensions = t.extensions,
                        this
                }
                ,
                Y.prototype.toJSON = function(t) {
                    var e = L.prototype.toJSON.call(this, t);
                    for (var n in e.uniforms = {},
                        this.uniforms) {
                        var i = this.uniforms[n].value;
                        e.uniforms[n] = i && i.isTexture ? {
                            type: "t",
                            value: i.toJSON(t).uuid
                        } : i && i.isColor ? {
                            type: "c",
                            value: i.getHex()
                        } : i && i.isVector2 ? {
                            type: "v2",
                            value: i.toArray()
                        } : i && i.isVector3 ? {
                            type: "v3",
                            value: i.toArray()
                        } : i && i.isVector4 ? {
                            type: "v4",
                            value: i.toArray()
                        } : i && i.isMatrix3 ? {
                            type: "m3",
                            value: i.toArray()
                        } : i && i.isMatrix4 ? {
                            type: "m4",
                            value: i.toArray()
                        } : {
                            value: i
                        }
                    }
                    for (var r in 0 < Object.keys(this.defines).length && (e.defines = this.defines),
                        e.vertexShader = this.vertexShader,
                        e.fragmentShader = this.fragmentShader,
                        t = {},
                        this.extensions)
                        !0 === this.extensions[r] && (t[r] = !0);
                    return 0 < Object.keys(t).length && (e.extensions = t),
                        e
                }
                ,
                Z.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: Z,
                    isCamera: !0,
                    copy: function(t, e) {
                        return d.prototype.copy.call(this, t, e),
                            this.matrixWorldInverse.copy(t.matrixWorldInverse),
                            this.projectionMatrix.copy(t.projectionMatrix),
                            this.projectionMatrixInverse.copy(t.projectionMatrixInverse),
                            this
                    },
                    getWorldDirection: function(t) {
                        void 0 === t && (t = new l),
                            this.updateMatrixWorld(!0);
                        var e = this.matrixWorld.elements;
                        return t.set(-e[8], -e[9], -e[10]).normalize()
                    },
                    updateMatrixWorld: function(t) {
                        d.prototype.updateMatrixWorld.call(this, t),
                            this.matrixWorldInverse.getInverse(this.matrixWorld)
                    },
                    updateWorldMatrix: function(t, e) {
                        d.prototype.updateWorldMatrix.call(this, t, e),
                            this.matrixWorldInverse.getInverse(this.matrixWorld)
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    }
                }),
                J.prototype = Object.assign(Object.create(Z.prototype), {
                    constructor: J,
                    isPerspectiveCamera: !0,
                    copy: function(t, e) {
                        return Z.prototype.copy.call(this, t, e),
                            this.fov = t.fov,
                            this.zoom = t.zoom,
                            this.near = t.near,
                            this.far = t.far,
                            this.focus = t.focus,
                            this.aspect = t.aspect,
                            this.view = null === t.view ? null : Object.assign({}, t.view),
                            this.filmGauge = t.filmGauge,
                            this.filmOffset = t.filmOffset,
                            this
                    },
                    setFocalLength: function(t) {
                        t = .5 * this.getFilmHeight() / t,
                            this.fov = 2 * Ca.RAD2DEG * Math.atan(t),
                            this.updateProjectionMatrix()
                    },
                    getFocalLength: function() {
                        var t = Math.tan(.5 * Ca.DEG2RAD * this.fov);
                        return .5 * this.getFilmHeight() / t
                    },
                    getEffectiveFOV: function() {
                        return 2 * Ca.RAD2DEG * Math.atan(Math.tan(.5 * Ca.DEG2RAD * this.fov) / this.zoom)
                    },
                    getFilmWidth: function() {
                        return this.filmGauge * Math.min(this.aspect, 1)
                    },
                    getFilmHeight: function() {
                        return this.filmGauge / Math.max(this.aspect, 1)
                    },
                    setViewOffset: function(t, e, n, i, r, a) {
                        this.aspect = t / e,
                        null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }),
                            this.view.enabled = !0,
                            this.view.fullWidth = t,
                            this.view.fullHeight = e,
                            this.view.offsetX = n,
                            this.view.offsetY = i,
                            this.view.width = r,
                            this.view.height = a,
                            this.updateProjectionMatrix()
                    },
                    clearViewOffset: function() {
                        null !== this.view && (this.view.enabled = !1),
                            this.updateProjectionMatrix()
                    },
                    updateProjectionMatrix: function() {
                        var t = this.near
                            , e = t * Math.tan(.5 * Ca.DEG2RAD * this.fov) / this.zoom
                            , n = 2 * e
                            , i = this.aspect * n
                            , r = -.5 * i
                            , a = this.view;
                        if (null !== this.view && this.view.enabled) {
                            var o = a.fullWidth
                                , s = a.fullHeight;
                            r += a.offsetX * i / o,
                                e -= a.offsetY * n / s,
                                i *= a.width / o,
                                n *= a.height / s
                        }
                        0 !== (a = this.filmOffset) && (r += t * a / this.getFilmWidth()),
                            this.projectionMatrix.makePerspective(r, r + i, e, e - n, t, this.far),
                            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                    },
                    toJSON: function(t) {
                        return (t = d.prototype.toJSON.call(this, t)).object.fov = this.fov,
                            t.object.zoom = this.zoom,
                            t.object.near = this.near,
                            t.object.far = this.far,
                            t.object.focus = this.focus,
                            t.object.aspect = this.aspect,
                        null !== this.view && (t.object.view = Object.assign({}, this.view)),
                            t.object.filmGauge = this.filmGauge,
                            t.object.filmOffset = this.filmOffset,
                            t
                    }
                }),
                (K.prototype = Object.create(d.prototype)).constructor = K,
                ((Q.prototype = Object.create(o.prototype)).constructor = Q).prototype.isWebGLCubeRenderTarget = !0,
                Q.prototype.fromEquirectangularTexture = function(t, e) {
                    this.texture.type = e.type,
                        this.texture.format = e.format,
                        this.texture.encoding = e.encoding;
                    var n = new m
                        , i = new Y({
                        type: "CubemapFromEquirect",
                        uniforms: q({
                            tEquirect: {
                                value: null
                            }
                        }),
                        vertexShader: "varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                        fragmentShader: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}",
                        side: 1,
                        blending: 0
                    });
                    return i.uniforms.tEquirect.value = e,
                        e = new j(new bs(5,5,5),i),
                        n.add(e),
                        (i = new K(1,10,1)).renderTarget = this,
                        i.renderTarget.texture.name = "CubeCameraTexture",
                        i.update(t, n),
                        e.geometry.dispose(),
                        e.material.dispose(),
                        this
                }
                ,
                (($.prototype = Object.create(r.prototype)).constructor = $).prototype.isDataTexture = !0;
            var As = new y
                , Ts = new l;
            Object.assign(tt.prototype, {
                set: function(t, e, n, i, r, a) {
                    var o = this.planes;
                    return o[0].copy(t),
                        o[1].copy(e),
                        o[2].copy(n),
                        o[3].copy(i),
                        o[4].copy(r),
                        o[5].copy(a),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    for (var e = this.planes, n = 0; n < 6; n++)
                        e[n].copy(t.planes[n]);
                    return this
                },
                setFromProjectionMatrix: function(t) {
                    var e = this.planes
                        , n = t.elements;
                    t = n[0];
                    var i = n[1]
                        , r = n[2]
                        , a = n[3]
                        , o = n[4]
                        , s = n[5]
                        , c = n[6]
                        , u = n[7]
                        , l = n[8]
                        , h = n[9]
                        , p = n[10]
                        , f = n[11]
                        , d = n[12]
                        , m = n[13]
                        , g = n[14];
                    return n = n[15],
                        e[0].setComponents(a - t, u - o, f - l, n - d).normalize(),
                        e[1].setComponents(a + t, u + o, f + l, n + d).normalize(),
                        e[2].setComponents(a + i, u + s, f + h, n + m).normalize(),
                        e[3].setComponents(a - i, u - s, f - h, n - m).normalize(),
                        e[4].setComponents(a - r, u - c, f - p, n - g).normalize(),
                        e[5].setComponents(a + r, u + c, f + p, n + g).normalize(),
                        this
                },
                intersectsObject: function(t) {
                    var e = t.geometry;
                    return null === e.boundingSphere && e.computeBoundingSphere(),
                        As.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),
                        this.intersectsSphere(As)
                },
                intersectsSprite: function(t) {
                    return As.center.set(0, 0, 0),
                        As.radius = .7071067811865476,
                        As.applyMatrix4(t.matrixWorld),
                        this.intersectsSphere(As)
                },
                intersectsSphere: function(t) {
                    var e = this.planes
                        , n = t.center;
                    t = -t.radius;
                    for (var i = 0; i < 6; i++)
                        if (e[i].distanceToPoint(n) < t)
                            return !1;
                    return !0
                },
                intersectsBox: function(t) {
                    for (var e = this.planes, n = 0; n < 6; n++) {
                        var i = e[n];
                        if (Ts.x = 0 < i.normal.x ? t.max.x : t.min.x,
                            Ts.y = 0 < i.normal.y ? t.max.y : t.min.y,
                            Ts.z = 0 < i.normal.z ? t.max.z : t.min.z,
                        i.distanceToPoint(Ts) < 0)
                            return !1
                    }
                    return !0
                },
                containsPoint: function(t) {
                    for (var e = this.planes, n = 0; n < 6; n++)
                        if (e[n].distanceToPoint(t) < 0)
                            return !1;
                    return !0
                }
            });
            var Ls = {
                common: {
                    diffuse: {
                        value: new M(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    uvTransform: {
                        value: new i
                    },
                    uv2Transform: {
                        value: new i
                    },
                    alphaMap: {
                        value: null
                    }
                },
                specularmap: {
                    specularMap: {
                        value: null
                    }
                },
                envmap: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    },
                    maxMipLevel: {
                        value: 0
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new n(1,1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new M(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    lightProbe: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {}
                        }
                    },
                    directionalLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {}
                        }
                    },
                    spotLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {}
                        }
                    },
                    pointLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {},
                            shadowCameraNear: {},
                            shadowCameraFar: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new M(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new i
                    }
                },
                sprite: {
                    diffuse: {
                        value: new M(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    center: {
                        value: new n(.5,.5)
                    },
                    rotation: {
                        value: 0
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new i
                    }
                }
            };
            (it.prototype = Object.create(H.prototype)).constructor = it,
                (rt.prototype = Object.create(k.prototype)).constructor = rt;
            var Es = {
                alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
                alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
                aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
                aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                begin_vertex: "vec3 transformed = vec3( position );",
                beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
                bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
                bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
                clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
                clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
                clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
                clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
                color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
                common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",
                cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
                defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
                displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
                displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
                emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
                emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
                encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
                encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
                envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
                envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
                envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
                envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
                envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
                envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
                fog_vertex: "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",
                fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
                fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
                fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
                lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
                lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
                lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
                lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
                lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
                lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
                lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
                lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
                lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
                lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
                logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
                logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
                logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
                logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
                map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
                map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
                map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
                map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
                metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
                morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
                normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
                normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
                normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
                clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
                clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
                clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
                packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
                premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
                project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
                dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
                dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
                roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
                roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
                shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
                shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
                shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
                skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
                skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
                skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
                specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
                tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
                uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
                uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
                uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
                uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
                uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
                worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
                background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
                cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
                depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
                depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
                distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
                distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
                equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
                meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
                meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
                meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
                normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
                points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
                shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
            }
                , Ps = {
                basic: {
                    uniforms: X([Ls.common, Ls.specularmap, Ls.envmap, Ls.aomap, Ls.lightmap, Ls.fog]),
                    vertexShader: Es.meshbasic_vert,
                    fragmentShader: Es.meshbasic_frag
                },
                lambert: {
                    uniforms: X([Ls.common, Ls.specularmap, Ls.envmap, Ls.aomap, Ls.lightmap, Ls.emissivemap, Ls.fog, Ls.lights, {
                        emissive: {
                            value: new M(0)
                        }
                    }]),
                    vertexShader: Es.meshlambert_vert,
                    fragmentShader: Es.meshlambert_frag
                },
                phong: {
                    uniforms: X([Ls.common, Ls.specularmap, Ls.envmap, Ls.aomap, Ls.lightmap, Ls.emissivemap, Ls.bumpmap, Ls.normalmap, Ls.displacementmap, Ls.fog, Ls.lights, {
                        emissive: {
                            value: new M(0)
                        },
                        specular: {
                            value: new M(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: Es.meshphong_vert,
                    fragmentShader: Es.meshphong_frag
                },
                standard: {
                    uniforms: X([Ls.common, Ls.envmap, Ls.aomap, Ls.lightmap, Ls.emissivemap, Ls.bumpmap, Ls.normalmap, Ls.displacementmap, Ls.roughnessmap, Ls.metalnessmap, Ls.fog, Ls.lights, {
                        emissive: {
                            value: new M(0)
                        },
                        roughness: {
                            value: .5
                        },
                        metalness: {
                            value: .5
                        },
                        envMapIntensity: {
                            value: 1
                        }
                    }]),
                    vertexShader: Es.meshphysical_vert,
                    fragmentShader: Es.meshphysical_frag
                },
                toon: {
                    uniforms: X([Ls.common, Ls.specularmap, Ls.aomap, Ls.lightmap, Ls.emissivemap, Ls.bumpmap, Ls.normalmap, Ls.displacementmap, Ls.gradientmap, Ls.fog, Ls.lights, {
                        emissive: {
                            value: new M(0)
                        },
                        specular: {
                            value: new M(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: Es.meshtoon_vert,
                    fragmentShader: Es.meshtoon_frag
                },
                matcap: {
                    uniforms: X([Ls.common, Ls.bumpmap, Ls.normalmap, Ls.displacementmap, Ls.fog, {
                        matcap: {
                            value: null
                        }
                    }]),
                    vertexShader: Es.meshmatcap_vert,
                    fragmentShader: Es.meshmatcap_frag
                },
                points: {
                    uniforms: X([Ls.points, Ls.fog]),
                    vertexShader: Es.points_vert,
                    fragmentShader: Es.points_frag
                },
                dashed: {
                    uniforms: X([Ls.common, Ls.fog, {
                        scale: {
                            value: 1
                        },
                        dashSize: {
                            value: 1
                        },
                        totalSize: {
                            value: 2
                        }
                    }]),
                    vertexShader: Es.linedashed_vert,
                    fragmentShader: Es.linedashed_frag
                },
                depth: {
                    uniforms: X([Ls.common, Ls.displacementmap]),
                    vertexShader: Es.depth_vert,
                    fragmentShader: Es.depth_frag
                },
                normal: {
                    uniforms: X([Ls.common, Ls.bumpmap, Ls.normalmap, Ls.displacementmap, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: Es.normal_vert,
                    fragmentShader: Es.normal_frag
                },
                sprite: {
                    uniforms: X([Ls.sprite, Ls.fog]),
                    vertexShader: Es.sprite_vert,
                    fragmentShader: Es.sprite_frag
                },
                background: {
                    uniforms: {
                        uvTransform: {
                            value: new i
                        },
                        t2D: {
                            value: null
                        }
                    },
                    vertexShader: Es.background_vert,
                    fragmentShader: Es.background_frag
                },
                cube: {
                    uniforms: X([Ls.envmap, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: Es.cube_vert,
                    fragmentShader: Es.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        }
                    },
                    vertexShader: Es.equirect_vert,
                    fragmentShader: Es.equirect_frag
                },
                distanceRGBA: {
                    uniforms: X([Ls.common, Ls.displacementmap, {
                        referencePosition: {
                            value: new l
                        },
                        nearDistance: {
                            value: 1
                        },
                        farDistance: {
                            value: 1e3
                        }
                    }]),
                    vertexShader: Es.distanceRGBA_vert,
                    fragmentShader: Es.distanceRGBA_frag
                },
                shadow: {
                    uniforms: X([Ls.lights, Ls.fog, {
                        color: {
                            value: new M(0)
                        },
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: Es.shadow_vert,
                    fragmentShader: Es.shadow_frag
                }
            };
            Ps.physical = {
                uniforms: X([Ps.standard.uniforms, {
                    clearcoat: {
                        value: 0
                    },
                    clearcoatMap: {
                        value: null
                    },
                    clearcoatRoughness: {
                        value: 0
                    },
                    clearcoatRoughnessMap: {
                        value: null
                    },
                    clearcoatNormalScale: {
                        value: new n(1,1)
                    },
                    clearcoatNormalMap: {
                        value: null
                    },
                    sheen: {
                        value: new M(0)
                    },
                    transparency: {
                        value: 0
                    }
                }]),
                vertexShader: Es.meshphysical_vert,
                fragmentShader: Es.meshphysical_frag
            },
                ((gt.prototype = Object.create(r.prototype)).constructor = gt).prototype.isCubeTexture = !0,
                Object.defineProperty(gt.prototype, "images", {
                    get: function() {
                        return this.image
                    },
                    set: function(t) {
                        this.image = t
                    }
                }),
                ((vt.prototype = Object.create(r.prototype)).constructor = vt).prototype.isDataTexture2DArray = !0,
                ((yt.prototype = Object.create(r.prototype)).constructor = yt).prototype.isDataTexture3D = !0;
            var Cs = new r
                , Os = new vt
                , Is = new yt
                , Ns = new gt
                , Ds = []
                , Rs = []
                , zs = new Float32Array(16)
                , Fs = new Float32Array(9)
                , Bs = new Float32Array(4);
            $t.prototype.updateCache = function(t) {
                var e = this.cache;
                t instanceof Float32Array && e.length !== t.length && (this.cache = new Float32Array(t.length)),
                    bt(e, t)
            }
                ,
                te.prototype.setValue = function(t, e, n) {
                    for (var i = this.seq, r = 0, a = i.length; r !== a; ++r) {
                        var o = i[r];
                        o.setValue(t, e[o.id], n)
                    }
                }
            ;
            var Us = /([\w\d_]+)(\])?(\[|\.)?/g;
            ee.prototype.setValue = function(t, e, n, i) {
                void 0 !== (e = this.map[e]) && e.setValue(t, n, i)
            }
                ,
                ee.prototype.setOptional = function(t, e, n) {
                    void 0 !== (e = e[n]) && this.setValue(t, n, e)
                }
                ,
                ee.upload = function(t, e, n, i) {
                    for (var r = 0, a = e.length; r !== a; ++r) {
                        var o = e[r]
                            , s = n[o.id];
                        !1 !== s.needsUpdate && o.setValue(t, s.value, i)
                    }
                }
                ,
                ee.seqWithValue = function(t, e) {
                    for (var n = [], i = 0, r = t.length; i !== r; ++i) {
                        var a = t[i];
                        a.id in e && n.push(a)
                    }
                    return n
                }
            ;
            var Gs = 0
                , ks = /^[ \t]*#include +<([\w\d./]+)>/gm
                , js = /#pragma unroll_loop[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g
                , Vs = /#pragma unroll_loop_start[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g
                , Ws = 0;
            ((Ae.prototype = Object.create(L.prototype)).constructor = Ae).prototype.isMeshDepthMaterial = !0,
                Ae.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.depthPacking = t.depthPacking,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.map = t.map,
                        this.alphaMap = t.alphaMap,
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this
                }
                ,
                ((Te.prototype = Object.create(L.prototype)).constructor = Te).prototype.isMeshDistanceMaterial = !0,
                Te.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.referencePosition.copy(t.referencePosition),
                        this.nearDistance = t.nearDistance,
                        this.farDistance = t.farDistance,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.map = t.map,
                        this.alphaMap = t.alphaMap,
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this
                }
                ,
                Oe.prototype = Object.assign(Object.create(J.prototype), {
                    constructor: Oe,
                    isArrayCamera: !0
                }),
                Ie.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: Ie,
                    isGroup: !0
                }),
                Object.assign(Ne.prototype, e.prototype),
                Object.assign(Re.prototype, {
                    isFogExp2: !0,
                    clone: function() {
                        return new Re(this.color,this.density)
                    },
                    toJSON: function() {
                        return {
                            type: "FogExp2",
                            color: this.color.getHex(),
                            density: this.density
                        }
                    }
                }),
                Object.assign(ze.prototype, {
                    isFog: !0,
                    clone: function() {
                        return new ze(this.color,this.near,this.far)
                    },
                    toJSON: function() {
                        return {
                            type: "Fog",
                            color: this.color.getHex(),
                            near: this.near,
                            far: this.far
                        }
                    }
                }),
                Object.defineProperty(Fe.prototype, "needsUpdate", {
                    set: function(t) {
                        !0 === t && this.version++
                    }
                }),
                Object.assign(Fe.prototype, {
                    isInterleavedBuffer: !0,
                    onUploadCallback: function() {},
                    setUsage: function(t) {
                        return this.usage = t,
                            this
                    },
                    copy: function(t) {
                        return this.array = new t.array.constructor(t.array),
                            this.count = t.count,
                            this.stride = t.stride,
                            this.usage = t.usage,
                            this
                    },
                    copyAt: function(t, e, n) {
                        t *= this.stride,
                            n *= e.stride;
                        for (var i = 0, r = this.stride; i < r; i++)
                            this.array[t + i] = e.array[n + i];
                        return this
                    },
                    set: function(t, e) {
                        return void 0 === e && (e = 0),
                            this.array.set(t, e),
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    onUpload: function(t) {
                        return this.onUploadCallback = t,
                            this
                    }
                });
            var Hs = new l;
            Object.defineProperties(Be.prototype, {
                count: {
                    get: function() {
                        return this.data.count
                    }
                },
                array: {
                    get: function() {
                        return this.data.array
                    }
                }
            }),
                Object.assign(Be.prototype, {
                    isInterleavedBufferAttribute: !0,
                    applyMatrix4: function(t) {
                        for (var e = 0, n = this.data.count; e < n; e++)
                            Hs.x = this.getX(e),
                                Hs.y = this.getY(e),
                                Hs.z = this.getZ(e),
                                Hs.applyMatrix4(t),
                                this.setXYZ(e, Hs.x, Hs.y, Hs.z);
                        return this
                    },
                    setX: function(t, e) {
                        return this.data.array[t * this.data.stride + this.offset] = e,
                            this
                    },
                    setY: function(t, e) {
                        return this.data.array[t * this.data.stride + this.offset + 1] = e,
                            this
                    },
                    setZ: function(t, e) {
                        return this.data.array[t * this.data.stride + this.offset + 2] = e,
                            this
                    },
                    setW: function(t, e) {
                        return this.data.array[t * this.data.stride + this.offset + 3] = e,
                            this
                    },
                    getX: function(t) {
                        return this.data.array[t * this.data.stride + this.offset]
                    },
                    getY: function(t) {
                        return this.data.array[t * this.data.stride + this.offset + 1]
                    },
                    getZ: function(t) {
                        return this.data.array[t * this.data.stride + this.offset + 2]
                    },
                    getW: function(t) {
                        return this.data.array[t * this.data.stride + this.offset + 3]
                    },
                    setXY: function(t, e, n) {
                        return t = t * this.data.stride + this.offset,
                            this.data.array[t + 0] = e,
                            this.data.array[t + 1] = n,
                            this
                    },
                    setXYZ: function(t, e, n, i) {
                        return t = t * this.data.stride + this.offset,
                            this.data.array[t + 0] = e,
                            this.data.array[t + 1] = n,
                            this.data.array[t + 2] = i,
                            this
                    },
                    setXYZW: function(t, e, n, i, r) {
                        return t = t * this.data.stride + this.offset,
                            this.data.array[t + 0] = e,
                            this.data.array[t + 1] = n,
                            this.data.array[t + 2] = i,
                            this.data.array[t + 3] = r,
                            this
                    }
                }),
                ((Ue.prototype = Object.create(L.prototype)).constructor = Ue).prototype.isSpriteMaterial = !0,
                Ue.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.map = t.map,
                        this.alphaMap = t.alphaMap,
                        this.rotation = t.rotation,
                        this.sizeAttenuation = t.sizeAttenuation,
                        this
                }
            ;
            var qs, Xs = new l, Ys = new l, Zs = new l, Js = new n, Ks = new n, Qs = new h, $s = new l, tc = new l, ec = new l, nc = new n, ic = new n, rc = new n;
            Ge.prototype = Object.assign(Object.create(d.prototype), {
                constructor: Ge,
                isSprite: !0,
                raycast: function(t, e) {
                    t.camera,
                        Ys.setFromMatrixScale(this.matrixWorld),
                        Qs.copy(t.camera.matrixWorld),
                        this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse, this.matrixWorld),
                        Zs.setFromMatrixPosition(this.modelViewMatrix),
                    t.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && Ys.multiplyScalar(-Zs.z);
                    var i = this.material.rotation;
                    if (0 !== i)
                        var r = Math.cos(i)
                            , a = Math.sin(i);
                    i = this.center,
                        ke($s.set(-.5, -.5, 0), Zs, i, Ys, a, r),
                        ke(tc.set(.5, -.5, 0), Zs, i, Ys, a, r),
                        ke(ec.set(.5, .5, 0), Zs, i, Ys, a, r),
                        nc.set(0, 0),
                        ic.set(1, 0),
                        rc.set(1, 1);
                    var o = t.ray.intersectTriangle($s, tc, ec, !1, Xs);
                    null === o && (ke(tc.set(-.5, .5, 0), Zs, i, Ys, a, r),
                        ic.set(0, 1),
                    null === (o = t.ray.intersectTriangle($s, ec, tc, !1, Xs))) || (a = t.ray.origin.distanceTo(Xs)) < t.near || a > t.far || e.push({
                        distance: a,
                        point: Xs.clone(),
                        uv: b.getUV(Xs, $s, tc, ec, nc, ic, rc, new n),
                        face: null,
                        object: this
                    })
                },
                clone: function() {
                    return new this.constructor(this.material).copy(this)
                },
                copy: function(t) {
                    return d.prototype.copy.call(this, t),
                    void 0 !== t.center && this.center.copy(t.center),
                        this
                }
            });
            var ac = new l
                , oc = new l;
            je.prototype = Object.assign(Object.create(d.prototype), {
                constructor: je,
                isLOD: !0,
                copy: function(t) {
                    d.prototype.copy.call(this, t, !1);
                    for (var e = t.levels, n = 0, i = e.length; n < i; n++) {
                        var r = e[n];
                        this.addLevel(r.object.clone(), r.distance)
                    }
                    return this.autoUpdate = t.autoUpdate,
                        this
                },
                addLevel: function(t, e) {
                    void 0 === e && (e = 0),
                        e = Math.abs(e);
                    for (var n = this.levels, i = 0; i < n.length && !(e < n[i].distance); i++)
                        ;
                    return n.splice(i, 0, {
                        distance: e,
                        object: t
                    }),
                        this.add(t),
                        this
                },
                getCurrentLevel: function() {
                    return this._currentLevel
                },
                getObjectForDistance: function(t) {
                    var e = this.levels;
                    if (0 < e.length) {
                        for (var n = 1, i = e.length; n < i && !(t < e[n].distance); n++)
                            ;
                        return e[n - 1].object
                    }
                    return null
                },
                raycast: function(t, e) {
                    if (0 < this.levels.length) {
                        ac.setFromMatrixPosition(this.matrixWorld);
                        var n = t.ray.origin.distanceTo(ac);
                        this.getObjectForDistance(n).raycast(t, e)
                    }
                },
                update: function(t) {
                    var e = this.levels;
                    if (1 < e.length) {
                        ac.setFromMatrixPosition(t.matrixWorld),
                            oc.setFromMatrixPosition(this.matrixWorld),
                            t = ac.distanceTo(oc) / t.zoom,
                            e[0].object.visible = !0;
                        for (var n = 1, i = e.length; n < i && t >= e[n].distance; n++)
                            e[n - 1].object.visible = !1,
                                e[n].object.visible = !0;
                        for (this._currentLevel = n - 1; n < i; n++)
                            e[n].object.visible = !1
                    }
                },
                toJSON: function(t) {
                    t = d.prototype.toJSON.call(this, t),
                    !1 === this.autoUpdate && (t.object.autoUpdate = !1),
                        t.object.levels = [];
                    for (var e = this.levels, n = 0, i = e.length; n < i; n++) {
                        var r = e[n];
                        t.object.levels.push({
                            object: r.object.uuid,
                            distance: r.distance
                        })
                    }
                    return t
                }
            }),
                Ve.prototype = Object.assign(Object.create(j.prototype), {
                    constructor: Ve,
                    isSkinnedMesh: !0,
                    bind: function(t, e) {
                        this.skeleton = t,
                        void 0 === e && (this.updateMatrixWorld(!0),
                            this.skeleton.calculateInverses(),
                            e = this.matrixWorld),
                            this.bindMatrix.copy(e),
                            this.bindMatrixInverse.getInverse(e)
                    },
                    pose: function() {
                        this.skeleton.pose()
                    },
                    normalizeSkinWeights: function() {
                        for (var t = new a, e = this.geometry.attributes.skinWeight, n = 0, i = e.count; n < i; n++) {
                            t.x = e.getX(n),
                                t.y = e.getY(n),
                                t.z = e.getZ(n),
                                t.w = e.getW(n);
                            var r = 1 / t.manhattanLength();
                            1 / 0 != r ? t.multiplyScalar(r) : t.set(1, 0, 0, 0),
                                e.setXYZW(n, t.x, t.y, t.z, t.w)
                        }
                    },
                    updateMatrixWorld: function(t) {
                        j.prototype.updateMatrixWorld.call(this, t),
                            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode && this.bindMatrixInverse.getInverse(this.bindMatrix)
                    },
                    clone: function() {
                        return new this.constructor(this.geometry,this.material).copy(this)
                    }
                });
            var sc = new h
                , cc = new h;
            Object.assign(We.prototype, {
                calculateInverses: function() {
                    this.boneInverses = [];
                    for (var t = 0, e = this.bones.length; t < e; t++) {
                        var n = new h;
                        this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                            this.boneInverses.push(n)
                    }
                },
                pose: function() {
                    var t, e, n = 0;
                    for (e = this.bones.length; n < e; n++)
                        (t = this.bones[n]) && t.matrixWorld.getInverse(this.boneInverses[n]);
                    for (n = 0,
                             e = this.bones.length; n < e; n++)
                        (t = this.bones[n]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                            t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                            t.matrix.decompose(t.position, t.quaternion, t.scale))
                },
                update: function() {
                    for (var t = this.bones, e = this.boneInverses, n = this.boneMatrices, i = this.boneTexture, r = 0, a = t.length; r < a; r++)
                        sc.multiplyMatrices(t[r] ? t[r].matrixWorld : cc, e[r]),
                            sc.toArray(n, 16 * r);
                    void 0 !== i && (i.needsUpdate = !0)
                },
                clone: function() {
                    return new We(this.bones,this.boneInverses)
                },
                getBoneByName: function(t) {
                    for (var e = 0, n = this.bones.length; e < n; e++) {
                        var i = this.bones[e];
                        if (i.name === t)
                            return i
                    }
                },
                dispose: function() {
                    this.boneTexture && (this.boneTexture.dispose(),
                        this.boneTexture = void 0)
                }
            }),
                He.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: He,
                    isBone: !0
                });
            var uc = new h
                , lc = new h
                , hc = []
                , pc = new j;
            qe.prototype = Object.assign(Object.create(j.prototype), {
                constructor: qe,
                isInstancedMesh: !0,
                getMatrixAt: function(t, e) {
                    e.fromArray(this.instanceMatrix.array, 16 * t)
                },
                raycast: function(t, e) {
                    var n = this.matrixWorld
                        , i = this.count;
                    if (pc.geometry = this.geometry,
                        pc.material = this.material,
                    void 0 !== pc.material)
                        for (var r = 0; r < i; r++)
                            this.getMatrixAt(r, uc),
                                lc.multiplyMatrices(n, uc),
                                pc.matrixWorld = lc,
                                pc.raycast(t, hc),
                            0 < hc.length && (hc[0].instanceId = r,
                                hc[0].object = this,
                                e.push(hc[0]),
                                hc.length = 0)
                },
                setMatrixAt: function(t, e) {
                    e.toArray(this.instanceMatrix.array, 16 * t)
                },
                updateMorphTargets: function() {}
            }),
                ((Xe.prototype = Object.create(L.prototype)).constructor = Xe).prototype.isLineBasicMaterial = !0,
                Xe.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.linewidth = t.linewidth,
                        this.linecap = t.linecap,
                        this.linejoin = t.linejoin,
                        this
                }
            ;
            var fc = new l
                , dc = new l
                , mc = new h
                , gc = new x
                , vc = new y;
            Ye.prototype = Object.assign(Object.create(d.prototype), {
                constructor: Ye,
                isLine: !0,
                computeLineDistances: function() {
                    var t = this.geometry;
                    if (t.isBufferGeometry) {
                        if (null === t.index) {
                            for (var e = t.attributes.position, n = [0], i = 1, r = e.count; i < r; i++)
                                fc.fromBufferAttribute(e, i - 1),
                                    dc.fromBufferAttribute(e, i),
                                    n[i] = n[i - 1],
                                    n[i] += fc.distanceTo(dc);
                            t.setAttribute("lineDistance", new F(n,1))
                        }
                    } else if (t.isGeometry)
                        for (e = t.vertices,
                                 (n = t.lineDistances)[0] = 0,
                                 i = 1,
                                 r = e.length; i < r; i++)
                            n[i] = n[i - 1],
                                n[i] += e[i - 1].distanceTo(e[i]);
                    return this
                },
                raycast: function(t, e) {
                    var n = this.geometry
                        , i = this.matrixWorld
                        , r = t.params.Line.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(),
                        vc.copy(n.boundingSphere),
                        vc.applyMatrix4(i),
                        vc.radius += r,
                    !1 !== t.ray.intersectsSphere(vc)) {
                        mc.getInverse(i),
                            gc.copy(t.ray).applyMatrix4(mc),
                            i = r / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                            i *= i;
                        var a = new l
                            , o = new l;
                        r = new l;
                        var s = new l
                            , c = this && this.isLineSegments ? 2 : 1;
                        if (n.isBufferGeometry) {
                            var u = n.index
                                , h = n.attributes.position.array;
                            if (null !== u) {
                                n = 0;
                                for (var p = (u = u.array).length - 1; n < p; n += c) {
                                    var f = u[n + 1];
                                    a.fromArray(h, 3 * u[n]),
                                        o.fromArray(h, 3 * f),
                                    i < (f = gc.distanceSqToSegment(a, o, s, r)) || (s.applyMatrix4(this.matrixWorld),
                                    (f = t.ray.origin.distanceTo(s)) < t.near || f > t.far || e.push({
                                        distance: f,
                                        point: r.clone().applyMatrix4(this.matrixWorld),
                                        index: n,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    }))
                                }
                            } else
                                for (n = 0,
                                         p = h.length / 3 - 1; n < p; n += c)
                                    a.fromArray(h, 3 * n),
                                        o.fromArray(h, 3 * n + 3),
                                    i < (f = gc.distanceSqToSegment(a, o, s, r)) || (s.applyMatrix4(this.matrixWorld),
                                    (f = t.ray.origin.distanceTo(s)) < t.near || f > t.far || e.push({
                                        distance: f,
                                        point: r.clone().applyMatrix4(this.matrixWorld),
                                        index: n,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    }))
                        } else if (n.isGeometry)
                            for (o = (a = n.vertices).length,
                                     n = 0; n < o - 1; n += c)
                                i < (f = gc.distanceSqToSegment(a[n], a[n + 1], s, r)) || (s.applyMatrix4(this.matrixWorld),
                                (f = t.ray.origin.distanceTo(s)) < t.near || f > t.far || e.push({
                                    distance: f,
                                    point: r.clone().applyMatrix4(this.matrixWorld),
                                    index: n,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                }))
                    }
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            });
            var yc = new l
                , xc = new l;
            Ze.prototype = Object.assign(Object.create(Ye.prototype), {
                constructor: Ze,
                isLineSegments: !0,
                computeLineDistances: function() {
                    var t = this.geometry;
                    if (t.isBufferGeometry) {
                        if (null === t.index) {
                            for (var e = t.attributes.position, n = [], i = 0, r = e.count; i < r; i += 2)
                                yc.fromBufferAttribute(e, i),
                                    xc.fromBufferAttribute(e, i + 1),
                                    n[i] = 0 === i ? 0 : n[i - 1],
                                    n[i + 1] = n[i] + yc.distanceTo(xc);
                            t.setAttribute("lineDistance", new F(n,1))
                        }
                    } else if (t.isGeometry)
                        for (e = t.vertices,
                                 n = t.lineDistances,
                                 i = 0,
                                 r = e.length; i < r; i += 2)
                            yc.copy(e[i]),
                                xc.copy(e[i + 1]),
                                n[i] = 0 === i ? 0 : n[i - 1],
                                n[i + 1] = n[i] + yc.distanceTo(xc);
                    return this
                }
            }),
                Je.prototype = Object.assign(Object.create(Ye.prototype), {
                    constructor: Je,
                    isLineLoop: !0
                }),
                ((Ke.prototype = Object.create(L.prototype)).constructor = Ke).prototype.isPointsMaterial = !0,
                Ke.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.map = t.map,
                        this.alphaMap = t.alphaMap,
                        this.size = t.size,
                        this.sizeAttenuation = t.sizeAttenuation,
                        this.morphTargets = t.morphTargets,
                        this
                }
            ;
            var _c = new h
                , bc = new x
                , Mc = new y
                , wc = new l;
            Qe.prototype = Object.assign(Object.create(d.prototype), {
                constructor: Qe,
                isPoints: !0,
                raycast: function(t, e) {
                    var n = this.geometry
                        , i = this.matrixWorld
                        , r = t.params.Points.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(),
                        Mc.copy(n.boundingSphere),
                        Mc.applyMatrix4(i),
                        Mc.radius += r,
                    !1 !== t.ray.intersectsSphere(Mc))
                        if (_c.getInverse(i),
                            bc.copy(t.ray).applyMatrix4(_c),
                            r /= (this.scale.x + this.scale.y + this.scale.z) / 3,
                            r *= r,
                            n.isBufferGeometry) {
                            var a = n.index;
                            if (n = n.attributes.position.array,
                            null !== a) {
                                var o = a.array;
                                a = 0;
                                for (var s = o.length; a < s; a++) {
                                    var c = o[a];
                                    wc.fromArray(n, 3 * c),
                                        $e(wc, c, r, i, t, e, this)
                                }
                            } else
                                for (a = 0,
                                         o = n.length / 3; a < o; a++)
                                    wc.fromArray(n, 3 * a),
                                        $e(wc, a, r, i, t, e, this)
                        } else
                            for (a = 0,
                                     o = (n = n.vertices).length; a < o; a++)
                                $e(n[a], a, r, i, t, e, this)
                },
                updateMorphTargets: function() {
                    var t = this.geometry;
                    if (t.isBufferGeometry) {
                        t = t.morphAttributes;
                        var e = Object.keys(t);
                        if (0 < e.length) {
                            var n = t[e[0]];
                            if (void 0 !== n)
                                for (this.morphTargetInfluences = [],
                                         this.morphTargetDictionary = {},
                                         t = 0,
                                         e = n.length; t < e; t++) {
                                    var i = n[t].name || String(t);
                                    this.morphTargetInfluences.push(0),
                                        this.morphTargetDictionary[i] = t
                                }
                        }
                    } else
                        void 0 !== (t = t.morphTargets) && t.length
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
                tn.prototype = Object.assign(Object.create(r.prototype), {
                    constructor: tn,
                    isVideoTexture: !0,
                    update: function() {
                        var t = this.image;
                        t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
                    }
                }),
                ((en.prototype = Object.create(r.prototype)).constructor = en).prototype.isCompressedTexture = !0,
                ((nn.prototype = Object.create(r.prototype)).constructor = nn).prototype.isCanvasTexture = !0,
                ((rn.prototype = Object.create(r.prototype)).constructor = rn).prototype.isDepthTexture = !0,
                (an.prototype = Object.create(k.prototype)).constructor = an,
                (on.prototype = Object.create(H.prototype)).constructor = on,
                (sn.prototype = Object.create(k.prototype)).constructor = sn,
                (cn.prototype = Object.create(H.prototype)).constructor = cn,
                (un.prototype = Object.create(k.prototype)).constructor = un,
                (ln.prototype = Object.create(H.prototype)).constructor = ln,
                (hn.prototype = Object.create(un.prototype)).constructor = hn,
                (pn.prototype = Object.create(H.prototype)).constructor = pn,
                (fn.prototype = Object.create(un.prototype)).constructor = fn,
                (dn.prototype = Object.create(H.prototype)).constructor = dn,
                (mn.prototype = Object.create(un.prototype)).constructor = mn,
                (gn.prototype = Object.create(H.prototype)).constructor = gn,
                (vn.prototype = Object.create(un.prototype)).constructor = vn,
                (yn.prototype = Object.create(H.prototype)).constructor = yn,
                ((xn.prototype = Object.create(k.prototype)).constructor = xn).prototype.toJSON = function() {
                    var t = k.prototype.toJSON.call(this);
                    return t.path = this.parameters.path.toJSON(),
                        t
                }
                ,
                (_n.prototype = Object.create(H.prototype)).constructor = _n,
                (bn.prototype = Object.create(k.prototype)).constructor = bn,
                (Mn.prototype = Object.create(H.prototype)).constructor = Mn,
                (wn.prototype = Object.create(k.prototype)).constructor = wn;
            var Sc = {
                area: function(t) {
                    for (var e = t.length, n = 0, i = e - 1, r = 0; r < e; i = r++)
                        n += t[i].x * t[r].y - t[r].x * t[i].y;
                    return .5 * n
                },
                isClockWise: function(t) {
                    return Sc.area(t) < 0
                },
                triangulateShape: function(t, e) {
                    var n = []
                        , i = []
                        , r = [];
                    Gn(t),
                        kn(n, t);
                    var a = t.length;
                    for (e.forEach(Gn),
                             t = 0; t < e.length; t++)
                        i.push(a),
                            a += e[t].length,
                            kn(n, e[t]);
                    for (e = function(t, e, n) {
                        n = n || 2;
                        var i, r = e && e.length, a = r ? e[0] * n : t.length, o = Sn(t, 0, a, n, !0), s = [];
                        if (!o || o.next === o.prev)
                            return s;
                        if (r) {
                            var c, u = n;
                            r = [];
                            var l = 0;
                            for (c = e.length; l < c; l++) {
                                var h = e[l] * u;
                                (h = Sn(t, h, l < c - 1 ? e[l + 1] * u : t.length, u, !1)) === h.next && (h.steiner = !0),
                                    r.push(Cn(h))
                            }
                            for (r.sort(Ln),
                                     l = 0; l < r.length; l++)
                                (u = En(e = r[l], u = o)) && An(e = zn(u, e), e.next),
                                    o = An(o, o.next)
                        }
                        if (t.length > 80 * n) {
                            var p = i = t[0]
                                , f = r = t[1];
                            for (u = n; u < a; u += n)
                                (l = t[u]) < p && (p = l),
                                (e = t[u + 1]) < f && (f = e),
                                i < l && (i = l),
                                r < e && (r = e);
                            i = 0 !== (i = Math.max(i - p, r - f)) ? 1 / i : 0
                        }
                        return function t(e, n, i, r, a, o, s) {
                            if (e) {
                                if (!s && o) {
                                    for (var c = e, u = c; null === u.z && (u.z = Pn(u.x, u.y, r, a, o)),
                                        u.prevZ = u.prev,
                                    (u = u.nextZ = u.next) !== c; )
                                        ;
                                    u.prevZ.nextZ = null,
                                        u.prevZ = null,
                                        c = u;
                                    var l, h, p, f, d = 1;
                                    do {
                                        u = c;
                                        var m = c = null;
                                        for (h = 0; u; ) {
                                            h++;
                                            var g = u;
                                            for (l = p = 0; l < d && (p++,
                                                g = g.nextZ); l++)
                                                ;
                                            for (f = d; 0 < p || 0 < f && g; )
                                                0 !== p && (0 === f || !g || u.z <= g.z) ? (u = (l = u).nextZ,
                                                    p--) : (g = (l = g).nextZ,
                                                    f--),
                                                    m ? m.nextZ = l : c = l,
                                                    l.prevZ = m,
                                                    m = l;
                                            u = g
                                        }
                                        m.nextZ = null,
                                            d *= 2
                                    } while (1 < h)
                                }
                                for (c = e; e.prev !== e.next; ) {
                                    if (u = e.prev,
                                        g = e.next,
                                        o)
                                        m = Tn(e, r, a, o);
                                    else
                                        t: if (m = e,
                                            h = m.prev,
                                            p = m,
                                            d = m.next,
                                        0 <= In(h, p, d))
                                            m = !1;
                                        else {
                                            for (l = m.next.next; l !== m.prev; ) {
                                                if (On(h.x, h.y, p.x, p.y, d.x, d.y, l.x, l.y) && 0 <= In(l.prev, l, l.next)) {
                                                    m = !1;
                                                    break t
                                                }
                                                l = l.next
                                            }
                                            m = !0
                                        }
                                    if (m)
                                        n.push(u.i / i),
                                            n.push(e.i / i),
                                            n.push(g.i / i),
                                            Bn(e),
                                            c = e = g.next;
                                    else if ((e = g) === c) {
                                        if (s) {
                                            if (1 === s) {
                                                for (s = n,
                                                         c = i,
                                                         u = e; !Nn(g = u.prev, m = u.next.next) && Dn(g, u, u.next, m) && Rn(g, m) && Rn(m, g) && (s.push(g.i / c),
                                                    s.push(u.i / c),
                                                    s.push(m.i / c),
                                                    Bn(u),
                                                    Bn(u.next),
                                                    u = e = m),
                                                     (u = u.next) !== e; )
                                                    ;
                                                t(e = u, n, i, r, a, o, 2)
                                            } else if (2 === s)
                                                t: {
                                                    s = e;
                                                    do {
                                                        for (c = s.next.next; c !== s.prev; ) {
                                                            if (u = s.i !== c.i) {
                                                                if (g = c,
                                                                    m = (u = s).next.i !== g.i && u.prev.i !== g.i) {
                                                                    e: {
                                                                        m = u;
                                                                        do {
                                                                            if (m.i !== u.i && m.next.i !== u.i && m.i !== g.i && m.next.i !== g.i && Dn(m, m.next, u, g)) {
                                                                                m = !0;
                                                                                break e
                                                                            }
                                                                            m = m.next
                                                                        } while (m !== u);
                                                                        m = !1
                                                                    }
                                                                    m = !m
                                                                }
                                                                if (m = m && Rn(u, g) && Rn(g, u)) {
                                                                    for (h = !1,
                                                                             p = ((m = u).x + g.x) / 2,
                                                                             g = (u.y + g.y) / 2; m.y > g != m.next.y > g && m.next.y !== m.y && p < (m.next.x - m.x) * (g - m.y) / (m.next.y - m.y) + m.x && (h = !h),
                                                                         (m = m.next) !== u; )
                                                                        ;
                                                                    m = h
                                                                }
                                                                u = m
                                                            }
                                                            if (u) {
                                                                e = zn(s, c),
                                                                    s = An(s, s.next),
                                                                    e = An(e, e.next),
                                                                    t(s, n, i, r, a, o),
                                                                    t(e, n, i, r, a, o);
                                                                break t
                                                            }
                                                            c = c.next
                                                        }
                                                        s = s.next
                                                    } while (s !== e)
                                                }
                                        } else
                                            t(An(e), n, i, r, a, o, 1);
                                        break
                                    }
                                }
                            }
                        }(o, s, n, p, f, i),
                            s
                    }(n, i),
                             t = 0; t < e.length; t += 3)
                        r.push(e.slice(t, t + 3));
                    return r
                }
            };
            ((jn.prototype = Object.create(H.prototype)).constructor = jn).prototype.toJSON = function() {
                var t = H.prototype.toJSON.call(this);
                return Wn(this.parameters.shapes, this.parameters.options, t)
            }
                ,
                ((Vn.prototype = Object.create(k.prototype)).constructor = Vn).prototype.toJSON = function() {
                    var t = k.prototype.toJSON.call(this);
                    return Wn(this.parameters.shapes, this.parameters.options, t)
                }
            ;
            var Ac = {
                generateTopUV: function(t, e, i, r, a) {
                    t = e[3 * r],
                        r = e[3 * r + 1];
                    var o = e[3 * a];
                    return a = e[3 * a + 1],
                        [new n(e[3 * i],e[3 * i + 1]), new n(t,r), new n(o,a)]
                },
                generateSideWallUV: function(t, e, i, r, a, o) {
                    t = e[3 * i];
                    var s = e[3 * i + 1];
                    i = e[3 * i + 2];
                    var c = e[3 * r]
                        , u = e[3 * r + 1];
                    r = e[3 * r + 2];
                    var l = e[3 * a]
                        , h = e[3 * a + 1];
                    a = e[3 * a + 2];
                    var p = e[3 * o]
                        , f = e[3 * o + 1];
                    return e = e[3 * o + 2],
                        Math.abs(s - u) < .01 ? [new n(t,1 - i), new n(c,1 - r), new n(l,1 - a), new n(p,1 - e)] : [new n(s,1 - i), new n(u,1 - r), new n(h,1 - a), new n(f,1 - e)]
                }
            };
            (Hn.prototype = Object.create(H.prototype)).constructor = Hn,
                (qn.prototype = Object.create(Vn.prototype)).constructor = qn,
                (Xn.prototype = Object.create(H.prototype)).constructor = Xn,
                (Yn.prototype = Object.create(k.prototype)).constructor = Yn,
                (Zn.prototype = Object.create(H.prototype)).constructor = Zn,
                (Jn.prototype = Object.create(k.prototype)).constructor = Jn,
                (Kn.prototype = Object.create(H.prototype)).constructor = Kn,
                (Qn.prototype = Object.create(k.prototype)).constructor = Qn,
                (($n.prototype = Object.create(H.prototype)).constructor = $n).prototype.toJSON = function() {
                    var t = H.prototype.toJSON.call(this);
                    return ei(this.parameters.shapes, t)
                }
                ,
                ((ti.prototype = Object.create(k.prototype)).constructor = ti).prototype.toJSON = function() {
                    var t = k.prototype.toJSON.call(this);
                    return ei(this.parameters.shapes, t)
                }
                ,
                (ni.prototype = Object.create(k.prototype)).constructor = ni,
                (ii.prototype = Object.create(H.prototype)).constructor = ii,
                (ri.prototype = Object.create(k.prototype)).constructor = ri,
                (ai.prototype = Object.create(ii.prototype)).constructor = ai,
                (oi.prototype = Object.create(ri.prototype)).constructor = oi,
                (si.prototype = Object.create(H.prototype)).constructor = si,
                (ci.prototype = Object.create(k.prototype)).constructor = ci;
            var Tc = Object.freeze({
                __proto__: null,
                WireframeGeometry: an,
                ParametricGeometry: on,
                ParametricBufferGeometry: sn,
                TetrahedronGeometry: ln,
                TetrahedronBufferGeometry: hn,
                OctahedronGeometry: pn,
                OctahedronBufferGeometry: fn,
                IcosahedronGeometry: dn,
                IcosahedronBufferGeometry: mn,
                DodecahedronGeometry: gn,
                DodecahedronBufferGeometry: vn,
                PolyhedronGeometry: cn,
                PolyhedronBufferGeometry: un,
                TubeGeometry: yn,
                TubeBufferGeometry: xn,
                TorusKnotGeometry: _n,
                TorusKnotBufferGeometry: bn,
                TorusGeometry: Mn,
                TorusBufferGeometry: wn,
                TextGeometry: Hn,
                TextBufferGeometry: qn,
                SphereGeometry: Xn,
                SphereBufferGeometry: Yn,
                RingGeometry: Zn,
                RingBufferGeometry: Jn,
                PlaneGeometry: it,
                PlaneBufferGeometry: rt,
                LatheGeometry: Kn,
                LatheBufferGeometry: Qn,
                ShapeGeometry: $n,
                ShapeBufferGeometry: ti,
                ExtrudeGeometry: jn,
                ExtrudeBufferGeometry: Vn,
                EdgesGeometry: ni,
                ConeGeometry: ai,
                ConeBufferGeometry: oi,
                CylinderGeometry: ii,
                CylinderBufferGeometry: ri,
                CircleGeometry: si,
                CircleBufferGeometry: ci,
                BoxGeometry: _s,
                BoxBufferGeometry: bs
            });
            ((ui.prototype = Object.create(L.prototype)).constructor = ui).prototype.isShadowMaterial = !0,
                ui.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this
                }
                ,
                ((li.prototype = Object.create(Y.prototype)).constructor = li).prototype.isRawShaderMaterial = !0,
                ((hi.prototype = Object.create(L.prototype)).constructor = hi).prototype.isMeshStandardMaterial = !0,
                hi.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.defines = {
                            STANDARD: ""
                        },
                        this.color.copy(t.color),
                        this.roughness = t.roughness,
                        this.metalness = t.metalness,
                        this.map = t.map,
                        this.lightMap = t.lightMap,
                        this.lightMapIntensity = t.lightMapIntensity,
                        this.aoMap = t.aoMap,
                        this.aoMapIntensity = t.aoMapIntensity,
                        this.emissive.copy(t.emissive),
                        this.emissiveMap = t.emissiveMap,
                        this.emissiveIntensity = t.emissiveIntensity,
                        this.bumpMap = t.bumpMap,
                        this.bumpScale = t.bumpScale,
                        this.normalMap = t.normalMap,
                        this.normalMapType = t.normalMapType,
                        this.normalScale.copy(t.normalScale),
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.roughnessMap = t.roughnessMap,
                        this.metalnessMap = t.metalnessMap,
                        this.alphaMap = t.alphaMap,
                        this.envMap = t.envMap,
                        this.envMapIntensity = t.envMapIntensity,
                        this.refractionRatio = t.refractionRatio,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.wireframeLinecap = t.wireframeLinecap,
                        this.wireframeLinejoin = t.wireframeLinejoin,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this.vertexTangents = t.vertexTangents,
                        this
                }
                ,
                ((pi.prototype = Object.create(hi.prototype)).constructor = pi).prototype.isMeshPhysicalMaterial = !0,
                pi.prototype.copy = function(t) {
                    return hi.prototype.copy.call(this, t),
                        this.defines = {
                            STANDARD: "",
                            PHYSICAL: ""
                        },
                        this.clearcoat = t.clearcoat,
                        this.clearcoatMap = t.clearcoatMap,
                        this.clearcoatRoughness = t.clearcoatRoughness,
                        this.clearcoatRoughnessMap = t.clearcoatRoughnessMap,
                        this.clearcoatNormalMap = t.clearcoatNormalMap,
                        this.clearcoatNormalScale.copy(t.clearcoatNormalScale),
                        this.reflectivity = t.reflectivity,
                        this.sheen = t.sheen ? (this.sheen || new M).copy(t.sheen) : null,
                        this.transparency = t.transparency,
                        this
                }
                ,
                ((fi.prototype = Object.create(L.prototype)).constructor = fi).prototype.isMeshPhongMaterial = !0,
                fi.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.specular.copy(t.specular),
                        this.shininess = t.shininess,
                        this.map = t.map,
                        this.lightMap = t.lightMap,
                        this.lightMapIntensity = t.lightMapIntensity,
                        this.aoMap = t.aoMap,
                        this.aoMapIntensity = t.aoMapIntensity,
                        this.emissive.copy(t.emissive),
                        this.emissiveMap = t.emissiveMap,
                        this.emissiveIntensity = t.emissiveIntensity,
                        this.bumpMap = t.bumpMap,
                        this.bumpScale = t.bumpScale,
                        this.normalMap = t.normalMap,
                        this.normalMapType = t.normalMapType,
                        this.normalScale.copy(t.normalScale),
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.specularMap = t.specularMap,
                        this.alphaMap = t.alphaMap,
                        this.envMap = t.envMap,
                        this.combine = t.combine,
                        this.reflectivity = t.reflectivity,
                        this.refractionRatio = t.refractionRatio,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.wireframeLinecap = t.wireframeLinecap,
                        this.wireframeLinejoin = t.wireframeLinejoin,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this
                }
                ,
                ((di.prototype = Object.create(L.prototype)).constructor = di).prototype.isMeshToonMaterial = !0,
                di.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.specular.copy(t.specular),
                        this.shininess = t.shininess,
                        this.map = t.map,
                        this.gradientMap = t.gradientMap,
                        this.lightMap = t.lightMap,
                        this.lightMapIntensity = t.lightMapIntensity,
                        this.aoMap = t.aoMap,
                        this.aoMapIntensity = t.aoMapIntensity,
                        this.emissive.copy(t.emissive),
                        this.emissiveMap = t.emissiveMap,
                        this.emissiveIntensity = t.emissiveIntensity,
                        this.bumpMap = t.bumpMap,
                        this.bumpScale = t.bumpScale,
                        this.normalMap = t.normalMap,
                        this.normalMapType = t.normalMapType,
                        this.normalScale.copy(t.normalScale),
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.specularMap = t.specularMap,
                        this.alphaMap = t.alphaMap,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.wireframeLinecap = t.wireframeLinecap,
                        this.wireframeLinejoin = t.wireframeLinejoin,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this
                }
                ,
                ((mi.prototype = Object.create(L.prototype)).constructor = mi).prototype.isMeshNormalMaterial = !0,
                mi.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.bumpMap = t.bumpMap,
                        this.bumpScale = t.bumpScale,
                        this.normalMap = t.normalMap,
                        this.normalMapType = t.normalMapType,
                        this.normalScale.copy(t.normalScale),
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this
                }
                ,
                ((gi.prototype = Object.create(L.prototype)).constructor = gi).prototype.isMeshLambertMaterial = !0,
                gi.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.map = t.map,
                        this.lightMap = t.lightMap,
                        this.lightMapIntensity = t.lightMapIntensity,
                        this.aoMap = t.aoMap,
                        this.aoMapIntensity = t.aoMapIntensity,
                        this.emissive.copy(t.emissive),
                        this.emissiveMap = t.emissiveMap,
                        this.emissiveIntensity = t.emissiveIntensity,
                        this.specularMap = t.specularMap,
                        this.alphaMap = t.alphaMap,
                        this.envMap = t.envMap,
                        this.combine = t.combine,
                        this.reflectivity = t.reflectivity,
                        this.refractionRatio = t.refractionRatio,
                        this.wireframe = t.wireframe,
                        this.wireframeLinewidth = t.wireframeLinewidth,
                        this.wireframeLinecap = t.wireframeLinecap,
                        this.wireframeLinejoin = t.wireframeLinejoin,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this
                }
                ,
                ((vi.prototype = Object.create(L.prototype)).constructor = vi).prototype.isMeshMatcapMaterial = !0,
                vi.prototype.copy = function(t) {
                    return L.prototype.copy.call(this, t),
                        this.defines = {
                            MATCAP: ""
                        },
                        this.color.copy(t.color),
                        this.matcap = t.matcap,
                        this.map = t.map,
                        this.bumpMap = t.bumpMap,
                        this.bumpScale = t.bumpScale,
                        this.normalMap = t.normalMap,
                        this.normalMapType = t.normalMapType,
                        this.normalScale.copy(t.normalScale),
                        this.displacementMap = t.displacementMap,
                        this.displacementScale = t.displacementScale,
                        this.displacementBias = t.displacementBias,
                        this.alphaMap = t.alphaMap,
                        this.skinning = t.skinning,
                        this.morphTargets = t.morphTargets,
                        this.morphNormals = t.morphNormals,
                        this
                }
                ,
                ((yi.prototype = Object.create(Xe.prototype)).constructor = yi).prototype.isLineDashedMaterial = !0,
                yi.prototype.copy = function(t) {
                    return Xe.prototype.copy.call(this, t),
                        this.scale = t.scale,
                        this.dashSize = t.dashSize,
                        this.gapSize = t.gapSize,
                        this
                }
            ;
            var Lc = Object.freeze({
                __proto__: null,
                ShadowMaterial: ui,
                SpriteMaterial: Ue,
                RawShaderMaterial: li,
                ShaderMaterial: Y,
                PointsMaterial: Ke,
                MeshPhysicalMaterial: pi,
                MeshStandardMaterial: hi,
                MeshPhongMaterial: fi,
                MeshToonMaterial: di,
                MeshNormalMaterial: mi,
                MeshLambertMaterial: gi,
                MeshDepthMaterial: Ae,
                MeshDistanceMaterial: Te,
                MeshBasicMaterial: E,
                MeshMatcapMaterial: vi,
                LineDashedMaterial: yi,
                LineBasicMaterial: Xe,
                Material: L
            })
                , Ec = {
                arraySlice: function(t, e, n) {
                    return Ec.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n)
                },
                convertArray: function(t, e, n) {
                    return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
                },
                isTypedArray: function(t) {
                    return ArrayBuffer.isView(t) && !(t instanceof DataView)
                },
                getKeyframeOrder: function(t) {
                    for (var e = t.length, n = Array(e), i = 0; i !== e; ++i)
                        n[i] = i;
                    return n.sort((function(e, n) {
                            return t[e] - t[n]
                        }
                    )),
                        n
                },
                sortedArray: function(t, e, n) {
                    for (var i = t.length, r = new t.constructor(i), a = 0, o = 0; o !== i; ++a)
                        for (var s = n[a] * e, c = 0; c !== e; ++c)
                            r[o++] = t[s + c];
                    return r
                },
                flattenJSON: function(t, e, n, i) {
                    for (var r = 1, a = t[0]; void 0 !== a && void 0 === a[i]; )
                        a = t[r++];
                    if (void 0 !== a) {
                        var o = a[i];
                        if (void 0 !== o)
                            if (Array.isArray(o))
                                for (; void 0 !== (o = a[i]) && (e.push(a.time),
                                    n.push.apply(n, o)),
                                       void 0 !== (a = t[r++]); )
                                    ;
                            else if (void 0 !== o.toArray)
                                for (; void 0 !== (o = a[i]) && (e.push(a.time),
                                    o.toArray(n, n.length)),
                                       void 0 !== (a = t[r++]); )
                                    ;
                            else
                                for (; void 0 !== (o = a[i]) && (e.push(a.time),
                                    n.push(o)),
                                       void 0 !== (a = t[r++]); )
                                    ;
                    }
                },
                subclip: function(t, e, n, i, r) {
                    r = r || 30,
                        (t = t.clone()).name = e;
                    var a = [];
                    for (e = 0; e < t.tracks.length; ++e) {
                        for (var o = t.tracks[e], s = o.getValueSize(), c = [], u = [], l = 0; l < o.times.length; ++l) {
                            var h = o.times[l] * r;
                            if (!(h < n || i <= h))
                                for (c.push(o.times[l]),
                                         h = 0; h < s; ++h)
                                    u.push(o.values[l * s + h])
                        }
                        0 !== c.length && (o.times = Ec.convertArray(c, o.times.constructor),
                            o.values = Ec.convertArray(u, o.values.constructor),
                            a.push(o))
                    }
                    for (t.tracks = a,
                             n = 1 / 0,
                             e = 0; e < t.tracks.length; ++e)
                        n > t.tracks[e].times[0] && (n = t.tracks[e].times[0]);
                    for (e = 0; e < t.tracks.length; ++e)
                        t.tracks[e].shift(-1 * n);
                    return t.resetDuration(),
                        t
                }
            };
            Object.assign(xi.prototype, {
                evaluate: function(t) {
                    var e = this.parameterPositions
                        , n = this._cachedIndex
                        , i = e[n]
                        , r = e[n - 1];
                    t: {
                        e: {
                            n: {
                                i: if (!(t < i)) {
                                    for (var a = n + 2; ; ) {
                                        if (void 0 === i) {
                                            if (t < r)
                                                break i;
                                            return this._cachedIndex = n = e.length,
                                                this.afterEnd_(n - 1, t, r)
                                        }
                                        if (n === a)
                                            break;
                                        if (r = i,
                                        t < (i = e[++n]))
                                            break e
                                    }
                                    i = e.length;
                                    break n
                                }
                                if (r <= t)
                                    break t;
                                for (t < (a = e[1]) && (n = 2,
                                    r = a),
                                         a = n - 2; ; ) {
                                    if (void 0 === r)
                                        return this._cachedIndex = 0,
                                            this.beforeStart_(0, t, i);
                                    if (n === a)
                                        break;
                                    if (i = r,
                                    (r = e[--n - 1]) <= t)
                                        break e
                                }
                                i = n,
                                    n = 0
                            }
                            for (; n < i; )
                                t < e[r = n + i >>> 1] ? i = r : n = r + 1;
                            if (i = e[n],
                            void 0 === (r = e[n - 1]))
                                return this._cachedIndex = 0,
                                    this.beforeStart_(0, t, i);
                            if (void 0 === i)
                                return this._cachedIndex = n = e.length,
                                    this.afterEnd_(n - 1, r, t)
                        }
                        this._cachedIndex = n,
                            this.intervalChanged_(n, r, i)
                    }
                    return this.interpolate_(n, r, t, i)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function() {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function(t) {
                    var e = this.resultBuffer
                        , n = this.sampleValues
                        , i = this.valueSize;
                    t *= i;
                    for (var r = 0; r !== i; ++r)
                        e[r] = n[t + r];
                    return e
                },
                interpolate_: function() {
                    throw Error("call to abstract method")
                },
                intervalChanged_: function() {}
            }),
                Object.assign(xi.prototype, {
                    beforeStart_: xi.prototype.copySampleValue_,
                    afterEnd_: xi.prototype.copySampleValue_
                }),
                _i.prototype = Object.assign(Object.create(xi.prototype), {
                    constructor: _i,
                    DefaultSettings_: {
                        endingStart: 2400,
                        endingEnd: 2400
                    },
                    intervalChanged_: function(t, e, n) {
                        var i = this.parameterPositions
                            , r = t - 2
                            , a = t + 1
                            , o = i[r]
                            , s = i[a];
                        if (void 0 === o)
                            switch (this.getSettings_().endingStart) {
                                case 2401:
                                    r = t,
                                        o = 2 * e - n;
                                    break;
                                case 2402:
                                    o = e + i[r = i.length - 2] - i[r + 1];
                                    break;
                                default:
                                    r = t,
                                        o = n
                            }
                        if (void 0 === s)
                            switch (this.getSettings_().endingEnd) {
                                case 2401:
                                    a = t,
                                        s = 2 * n - e;
                                    break;
                                case 2402:
                                    s = n + i[a = 1] - i[0];
                                    break;
                                default:
                                    a = t - 1,
                                        s = e
                            }
                        t = .5 * (n - e),
                            i = this.valueSize,
                            this._weightPrev = t / (e - o),
                            this._weightNext = t / (s - n),
                            this._offsetPrev = r * i,
                            this._offsetNext = a * i
                    },
                    interpolate_: function(t, e, n, i) {
                        var r = this.resultBuffer
                            , a = this.sampleValues
                            , o = this.valueSize
                            , s = (t *= o) - o
                            , c = this._offsetPrev
                            , u = this._offsetNext
                            , l = this._weightPrev
                            , h = this._weightNext
                            , p = (n - e) / (i - e);
                        for (e = -l * (i = (n = p * p) * p) + 2 * l * n - l * p,
                                 l = (1 + l) * i + (-1.5 - 2 * l) * n + (-.5 + l) * p + 1,
                                 p = (-1 - h) * i + (1.5 + h) * n + .5 * p,
                                 h = h * i - h * n,
                                 n = 0; n !== o; ++n)
                            r[n] = e * a[c + n] + l * a[s + n] + p * a[t + n] + h * a[u + n];
                        return r
                    }
                }),
                bi.prototype = Object.assign(Object.create(xi.prototype), {
                    constructor: bi,
                    interpolate_: function(t, e, n, i) {
                        var r = this.resultBuffer
                            , a = this.sampleValues
                            , o = this.valueSize
                            , s = (t *= o) - o;
                        for (n = 1 - (e = (n - e) / (i - e)),
                                 i = 0; i !== o; ++i)
                            r[i] = a[s + i] * n + a[t + i] * e;
                        return r
                    }
                }),
                Mi.prototype = Object.assign(Object.create(xi.prototype), {
                    constructor: Mi,
                    interpolate_: function(t) {
                        return this.copySampleValue_(t - 1)
                    }
                }),
                Object.assign(wi, {
                    toJSON: function(t) {
                        var e = t.constructor;
                        if (void 0 !== e.toJSON)
                            e = e.toJSON(t);
                        else {
                            e = {
                                name: t.name,
                                times: Ec.convertArray(t.times, Array),
                                values: Ec.convertArray(t.values, Array)
                            };
                            var n = t.getInterpolation();
                            n !== t.DefaultInterpolation && (e.interpolation = n)
                        }
                        return e.type = t.ValueTypeName,
                            e
                    }
                }),
                Object.assign(wi.prototype, {
                    constructor: wi,
                    TimeBufferType: Float32Array,
                    ValueBufferType: Float32Array,
                    DefaultInterpolation: 2301,
                    InterpolantFactoryMethodDiscrete: function(t) {
                        return new Mi(this.times,this.values,this.getValueSize(),t)
                    },
                    InterpolantFactoryMethodLinear: function(t) {
                        return new bi(this.times,this.values,this.getValueSize(),t)
                    },
                    InterpolantFactoryMethodSmooth: function(t) {
                        return new _i(this.times,this.values,this.getValueSize(),t)
                    },
                    setInterpolation: function(t) {
                        switch (t) {
                            case 2300:
                                var e = this.InterpolantFactoryMethodDiscrete;
                                break;
                            case 2301:
                                e = this.InterpolantFactoryMethodLinear;
                                break;
                            case 2302:
                                e = this.InterpolantFactoryMethodSmooth
                        }
                        if (void 0 !== e)
                            return this.createInterpolant = e,
                                this;
                        if (e = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name,
                        void 0 === this.createInterpolant) {
                            if (t === this.DefaultInterpolation)
                                throw Error(e);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        return this
                    },
                    getInterpolation: function() {
                        switch (this.createInterpolant) {
                            case this.InterpolantFactoryMethodDiscrete:
                                return 2300;
                            case this.InterpolantFactoryMethodLinear:
                                return 2301;
                            case this.InterpolantFactoryMethodSmooth:
                                return 2302
                        }
                    },
                    getValueSize: function() {
                        return this.values.length / this.times.length
                    },
                    shift: function(t) {
                        if (0 !== t)
                            for (var e = this.times, n = 0, i = e.length; n !== i; ++n)
                                e[n] += t;
                        return this
                    },
                    scale: function(t) {
                        if (1 !== t)
                            for (var e = this.times, n = 0, i = e.length; n !== i; ++n)
                                e[n] *= t;
                        return this
                    },
                    trim: function(t, e) {
                        for (var n = this.times, i = n.length, r = 0, a = i - 1; r !== i && n[r] < t; )
                            ++r;
                        for (; -1 !== a && n[a] > e; )
                            --a;
                        return ++a,
                        0 === r && a === i || (a <= r && (r = (a = Math.max(a, 1)) - 1),
                            t = this.getValueSize(),
                            this.times = Ec.arraySlice(n, r, a),
                            this.values = Ec.arraySlice(this.values, r * t, a * t)),
                            this
                    },
                    validate: function() {
                        var t = !0
                            , e = this.getValueSize();
                        0 != e - Math.floor(e) && (t = !1);
                        var n = this.times;
                        e = this.values;
                        var i = n.length;
                        0 === i && (t = !1);
                        for (var r = null, a = 0; a !== i; a++) {
                            var o = n[a];
                            if ("number" == typeof o && isNaN(o)) {
                                t = !1;
                                break
                            }
                            if (null !== r && o < r) {
                                t = !1;
                                break
                            }
                            r = o
                        }
                        if (void 0 !== e && Ec.isTypedArray(e))
                            for (a = 0,
                                     n = e.length; a !== n; ++a)
                                if (i = e[a],
                                    isNaN(i)) {
                                    t = !1;
                                    break
                                }
                        return t
                    },
                    optimize: function() {
                        for (var t = Ec.arraySlice(this.times), e = Ec.arraySlice(this.values), n = this.getValueSize(), i = 2302 === this.getInterpolation(), r = 1, a = t.length - 1, o = 1; o < a; ++o) {
                            var s = !1
                                , c = t[o];
                            if (c !== t[o + 1] && (1 !== o || c !== c[0]))
                                if (i)
                                    s = !0;
                                else {
                                    var u = o * n
                                        , l = u - n
                                        , h = u + n;
                                    for (c = 0; c !== n; ++c) {
                                        var p = e[u + c];
                                        if (p !== e[l + c] || p !== e[h + c]) {
                                            s = !0;
                                            break
                                        }
                                    }
                                }
                            if (s) {
                                if (o !== r)
                                    for (t[r] = t[o],
                                             s = o * n,
                                             u = r * n,
                                             c = 0; c !== n; ++c)
                                        e[u + c] = e[s + c];
                                ++r
                            }
                        }
                        if (0 < a) {
                            for (t[r] = t[a],
                                     s = a * n,
                                     u = r * n,
                                     c = 0; c !== n; ++c)
                                e[u + c] = e[s + c];
                            ++r
                        }
                        return r !== t.length ? (this.times = Ec.arraySlice(t, 0, r),
                            this.values = Ec.arraySlice(e, 0, r * n)) : (this.times = t,
                            this.values = e),
                            this
                    },
                    clone: function() {
                        var t = Ec.arraySlice(this.times, 0)
                            , e = Ec.arraySlice(this.values, 0);
                        return (t = new this.constructor(this.name,t,e)).createInterpolant = this.createInterpolant,
                            t
                    }
                }),
                Si.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Si,
                    ValueTypeName: "bool",
                    ValueBufferType: Array,
                    DefaultInterpolation: 2300,
                    InterpolantFactoryMethodLinear: void 0,
                    InterpolantFactoryMethodSmooth: void 0
                }),
                Ai.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Ai,
                    ValueTypeName: "color"
                }),
                Ti.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Ti,
                    ValueTypeName: "number"
                }),
                Li.prototype = Object.assign(Object.create(xi.prototype), {
                    constructor: Li,
                    interpolate_: function(t, e, n, i) {
                        var r = this.resultBuffer
                            , a = this.sampleValues
                            , o = this.valueSize;
                        for (e = (n - e) / (i - e),
                                 n = (t *= o) + o; t !== n; t += 4)
                            u.slerpFlat(r, 0, a, t - o, a, t, e);
                        return r
                    }
                }),
                Ei.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Ei,
                    ValueTypeName: "quaternion",
                    DefaultInterpolation: 2301,
                    InterpolantFactoryMethodLinear: function(t) {
                        return new Li(this.times,this.values,this.getValueSize(),t)
                    },
                    InterpolantFactoryMethodSmooth: void 0
                }),
                Pi.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Pi,
                    ValueTypeName: "string",
                    ValueBufferType: Array,
                    DefaultInterpolation: 2300,
                    InterpolantFactoryMethodLinear: void 0,
                    InterpolantFactoryMethodSmooth: void 0
                }),
                Ci.prototype = Object.assign(Object.create(wi.prototype), {
                    constructor: Ci,
                    ValueTypeName: "vector"
                }),
                Object.assign(Oi, {
                    parse: function(t) {
                        for (var e = [], n = t.tracks, i = 1 / (t.fps || 1), r = 0, a = n.length; r !== a; ++r)
                            e.push(Ii(n[r]).scale(i));
                        return new Oi(t.name,t.duration,e)
                    },
                    toJSON: function(t) {
                        var e = []
                            , n = t.tracks;
                        t = {
                            name: t.name,
                            duration: t.duration,
                            tracks: e,
                            uuid: t.uuid
                        };
                        for (var i = 0, r = n.length; i !== r; ++i)
                            e.push(wi.toJSON(n[i]));
                        return t
                    },
                    CreateFromMorphTargetSequence: function(t, e, n, i) {
                        for (var r = e.length, a = [], o = 0; o < r; o++) {
                            var s = []
                                , c = [];
                            s.push((o + r - 1) % r, o, (o + 1) % r),
                                c.push(0, 1, 0);
                            var u = Ec.getKeyframeOrder(s);
                            s = Ec.sortedArray(s, 1, u),
                                c = Ec.sortedArray(c, 1, u),
                            i || 0 !== s[0] || (s.push(r),
                                c.push(c[0])),
                                a.push(new Ti(".morphTargetInfluences[" + e[o].name + "]",s,c).scale(1 / n))
                        }
                        return new Oi(t,-1,a)
                    },
                    findByName: function(t, e) {
                        var n = t;
                        for (Array.isArray(t) || (n = t.geometry && t.geometry.animations || t.animations),
                                 t = 0; t < n.length; t++)
                            if (n[t].name === e)
                                return n[t];
                        return null
                    },
                    CreateClipsFromMorphTargetSequences: function(t, e, n) {
                        for (var i = {}, r = /^([\w-]*?)([\d]+)$/, a = 0, o = t.length; a < o; a++) {
                            var s = t[a]
                                , c = s.name.match(r);
                            if (c && 1 < c.length) {
                                var u = c[1];
                                (c = i[u]) || (i[u] = c = []),
                                    c.push(s)
                            }
                        }
                        for (u in t = [],
                            i)
                            t.push(Oi.CreateFromMorphTargetSequence(u, i[u], e, n));
                        return t
                    },
                    parseAnimation: function(t, e) {
                        if (!t)
                            return null;
                        function n(t, e, n, i, r) {
                            if (0 !== n.length) {
                                var a = []
                                    , o = [];
                                Ec.flattenJSON(n, a, o, i),
                                0 !== a.length && r.push(new t(e,a,o))
                            }
                        }
                        var i = []
                            , r = t.name || "default"
                            , a = t.length || -1
                            , o = t.fps || 30;
                        t = t.hierarchy || [];
                        for (var s = 0; s < t.length; s++) {
                            var c = t[s].keys;
                            if (c && 0 !== c.length)
                                if (c[0].morphTargets) {
                                    a = {};
                                    for (var u = 0; u < c.length; u++)
                                        if (c[u].morphTargets)
                                            for (var l = 0; l < c[u].morphTargets.length; l++)
                                                a[c[u].morphTargets[l]] = -1;
                                    for (var h in a) {
                                        var p = []
                                            , f = [];
                                        for (l = 0; l !== c[u].morphTargets.length; ++l) {
                                            var d = c[u];
                                            p.push(d.time),
                                                f.push(d.morphTarget === h ? 1 : 0)
                                        }
                                        i.push(new Ti(".morphTargetInfluence[" + h + "]",p,f))
                                    }
                                    a = a.length * (o || 1)
                                } else
                                    n(Ci, (u = ".bones[" + e[s].name + "]") + ".position", c, "pos", i),
                                        n(Ei, u + ".quaternion", c, "rot", i),
                                        n(Ci, u + ".scale", c, "scl", i)
                        }
                        return 0 === i.length ? null : new Oi(r,a,i)
                    }
                }),
                Object.assign(Oi.prototype, {
                    resetDuration: function() {
                        for (var t = 0, e = 0, n = this.tracks.length; e !== n; ++e) {
                            var i = this.tracks[e];
                            t = Math.max(t, i.times[i.times.length - 1])
                        }
                        return this.duration = t,
                            this
                    },
                    trim: function() {
                        for (var t = 0; t < this.tracks.length; t++)
                            this.tracks[t].trim(0, this.duration);
                        return this
                    },
                    validate: function() {
                        for (var t = !0, e = 0; e < this.tracks.length; e++)
                            t = t && this.tracks[e].validate();
                        return t
                    },
                    optimize: function() {
                        for (var t = 0; t < this.tracks.length; t++)
                            this.tracks[t].optimize();
                        return this
                    },
                    clone: function() {
                        for (var t = [], e = 0; e < this.tracks.length; e++)
                            t.push(this.tracks[e].clone());
                        return new Oi(this.name,this.duration,t)
                    }
                });
            var Pc = {
                enabled: !1,
                files: {},
                add: function(t, e) {
                    !1 !== this.enabled && (this.files[t] = e)
                },
                get: function(t) {
                    if (!1 !== this.enabled)
                        return this.files[t]
                },
                remove: function(t) {
                    delete this.files[t]
                },
                clear: function() {
                    this.files = {}
                }
            }
                , Cc = new Ni;
            Object.assign(Di.prototype, {
                load: function() {},
                parse: function() {},
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t,
                        this
                },
                setPath: function(t) {
                    return this.path = t,
                        this
                },
                setResourcePath: function(t) {
                    return this.resourcePath = t,
                        this
                }
            });
            var Oc = {};
            Ri.prototype = Object.assign(Object.create(Di.prototype), {
                constructor: Ri,
                load: function(t, e, n, i) {
                    void 0 === t && (t = ""),
                    void 0 !== this.path && (t = this.path + t),
                        t = this.manager.resolveURL(t);
                    var r = this
                        , a = Pc.get(t);
                    if (void 0 !== a)
                        return r.manager.itemStart(t),
                            setTimeout((function() {
                                    e && e(a),
                                        r.manager.itemEnd(t)
                                }
                            ), 0),
                            a;
                    if (void 0 === Oc[t]) {
                        var o = t.match(/^data:(.*?)(;base64)?,(.*)$/);
                        if (o) {
                            n = o[1];
                            var s = !!o[2];
                            o = o[3],
                                o = decodeURIComponent(o),
                            s && (o = atob(o));
                            try {
                                var c = (this.responseType || "").toLowerCase();
                                switch (c) {
                                    case "arraybuffer":
                                    case "blob":
                                        var u = new Uint8Array(o.length);
                                        for (s = 0; s < o.length; s++)
                                            u[s] = o.charCodeAt(s);
                                        var l = "blob" === c ? new Blob([u.buffer],{
                                            type: n
                                        }) : u.buffer;
                                        break;
                                    case "document":
                                        l = (new DOMParser).parseFromString(o, n);
                                        break;
                                    case "json":
                                        l = JSON.parse(o);
                                        break;
                                    default:
                                        l = o
                                }
                                setTimeout((function() {
                                        e && e(l),
                                            r.manager.itemEnd(t)
                                    }
                                ), 0)
                            } catch (e) {
                                setTimeout((function() {
                                        i && i(e),
                                            r.manager.itemError(t),
                                            r.manager.itemEnd(t)
                                    }
                                ), 0)
                            }
                        } else {
                            Oc[t] = [],
                                Oc[t].push({
                                    onLoad: e,
                                    onProgress: n,
                                    onError: i
                                });
                            var h = new XMLHttpRequest;
                            for (s in h.open("GET", t, !0),
                                h.addEventListener("load", (function(e) {
                                        var n = this.response
                                            , i = Oc[t];
                                        if (delete Oc[t],
                                        200 === this.status || 0 === this.status) {
                                            this.status,
                                                Pc.add(t, n);
                                            for (var a = 0, o = i.length; a < o; a++) {
                                                var s = i[a];
                                                s.onLoad && s.onLoad(n)
                                            }
                                        } else {
                                            for (a = 0,
                                                     o = i.length; a < o; a++)
                                                (s = i[a]).onError && s.onError(e);
                                            r.manager.itemError(t)
                                        }
                                        r.manager.itemEnd(t)
                                    }
                                ), !1),
                                h.addEventListener("progress", (function(e) {
                                        for (var n = Oc[t], i = 0, r = n.length; i < r; i++) {
                                            var a = n[i];
                                            a.onProgress && a.onProgress(e)
                                        }
                                    }
                                ), !1),
                                h.addEventListener("error", (function(e) {
                                        var n = Oc[t];
                                        delete Oc[t];
                                        for (var i = 0, a = n.length; i < a; i++) {
                                            var o = n[i];
                                            o.onError && o.onError(e)
                                        }
                                        r.manager.itemError(t),
                                            r.manager.itemEnd(t)
                                    }
                                ), !1),
                                h.addEventListener("abort", (function(e) {
                                        var n = Oc[t];
                                        delete Oc[t];
                                        for (var i = 0, a = n.length; i < a; i++) {
                                            var o = n[i];
                                            o.onError && o.onError(e)
                                        }
                                        r.manager.itemError(t),
                                            r.manager.itemEnd(t)
                                    }
                                ), !1),
                            void 0 !== this.responseType && (h.responseType = this.responseType),
                            void 0 !== this.withCredentials && (h.withCredentials = this.withCredentials),
                            h.overrideMimeType && h.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"),
                                this.requestHeader)
                                h.setRequestHeader(s, this.requestHeader[s]);
                            h.send(null)
                        }
                        return r.manager.itemStart(t),
                            h
                    }
                    Oc[t].push({
                        onLoad: e,
                        onProgress: n,
                        onError: i
                    })
                },
                setResponseType: function(t) {
                    return this.responseType = t,
                        this
                },
                setWithCredentials: function(t) {
                    return this.withCredentials = t,
                        this
                },
                setMimeType: function(t) {
                    return this.mimeType = t,
                        this
                },
                setRequestHeader: function(t) {
                    return this.requestHeader = t,
                        this
                }
            }),
                zi.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: zi,
                    load: function(t, e, n, i) {
                        var r = this
                            , a = new Ri(r.manager);
                        a.setPath(r.path),
                            a.load(t, (function(t) {
                                    e(r.parse(JSON.parse(t)))
                                }
                            ), n, i)
                    },
                    parse: function(t) {
                        for (var e = [], n = 0; n < t.length; n++) {
                            var i = Oi.parse(t[n]);
                            e.push(i)
                        }
                        return e
                    }
                }),
                Fi.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Fi,
                    load: function(t, e, n, i) {
                        function r(r) {
                            c.load(t[r], (function(t) {
                                    t = a.parse(t, !0),
                                        o[r] = {
                                            width: t.width,
                                            height: t.height,
                                            format: t.format,
                                            mipmaps: t.mipmaps
                                        },
                                    6 === (u += 1) && (1 === t.mipmapCount && (s.minFilter = 1006),
                                        s.format = t.format,
                                        s.needsUpdate = !0,
                                    e && e(s))
                                }
                            ), n, i)
                        }
                        var a = this
                            , o = []
                            , s = new en;
                        s.image = o;
                        var c = new Ri(this.manager);
                        if (c.setPath(this.path),
                            c.setResponseType("arraybuffer"),
                            Array.isArray(t))
                            for (var u = 0, l = 0, h = t.length; l < h; ++l)
                                r(l);
                        else
                            c.load(t, (function(t) {
                                    if ((t = a.parse(t, !0)).isCubemap)
                                        for (var n = t.mipmaps.length / t.mipmapCount, i = 0; i < n; i++) {
                                            o[i] = {
                                                mipmaps: []
                                            };
                                            for (var r = 0; r < t.mipmapCount; r++)
                                                o[i].mipmaps.push(t.mipmaps[i * t.mipmapCount + r]),
                                                    o[i].format = t.format,
                                                    o[i].width = t.width,
                                                    o[i].height = t.height
                                        }
                                    else
                                        s.image.width = t.width,
                                            s.image.height = t.height,
                                            s.mipmaps = t.mipmaps;
                                    1 === t.mipmapCount && (s.minFilter = 1006),
                                        s.format = t.format,
                                        s.needsUpdate = !0,
                                    e && e(s)
                                }
                            ), n, i);
                        return s
                    }
                }),
                Bi.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Bi,
                    load: function(t, e, n, i) {
                        var r = this
                            , a = new $
                            , o = new Ri(this.manager);
                        return o.setResponseType("arraybuffer"),
                            o.setPath(this.path),
                            o.load(t, (function(t) {
                                    (t = r.parse(t)) && (void 0 !== t.image ? a.image = t.image : void 0 !== t.data && (a.image.width = t.width,
                                        a.image.height = t.height,
                                        a.image.data = t.data),
                                        a.wrapS = void 0 !== t.wrapS ? t.wrapS : 1001,
                                        a.wrapT = void 0 !== t.wrapT ? t.wrapT : 1001,
                                        a.magFilter = void 0 !== t.magFilter ? t.magFilter : 1006,
                                        a.minFilter = void 0 !== t.minFilter ? t.minFilter : 1006,
                                        a.anisotropy = void 0 !== t.anisotropy ? t.anisotropy : 1,
                                    void 0 !== t.format && (a.format = t.format),
                                    void 0 !== t.type && (a.type = t.type),
                                    void 0 !== t.mipmaps && (a.mipmaps = t.mipmaps,
                                        a.minFilter = 1008),
                                    1 === t.mipmapCount && (a.minFilter = 1006),
                                        a.needsUpdate = !0,
                                    e && e(a, t))
                                }
                            ), n, i),
                            a
                    }
                }),
                Ui.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Ui,
                    load: function(t, e, n, i) {
                        function r() {
                            c.removeEventListener("load", r, !1),
                                c.removeEventListener("error", a, !1),
                                Pc.add(t, this),
                            e && e(this),
                                o.manager.itemEnd(t)
                        }
                        function a(e) {
                            c.removeEventListener("load", r, !1),
                                c.removeEventListener("error", a, !1),
                            i && i(e),
                                o.manager.itemError(t),
                                o.manager.itemEnd(t)
                        }
                        void 0 !== this.path && (t = this.path + t),
                            t = this.manager.resolveURL(t);
                        var o = this
                            , s = Pc.get(t);
                        if (void 0 !== s)
                            return o.manager.itemStart(t),
                                setTimeout((function() {
                                        e && e(s),
                                            o.manager.itemEnd(t)
                                    }
                                ), 0),
                                s;
                        var c = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                        return c.addEventListener("load", r, !1),
                            c.addEventListener("error", a, !1),
                        "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (c.crossOrigin = this.crossOrigin),
                            o.manager.itemStart(t),
                            c.src = t,
                            c
                    }
                }),
                Gi.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Gi,
                    load: function(t, e, n, i) {
                        function r(n) {
                            o.load(t[n], (function(t) {
                                    a.images[n] = t,
                                    6 == ++s && (a.needsUpdate = !0,
                                    e && e(a))
                                }
                            ), void 0, i)
                        }
                        var a = new gt
                            , o = new Ui(this.manager);
                        o.setCrossOrigin(this.crossOrigin),
                            o.setPath(this.path);
                        var s = 0;
                        for (n = 0; n < t.length; ++n)
                            r(n);
                        return a
                    }
                }),
                ki.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: ki,
                    load: function(t, e, n, i) {
                        var a = new r
                            , o = new Ui(this.manager);
                        return o.setCrossOrigin(this.crossOrigin),
                            o.setPath(this.path),
                            o.load(t, (function(n) {
                                    a.image = n,
                                        n = 0 < t.search(/\.jpe?g($|\?)/i) || 0 === t.search(/^data:image\/jpeg/),
                                        a.format = n ? 1022 : 1023,
                                        a.needsUpdate = !0,
                                    void 0 !== e && e(a)
                                }
                            ), n, i),
                            a
                    }
                }),
                Object.assign(ji.prototype, {
                    getPoint: function() {
                        return null
                    },
                    getPointAt: function(t, e) {
                        return t = this.getUtoTmapping(t),
                            this.getPoint(t, e)
                    },
                    getPoints: function(t) {
                        void 0 === t && (t = 5);
                        for (var e = [], n = 0; n <= t; n++)
                            e.push(this.getPoint(n / t));
                        return e
                    },
                    getSpacedPoints: function(t) {
                        void 0 === t && (t = 5);
                        for (var e = [], n = 0; n <= t; n++)
                            e.push(this.getPointAt(n / t));
                        return e
                    },
                    getLength: function() {
                        var t = this.getLengths();
                        return t[t.length - 1]
                    },
                    getLengths: function(t) {
                        if (void 0 === t && (t = this.arcLengthDivisions),
                        this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                            return this.cacheArcLengths;
                        this.needsUpdate = !1;
                        var e, n = [], i = this.getPoint(0), r = 0;
                        for (n.push(0),
                                 e = 1; e <= t; e++) {
                            var a = this.getPoint(e / t);
                            r += a.distanceTo(i),
                                n.push(r),
                                i = a
                        }
                        return this.cacheArcLengths = n
                    },
                    updateArcLengths: function() {
                        this.needsUpdate = !0,
                            this.getLengths()
                    },
                    getUtoTmapping: function(t, e) {
                        var n = this.getLengths()
                            , i = n.length;
                        e = e || t * n[i - 1];
                        for (var r, a = 0, o = i - 1; a <= o; )
                            if ((r = n[t = Math.floor(a + (o - a) / 2)] - e) < 0)
                                a = t + 1;
                            else {
                                if (!(0 < r)) {
                                    o = t;
                                    break
                                }
                                o = t - 1
                            }
                        return n[t = o] === e ? t / (i - 1) : (t + (e - (a = n[t])) / (n[t + 1] - a)) / (i - 1)
                    },
                    getTangent: function(t) {
                        var e = t - 1e-4;
                        return e < 0 && (e = 0),
                        1 < (t += 1e-4) && (t = 1),
                            e = this.getPoint(e),
                            this.getPoint(t).clone().sub(e).normalize()
                    },
                    getTangentAt: function(t) {
                        return t = this.getUtoTmapping(t),
                            this.getTangent(t)
                    },
                    computeFrenetFrames: function(t, e) {
                        var n, i = new l, r = [], a = [], o = [], s = new l, c = new h;
                        for (n = 0; n <= t; n++) {
                            var u = n / t;
                            r[n] = this.getTangentAt(u),
                                r[n].normalize()
                        }
                        a[0] = new l,
                            o[0] = new l,
                            n = Number.MAX_VALUE,
                            u = Math.abs(r[0].x);
                        var p = Math.abs(r[0].y)
                            , f = Math.abs(r[0].z);
                        for (u <= n && (n = u,
                            i.set(1, 0, 0)),
                             p <= n && (n = p,
                                 i.set(0, 1, 0)),
                             f <= n && i.set(0, 0, 1),
                                 s.crossVectors(r[0], i).normalize(),
                                 a[0].crossVectors(r[0], s),
                                 o[0].crossVectors(r[0], a[0]),
                                 n = 1; n <= t; n++)
                            a[n] = a[n - 1].clone(),
                                o[n] = o[n - 1].clone(),
                                s.crossVectors(r[n - 1], r[n]),
                            s.length() > Number.EPSILON && (s.normalize(),
                                i = Math.acos(Ca.clamp(r[n - 1].dot(r[n]), -1, 1)),
                                a[n].applyMatrix4(c.makeRotationAxis(s, i))),
                                o[n].crossVectors(r[n], a[n]);
                        if (!0 === e)
                            for (i = Math.acos(Ca.clamp(a[0].dot(a[t]), -1, 1)),
                                     i /= t,
                                 0 < r[0].dot(s.crossVectors(a[0], a[t])) && (i = -i),
                                     n = 1; n <= t; n++)
                                a[n].applyMatrix4(c.makeRotationAxis(r[n], i * n)),
                                    o[n].crossVectors(r[n], a[n]);
                        return {
                            tangents: r,
                            normals: a,
                            binormals: o
                        }
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.arcLengthDivisions = t.arcLengthDivisions,
                            this
                    },
                    toJSON: function() {
                        var t = {
                            metadata: {
                                version: 4.5,
                                type: "Curve",
                                generator: "Curve.toJSON"
                            }
                        };
                        return t.arcLengthDivisions = this.arcLengthDivisions,
                            t.type = this.type,
                            t
                    },
                    fromJSON: function(t) {
                        return this.arcLengthDivisions = t.arcLengthDivisions,
                            this
                    }
                }),
                ((Vi.prototype = Object.create(ji.prototype)).constructor = Vi).prototype.isEllipseCurve = !0,
                Vi.prototype.getPoint = function(t, e) {
                    e = e || new n;
                    for (var i = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, a = Math.abs(r) < Number.EPSILON; r < 0; )
                        r += i;
                    for (; i < r; )
                        r -= i;
                    r < Number.EPSILON && (r = a ? 0 : i),
                    !0 !== this.aClockwise || a || (r = r === i ? -i : r - i),
                        i = this.aStartAngle + t * r,
                        t = this.aX + this.xRadius * Math.cos(i);
                    var o = this.aY + this.yRadius * Math.sin(i);
                    return 0 !== this.aRotation && (i = Math.cos(this.aRotation),
                        r = Math.sin(this.aRotation),
                        t = (a = t - this.aX) * i - (o -= this.aY) * r + this.aX,
                        o = a * r + o * i + this.aY),
                        e.set(t, o)
                }
                ,
                Vi.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.aX = t.aX,
                        this.aY = t.aY,
                        this.xRadius = t.xRadius,
                        this.yRadius = t.yRadius,
                        this.aStartAngle = t.aStartAngle,
                        this.aEndAngle = t.aEndAngle,
                        this.aClockwise = t.aClockwise,
                        this.aRotation = t.aRotation,
                        this
                }
                ,
                Vi.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.aX = this.aX,
                        t.aY = this.aY,
                        t.xRadius = this.xRadius,
                        t.yRadius = this.yRadius,
                        t.aStartAngle = this.aStartAngle,
                        t.aEndAngle = this.aEndAngle,
                        t.aClockwise = this.aClockwise,
                        t.aRotation = this.aRotation,
                        t
                }
                ,
                Vi.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.aX = t.aX,
                        this.aY = t.aY,
                        this.xRadius = t.xRadius,
                        this.yRadius = t.yRadius,
                        this.aStartAngle = t.aStartAngle,
                        this.aEndAngle = t.aEndAngle,
                        this.aClockwise = t.aClockwise,
                        this.aRotation = t.aRotation,
                        this
                }
                ,
                ((Wi.prototype = Object.create(Vi.prototype)).constructor = Wi).prototype.isArcCurve = !0;
            var Ic = new l
                , Nc = new Hi
                , Dc = new Hi
                , Rc = new Hi;
            ((qi.prototype = Object.create(ji.prototype)).constructor = qi).prototype.isCatmullRomCurve3 = !0,
                qi.prototype.getPoint = function(t, e) {
                    e = e || new l;
                    var n = this.points
                        , i = n.length;
                    t *= i - (this.closed ? 0 : 1);
                    var r = Math.floor(t);
                    if (t -= r,
                        this.closed ? r += 0 < r ? 0 : (Math.floor(Math.abs(r) / i) + 1) * i : 0 === t && r === i - 1 && (r = i - 2,
                            t = 1),
                    this.closed || 0 < r)
                        var a = n[(r - 1) % i];
                    else
                        Ic.subVectors(n[0], n[1]).add(n[0]),
                            a = Ic;
                    var o = n[r % i]
                        , s = n[(r + 1) % i];
                    if (n = this.closed || r + 2 < i ? n[(r + 2) % i] : (Ic.subVectors(n[i - 1], n[i - 2]).add(n[i - 1]),
                        Ic),
                    "centripetal" === this.curveType || "chordal" === this.curveType) {
                        var c = "chordal" === this.curveType ? .5 : .25;
                        i = Math.pow(a.distanceToSquared(o), c),
                        (r = Math.pow(o.distanceToSquared(s), c)) < 1e-4 && (r = 1),
                        i < 1e-4 && (i = r),
                        (c = Math.pow(s.distanceToSquared(n), c)) < 1e-4 && (c = r),
                            Nc.initNonuniformCatmullRom(a.x, o.x, s.x, n.x, i, r, c),
                            Dc.initNonuniformCatmullRom(a.y, o.y, s.y, n.y, i, r, c),
                            Rc.initNonuniformCatmullRom(a.z, o.z, s.z, n.z, i, r, c)
                    } else
                        "catmullrom" === this.curveType && (Nc.initCatmullRom(a.x, o.x, s.x, n.x, this.tension),
                            Dc.initCatmullRom(a.y, o.y, s.y, n.y, this.tension),
                            Rc.initCatmullRom(a.z, o.z, s.z, n.z, this.tension));
                    return e.set(Nc.calc(t), Dc.calc(t), Rc.calc(t)),
                        e
                }
                ,
                qi.prototype.copy = function(t) {
                    ji.prototype.copy.call(this, t),
                        this.points = [];
                    for (var e = 0, n = t.points.length; e < n; e++)
                        this.points.push(t.points[e].clone());
                    return this.closed = t.closed,
                        this.curveType = t.curveType,
                        this.tension = t.tension,
                        this
                }
                ,
                qi.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    t.points = [];
                    for (var e = 0, n = this.points.length; e < n; e++)
                        t.points.push(this.points[e].toArray());
                    return t.closed = this.closed,
                        t.curveType = this.curveType,
                        t.tension = this.tension,
                        t
                }
                ,
                qi.prototype.fromJSON = function(t) {
                    ji.prototype.fromJSON.call(this, t),
                        this.points = [];
                    for (var e = 0, n = t.points.length; e < n; e++) {
                        var i = t.points[e];
                        this.points.push((new l).fromArray(i))
                    }
                    return this.closed = t.closed,
                        this.curveType = t.curveType,
                        this.tension = t.tension,
                        this
                }
                ,
                ((Ji.prototype = Object.create(ji.prototype)).constructor = Ji).prototype.isCubicBezierCurve = !0,
                Ji.prototype.getPoint = function(t, e) {
                    e = e || new n;
                    var i = this.v0
                        , r = this.v1
                        , a = this.v2
                        , o = this.v3;
                    return e.set(Zi(t, i.x, r.x, a.x, o.x), Zi(t, i.y, r.y, a.y, o.y)),
                        e
                }
                ,
                Ji.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v0.copy(t.v0),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this.v3.copy(t.v3),
                        this
                }
                ,
                Ji.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v0 = this.v0.toArray(),
                        t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t.v3 = this.v3.toArray(),
                        t
                }
                ,
                Ji.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v0.fromArray(t.v0),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this.v3.fromArray(t.v3),
                        this
                }
                ,
                ((Ki.prototype = Object.create(ji.prototype)).constructor = Ki).prototype.isCubicBezierCurve3 = !0,
                Ki.prototype.getPoint = function(t, e) {
                    e = e || new l;
                    var n = this.v0
                        , i = this.v1
                        , r = this.v2
                        , a = this.v3;
                    return e.set(Zi(t, n.x, i.x, r.x, a.x), Zi(t, n.y, i.y, r.y, a.y), Zi(t, n.z, i.z, r.z, a.z)),
                        e
                }
                ,
                Ki.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v0.copy(t.v0),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this.v3.copy(t.v3),
                        this
                }
                ,
                Ki.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v0 = this.v0.toArray(),
                        t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t.v3 = this.v3.toArray(),
                        t
                }
                ,
                Ki.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v0.fromArray(t.v0),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this.v3.fromArray(t.v3),
                        this
                }
                ,
                ((Qi.prototype = Object.create(ji.prototype)).constructor = Qi).prototype.isLineCurve = !0,
                Qi.prototype.getPoint = function(t, e) {
                    return e = e || new n,
                        1 === t ? e.copy(this.v2) : (e.copy(this.v2).sub(this.v1),
                            e.multiplyScalar(t).add(this.v1)),
                        e
                }
                ,
                Qi.prototype.getPointAt = function(t, e) {
                    return this.getPoint(t, e)
                }
                ,
                Qi.prototype.getTangent = function() {
                    return this.v2.clone().sub(this.v1).normalize()
                }
                ,
                Qi.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this
                }
                ,
                Qi.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t
                }
                ,
                Qi.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this
                }
                ,
                (($i.prototype = Object.create(ji.prototype)).constructor = $i).prototype.isLineCurve3 = !0,
                $i.prototype.getPoint = function(t, e) {
                    return e = e || new l,
                        1 === t ? e.copy(this.v2) : (e.copy(this.v2).sub(this.v1),
                            e.multiplyScalar(t).add(this.v1)),
                        e
                }
                ,
                $i.prototype.getPointAt = function(t, e) {
                    return this.getPoint(t, e)
                }
                ,
                $i.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this
                }
                ,
                $i.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t
                }
                ,
                $i.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this
                }
                ,
                ((tr.prototype = Object.create(ji.prototype)).constructor = tr).prototype.isQuadraticBezierCurve = !0,
                tr.prototype.getPoint = function(t, e) {
                    e = e || new n;
                    var i = this.v0
                        , r = this.v1
                        , a = this.v2;
                    return e.set(Yi(t, i.x, r.x, a.x), Yi(t, i.y, r.y, a.y)),
                        e
                }
                ,
                tr.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v0.copy(t.v0),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this
                }
                ,
                tr.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v0 = this.v0.toArray(),
                        t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t
                }
                ,
                tr.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v0.fromArray(t.v0),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this
                }
                ,
                ((er.prototype = Object.create(ji.prototype)).constructor = er).prototype.isQuadraticBezierCurve3 = !0,
                er.prototype.getPoint = function(t, e) {
                    e = e || new l;
                    var n = this.v0
                        , i = this.v1
                        , r = this.v2;
                    return e.set(Yi(t, n.x, i.x, r.x), Yi(t, n.y, i.y, r.y), Yi(t, n.z, i.z, r.z)),
                        e
                }
                ,
                er.prototype.copy = function(t) {
                    return ji.prototype.copy.call(this, t),
                        this.v0.copy(t.v0),
                        this.v1.copy(t.v1),
                        this.v2.copy(t.v2),
                        this
                }
                ,
                er.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    return t.v0 = this.v0.toArray(),
                        t.v1 = this.v1.toArray(),
                        t.v2 = this.v2.toArray(),
                        t
                }
                ,
                er.prototype.fromJSON = function(t) {
                    return ji.prototype.fromJSON.call(this, t),
                        this.v0.fromArray(t.v0),
                        this.v1.fromArray(t.v1),
                        this.v2.fromArray(t.v2),
                        this
                }
                ,
                ((nr.prototype = Object.create(ji.prototype)).constructor = nr).prototype.isSplineCurve = !0,
                nr.prototype.getPoint = function(t, e) {
                    e = e || new n;
                    var i = this.points
                        , r = (i.length - 1) * t;
                    r -= t = Math.floor(r);
                    var a = i[0 === t ? t : t - 1]
                        , o = i[t]
                        , s = i[t > i.length - 2 ? i.length - 1 : t + 1];
                    return i = i[t > i.length - 3 ? i.length - 1 : t + 2],
                        e.set(Xi(r, a.x, o.x, s.x, i.x), Xi(r, a.y, o.y, s.y, i.y)),
                        e
                }
                ,
                nr.prototype.copy = function(t) {
                    ji.prototype.copy.call(this, t),
                        this.points = [];
                    for (var e = 0, n = t.points.length; e < n; e++)
                        this.points.push(t.points[e].clone());
                    return this
                }
                ,
                nr.prototype.toJSON = function() {
                    var t = ji.prototype.toJSON.call(this);
                    t.points = [];
                    for (var e = 0, n = this.points.length; e < n; e++)
                        t.points.push(this.points[e].toArray());
                    return t
                }
                ,
                nr.prototype.fromJSON = function(t) {
                    ji.prototype.fromJSON.call(this, t),
                        this.points = [];
                    for (var e = 0, i = t.points.length; e < i; e++) {
                        var r = t.points[e];
                        this.points.push((new n).fromArray(r))
                    }
                    return this
                }
            ;
            var zc = Object.freeze({
                __proto__: null,
                ArcCurve: Wi,
                CatmullRomCurve3: qi,
                CubicBezierCurve: Ji,
                CubicBezierCurve3: Ki,
                EllipseCurve: Vi,
                LineCurve: Qi,
                LineCurve3: $i,
                QuadraticBezierCurve: tr,
                QuadraticBezierCurve3: er,
                SplineCurve: nr
            });
            ir.prototype = Object.assign(Object.create(ji.prototype), {
                constructor: ir,
                add: function(t) {
                    this.curves.push(t)
                },
                closePath: function() {
                    var t = this.curves[0].getPoint(0)
                        , e = this.curves[this.curves.length - 1].getPoint(1);
                    t.equals(e) || this.curves.push(new Qi(e,t))
                },
                getPoint: function(t) {
                    var e = t * this.getLength()
                        , n = this.getCurveLengths();
                    for (t = 0; t < n.length; ) {
                        if (n[t] >= e)
                            return e = n[t] - e,
                                n = (t = this.curves[t]).getLength(),
                                t.getPointAt(0 === n ? 0 : 1 - e / n);
                        t++
                    }
                    return null
                },
                getLength: function() {
                    var t = this.getCurveLengths();
                    return t[t.length - 1]
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                        this.cacheLengths = null,
                        this.getCurveLengths()
                },
                getCurveLengths: function() {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                        return this.cacheLengths;
                    for (var t = [], e = 0, n = 0, i = this.curves.length; n < i; n++)
                        e += this.curves[n].getLength(),
                            t.push(e);
                    return this.cacheLengths = t
                },
                getSpacedPoints: function(t) {
                    void 0 === t && (t = 40);
                    for (var e = [], n = 0; n <= t; n++)
                        e.push(this.getPoint(n / t));
                    return this.autoClose && e.push(e[0]),
                        e
                },
                getPoints: function(t) {
                    t = t || 12;
                    for (var e, n = [], i = 0, r = this.curves; i < r.length; i++) {
                        var a = r[i];
                        a = a.getPoints(a && a.isEllipseCurve ? 2 * t : a && (a.isLineCurve || a.isLineCurve3) ? 1 : a && a.isSplineCurve ? t * a.points.length : t);
                        for (var o = 0; o < a.length; o++) {
                            var s = a[o];
                            e && e.equals(s) || (n.push(s),
                                e = s)
                        }
                    }
                    return this.autoClose && 1 < n.length && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
                        n
                },
                copy: function(t) {
                    ji.prototype.copy.call(this, t),
                        this.curves = [];
                    for (var e = 0, n = t.curves.length; e < n; e++)
                        this.curves.push(t.curves[e].clone());
                    return this.autoClose = t.autoClose,
                        this
                },
                toJSON: function() {
                    var t = ji.prototype.toJSON.call(this);
                    t.autoClose = this.autoClose,
                        t.curves = [];
                    for (var e = 0, n = this.curves.length; e < n; e++)
                        t.curves.push(this.curves[e].toJSON());
                    return t
                },
                fromJSON: function(t) {
                    ji.prototype.fromJSON.call(this, t),
                        this.autoClose = t.autoClose,
                        this.curves = [];
                    for (var e = 0, n = t.curves.length; e < n; e++) {
                        var i = t.curves[e];
                        this.curves.push((new zc[i.type]).fromJSON(i))
                    }
                    return this
                }
            }),
                rr.prototype = Object.assign(Object.create(ir.prototype), {
                    constructor: rr,
                    setFromPoints: function(t) {
                        this.moveTo(t[0].x, t[0].y);
                        for (var e = 1, n = t.length; e < n; e++)
                            this.lineTo(t[e].x, t[e].y);
                        return this
                    },
                    moveTo: function(t, e) {
                        return this.currentPoint.set(t, e),
                            this
                    },
                    lineTo: function(t, e) {
                        var i = new Qi(this.currentPoint.clone(),new n(t,e));
                        return this.curves.push(i),
                            this.currentPoint.set(t, e),
                            this
                    },
                    quadraticCurveTo: function(t, e, i, r) {
                        return t = new tr(this.currentPoint.clone(),new n(t,e),new n(i,r)),
                            this.curves.push(t),
                            this.currentPoint.set(i, r),
                            this
                    },
                    bezierCurveTo: function(t, e, i, r, a, o) {
                        return t = new Ji(this.currentPoint.clone(),new n(t,e),new n(i,r),new n(a,o)),
                            this.curves.push(t),
                            this.currentPoint.set(a, o),
                            this
                    },
                    splineThru: function(t) {
                        var e = [this.currentPoint.clone()].concat(t);
                        return e = new nr(e),
                            this.curves.push(e),
                            this.currentPoint.copy(t[t.length - 1]),
                            this
                    },
                    arc: function(t, e, n, i, r, a) {
                        return this.absarc(t + this.currentPoint.x, e + this.currentPoint.y, n, i, r, a),
                            this
                    },
                    absarc: function(t, e, n, i, r, a) {
                        return this.absellipse(t, e, n, n, i, r, a),
                            this
                    },
                    ellipse: function(t, e, n, i, r, a, o, s) {
                        return this.absellipse(t + this.currentPoint.x, e + this.currentPoint.y, n, i, r, a, o, s),
                            this
                    },
                    absellipse: function(t, e, n, i, r, a, o, s) {
                        return t = new Vi(t,e,n,i,r,a,o,s),
                        0 < this.curves.length && ((e = t.getPoint(0)).equals(this.currentPoint) || this.lineTo(e.x, e.y)),
                            this.curves.push(t),
                            t = t.getPoint(1),
                            this.currentPoint.copy(t),
                            this
                    },
                    copy: function(t) {
                        return ir.prototype.copy.call(this, t),
                            this.currentPoint.copy(t.currentPoint),
                            this
                    },
                    toJSON: function() {
                        var t = ir.prototype.toJSON.call(this);
                        return t.currentPoint = this.currentPoint.toArray(),
                            t
                    },
                    fromJSON: function(t) {
                        return ir.prototype.fromJSON.call(this, t),
                            this.currentPoint.fromArray(t.currentPoint),
                            this
                    }
                }),
                ar.prototype = Object.assign(Object.create(rr.prototype), {
                    constructor: ar,
                    getPointsHoles: function(t) {
                        for (var e = [], n = 0, i = this.holes.length; n < i; n++)
                            e[n] = this.holes[n].getPoints(t);
                        return e
                    },
                    extractPoints: function(t) {
                        return {
                            shape: this.getPoints(t),
                            holes: this.getPointsHoles(t)
                        }
                    },
                    copy: function(t) {
                        rr.prototype.copy.call(this, t),
                            this.holes = [];
                        for (var e = 0, n = t.holes.length; e < n; e++)
                            this.holes.push(t.holes[e].clone());
                        return this
                    },
                    toJSON: function() {
                        var t = rr.prototype.toJSON.call(this);
                        t.uuid = this.uuid,
                            t.holes = [];
                        for (var e = 0, n = this.holes.length; e < n; e++)
                            t.holes.push(this.holes[e].toJSON());
                        return t
                    },
                    fromJSON: function(t) {
                        rr.prototype.fromJSON.call(this, t),
                            this.uuid = t.uuid,
                            this.holes = [];
                        for (var e = 0, n = t.holes.length; e < n; e++) {
                            var i = t.holes[e];
                            this.holes.push((new rr).fromJSON(i))
                        }
                        return this
                    }
                }),
                or.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: or,
                    isLight: !0,
                    copy: function(t) {
                        return d.prototype.copy.call(this, t),
                            this.color.copy(t.color),
                            this.intensity = t.intensity,
                            this
                    },
                    toJSON: function(t) {
                        return (t = d.prototype.toJSON.call(this, t)).object.color = this.color.getHex(),
                            t.object.intensity = this.intensity,
                        void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
                        void 0 !== this.distance && (t.object.distance = this.distance),
                        void 0 !== this.angle && (t.object.angle = this.angle),
                        void 0 !== this.decay && (t.object.decay = this.decay),
                        void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
                        void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
                            t
                    }
                }),
                sr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: sr,
                    isHemisphereLight: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.groundColor.copy(t.groundColor),
                            this
                    }
                }),
                Object.assign(cr.prototype, {
                    _projScreenMatrix: new h,
                    _lightPositionWorld: new l,
                    _lookTarget: new l,
                    getViewportCount: function() {
                        return this._viewportCount
                    },
                    getFrustum: function() {
                        return this._frustum
                    },
                    updateMatrices: function(t) {
                        var e = this.camera
                            , n = this.matrix
                            , i = this._projScreenMatrix
                            , r = this._lookTarget
                            , a = this._lightPositionWorld;
                        a.setFromMatrixPosition(t.matrixWorld),
                            e.position.copy(a),
                            r.setFromMatrixPosition(t.target.matrixWorld),
                            e.lookAt(r),
                            e.updateMatrixWorld(),
                            i.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                            this._frustum.setFromProjectionMatrix(i),
                            n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                            n.multiply(e.projectionMatrix),
                            n.multiply(e.matrixWorldInverse)
                    },
                    getViewport: function(t) {
                        return this._viewports[t]
                    },
                    getFrameExtents: function() {
                        return this._frameExtents
                    },
                    copy: function(t) {
                        return this.camera = t.camera.clone(),
                            this.bias = t.bias,
                            this.radius = t.radius,
                            this.mapSize.copy(t.mapSize),
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    toJSON: function() {
                        var t = {};
                        return 0 !== this.bias && (t.bias = this.bias),
                        1 !== this.radius && (t.radius = this.radius),
                        512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
                            t.camera = this.camera.toJSON(!1).object,
                            delete t.camera.matrix,
                            t
                    }
                }),
                ur.prototype = Object.assign(Object.create(cr.prototype), {
                    constructor: ur,
                    isSpotLightShadow: !0,
                    updateMatrices: function(t) {
                        var e = this.camera
                            , n = 2 * Ca.RAD2DEG * t.angle
                            , i = this.mapSize.width / this.mapSize.height
                            , r = t.distance || e.far;
                        n === e.fov && i === e.aspect && r === e.far || (e.fov = n,
                            e.aspect = i,
                            e.far = r,
                            e.updateProjectionMatrix()),
                            cr.prototype.updateMatrices.call(this, t)
                    }
                }),
                lr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: lr,
                    isSpotLight: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.distance = t.distance,
                            this.angle = t.angle,
                            this.penumbra = t.penumbra,
                            this.decay = t.decay,
                            this.target = t.target.clone(),
                            this.shadow = t.shadow.clone(),
                            this
                    }
                }),
                hr.prototype = Object.assign(Object.create(cr.prototype), {
                    constructor: hr,
                    isPointLightShadow: !0,
                    updateMatrices: function(t, e) {
                        void 0 === e && (e = 0);
                        var n = this.camera
                            , i = this.matrix
                            , r = this._lightPositionWorld
                            , a = this._lookTarget
                            , o = this._projScreenMatrix;
                        r.setFromMatrixPosition(t.matrixWorld),
                            n.position.copy(r),
                            a.copy(n.position),
                            a.add(this._cubeDirections[e]),
                            n.up.copy(this._cubeUps[e]),
                            n.lookAt(a),
                            n.updateMatrixWorld(),
                            i.makeTranslation(-r.x, -r.y, -r.z),
                            o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
                            this._frustum.setFromProjectionMatrix(o)
                    }
                }),
                pr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: pr,
                    isPointLight: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.distance = t.distance,
                            this.decay = t.decay,
                            this.shadow = t.shadow.clone(),
                            this
                    }
                }),
                fr.prototype = Object.assign(Object.create(Z.prototype), {
                    constructor: fr,
                    isOrthographicCamera: !0,
                    copy: function(t, e) {
                        return Z.prototype.copy.call(this, t, e),
                            this.left = t.left,
                            this.right = t.right,
                            this.top = t.top,
                            this.bottom = t.bottom,
                            this.near = t.near,
                            this.far = t.far,
                            this.zoom = t.zoom,
                            this.view = null === t.view ? null : Object.assign({}, t.view),
                            this
                    },
                    setViewOffset: function(t, e, n, i, r, a) {
                        null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }),
                            this.view.enabled = !0,
                            this.view.fullWidth = t,
                            this.view.fullHeight = e,
                            this.view.offsetX = n,
                            this.view.offsetY = i,
                            this.view.width = r,
                            this.view.height = a,
                            this.updateProjectionMatrix()
                    },
                    clearViewOffset: function() {
                        null !== this.view && (this.view.enabled = !1),
                            this.updateProjectionMatrix()
                    },
                    updateProjectionMatrix: function() {
                        var t = (this.right - this.left) / (2 * this.zoom)
                            , e = (this.top - this.bottom) / (2 * this.zoom)
                            , n = (this.right + this.left) / 2
                            , i = (this.top + this.bottom) / 2
                            , r = n - t;
                        n += t,
                            t = i + e,
                            e = i - e,
                        null !== this.view && this.view.enabled && (i = (this.right - this.left) / this.view.fullWidth / this.zoom,
                            e = (this.top - this.bottom) / this.view.fullHeight / this.zoom,
                            n = (r += i * this.view.offsetX) + i * this.view.width,
                            e = (t -= e * this.view.offsetY) - e * this.view.height),
                            this.projectionMatrix.makeOrthographic(r, n, t, e, this.near, this.far),
                            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                    },
                    toJSON: function(t) {
                        return (t = d.prototype.toJSON.call(this, t)).object.zoom = this.zoom,
                            t.object.left = this.left,
                            t.object.right = this.right,
                            t.object.top = this.top,
                            t.object.bottom = this.bottom,
                            t.object.near = this.near,
                            t.object.far = this.far,
                        null !== this.view && (t.object.view = Object.assign({}, this.view)),
                            t
                    }
                }),
                dr.prototype = Object.assign(Object.create(cr.prototype), {
                    constructor: dr,
                    isDirectionalLightShadow: !0,
                    updateMatrices: function(t) {
                        cr.prototype.updateMatrices.call(this, t)
                    }
                }),
                mr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: mr,
                    isDirectionalLight: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.target = t.target.clone(),
                            this.shadow = t.shadow.clone(),
                            this
                    }
                }),
                gr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: gr,
                    isAmbientLight: !0
                }),
                vr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: vr,
                    isRectAreaLight: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.width = t.width,
                            this.height = t.height,
                            this
                    },
                    toJSON: function(t) {
                        return (t = or.prototype.toJSON.call(this, t)).object.width = this.width,
                            t.object.height = this.height,
                            t
                    }
                }),
                yr.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: yr,
                    load: function(t, e, n, i) {
                        var r = this
                            , a = new Ri(r.manager);
                        a.setPath(r.path),
                            a.load(t, (function(t) {
                                    e(r.parse(JSON.parse(t)))
                                }
                            ), n, i)
                    },
                    parse: function(t) {
                        function e(t) {
                            return r[t],
                                r[t]
                        }
                        var r = this.textures
                            , o = new Lc[t.type];
                        if (void 0 !== t.uuid && (o.uuid = t.uuid),
                        void 0 !== t.name && (o.name = t.name),
                        void 0 !== t.color && o.color.setHex(t.color),
                        void 0 !== t.roughness && (o.roughness = t.roughness),
                        void 0 !== t.metalness && (o.metalness = t.metalness),
                        void 0 !== t.sheen && (o.sheen = (new M).setHex(t.sheen)),
                        void 0 !== t.emissive && o.emissive.setHex(t.emissive),
                        void 0 !== t.specular && o.specular.setHex(t.specular),
                        void 0 !== t.shininess && (o.shininess = t.shininess),
                        void 0 !== t.clearcoat && (o.clearcoat = t.clearcoat),
                        void 0 !== t.clearcoatRoughness && (o.clearcoatRoughness = t.clearcoatRoughness),
                        void 0 !== t.fog && (o.fog = t.fog),
                        void 0 !== t.flatShading && (o.flatShading = t.flatShading),
                        void 0 !== t.blending && (o.blending = t.blending),
                        void 0 !== t.combine && (o.combine = t.combine),
                        void 0 !== t.side && (o.side = t.side),
                        void 0 !== t.opacity && (o.opacity = t.opacity),
                        void 0 !== t.transparent && (o.transparent = t.transparent),
                        void 0 !== t.alphaTest && (o.alphaTest = t.alphaTest),
                        void 0 !== t.depthTest && (o.depthTest = t.depthTest),
                        void 0 !== t.depthWrite && (o.depthWrite = t.depthWrite),
                        void 0 !== t.colorWrite && (o.colorWrite = t.colorWrite),
                        void 0 !== t.stencilWrite && (o.stencilWrite = t.stencilWrite),
                        void 0 !== t.stencilWriteMask && (o.stencilWriteMask = t.stencilWriteMask),
                        void 0 !== t.stencilFunc && (o.stencilFunc = t.stencilFunc),
                        void 0 !== t.stencilRef && (o.stencilRef = t.stencilRef),
                        void 0 !== t.stencilFuncMask && (o.stencilFuncMask = t.stencilFuncMask),
                        void 0 !== t.stencilFail && (o.stencilFail = t.stencilFail),
                        void 0 !== t.stencilZFail && (o.stencilZFail = t.stencilZFail),
                        void 0 !== t.stencilZPass && (o.stencilZPass = t.stencilZPass),
                        void 0 !== t.wireframe && (o.wireframe = t.wireframe),
                        void 0 !== t.wireframeLinewidth && (o.wireframeLinewidth = t.wireframeLinewidth),
                        void 0 !== t.wireframeLinecap && (o.wireframeLinecap = t.wireframeLinecap),
                        void 0 !== t.wireframeLinejoin && (o.wireframeLinejoin = t.wireframeLinejoin),
                        void 0 !== t.rotation && (o.rotation = t.rotation),
                        1 !== t.linewidth && (o.linewidth = t.linewidth),
                        void 0 !== t.dashSize && (o.dashSize = t.dashSize),
                        void 0 !== t.gapSize && (o.gapSize = t.gapSize),
                        void 0 !== t.scale && (o.scale = t.scale),
                        void 0 !== t.polygonOffset && (o.polygonOffset = t.polygonOffset),
                        void 0 !== t.polygonOffsetFactor && (o.polygonOffsetFactor = t.polygonOffsetFactor),
                        void 0 !== t.polygonOffsetUnits && (o.polygonOffsetUnits = t.polygonOffsetUnits),
                        void 0 !== t.skinning && (o.skinning = t.skinning),
                        void 0 !== t.morphTargets && (o.morphTargets = t.morphTargets),
                        void 0 !== t.morphNormals && (o.morphNormals = t.morphNormals),
                        void 0 !== t.dithering && (o.dithering = t.dithering),
                        void 0 !== t.vertexTangents && (o.vertexTangents = t.vertexTangents),
                        void 0 !== t.visible && (o.visible = t.visible),
                        void 0 !== t.toneMapped && (o.toneMapped = t.toneMapped),
                        void 0 !== t.userData && (o.userData = t.userData),
                        void 0 !== t.vertexColors && (o.vertexColors = "number" == typeof t.vertexColors ? 0 < t.vertexColors : t.vertexColors),
                        void 0 !== t.uniforms)
                            for (var s in t.uniforms) {
                                var c = t.uniforms[s];
                                switch (o.uniforms[s] = {},
                                    c.type) {
                                    case "t":
                                        o.uniforms[s].value = e(c.value);
                                        break;
                                    case "c":
                                        o.uniforms[s].value = (new M).setHex(c.value);
                                        break;
                                    case "v2":
                                        o.uniforms[s].value = (new n).fromArray(c.value);
                                        break;
                                    case "v3":
                                        o.uniforms[s].value = (new l).fromArray(c.value);
                                        break;
                                    case "v4":
                                        o.uniforms[s].value = (new a).fromArray(c.value);
                                        break;
                                    case "m3":
                                        o.uniforms[s].value = (new i).fromArray(c.value);
                                    case "m4":
                                        o.uniforms[s].value = (new h).fromArray(c.value);
                                        break;
                                    default:
                                        o.uniforms[s].value = c.value
                                }
                            }
                        if (void 0 !== t.defines && (o.defines = t.defines),
                        void 0 !== t.vertexShader && (o.vertexShader = t.vertexShader),
                        void 0 !== t.fragmentShader && (o.fragmentShader = t.fragmentShader),
                        void 0 !== t.extensions)
                            for (var u in t.extensions)
                                o.extensions[u] = t.extensions[u];
                        return void 0 !== t.shading && (o.flatShading = 1 === t.shading),
                        void 0 !== t.size && (o.size = t.size),
                        void 0 !== t.sizeAttenuation && (o.sizeAttenuation = t.sizeAttenuation),
                        void 0 !== t.map && (o.map = e(t.map)),
                        void 0 !== t.matcap && (o.matcap = e(t.matcap)),
                        void 0 !== t.alphaMap && (o.alphaMap = e(t.alphaMap)),
                        void 0 !== t.bumpMap && (o.bumpMap = e(t.bumpMap)),
                        void 0 !== t.bumpScale && (o.bumpScale = t.bumpScale),
                        void 0 !== t.normalMap && (o.normalMap = e(t.normalMap)),
                        void 0 !== t.normalMapType && (o.normalMapType = t.normalMapType),
                        void 0 !== t.normalScale && (s = t.normalScale,
                        !1 === Array.isArray(s) && (s = [s, s]),
                            o.normalScale = (new n).fromArray(s)),
                        void 0 !== t.displacementMap && (o.displacementMap = e(t.displacementMap)),
                        void 0 !== t.displacementScale && (o.displacementScale = t.displacementScale),
                        void 0 !== t.displacementBias && (o.displacementBias = t.displacementBias),
                        void 0 !== t.roughnessMap && (o.roughnessMap = e(t.roughnessMap)),
                        void 0 !== t.metalnessMap && (o.metalnessMap = e(t.metalnessMap)),
                        void 0 !== t.emissiveMap && (o.emissiveMap = e(t.emissiveMap)),
                        void 0 !== t.emissiveIntensity && (o.emissiveIntensity = t.emissiveIntensity),
                        void 0 !== t.specularMap && (o.specularMap = e(t.specularMap)),
                        void 0 !== t.envMap && (o.envMap = e(t.envMap)),
                        void 0 !== t.envMapIntensity && (o.envMapIntensity = t.envMapIntensity),
                        void 0 !== t.reflectivity && (o.reflectivity = t.reflectivity),
                        void 0 !== t.refractionRatio && (o.refractionRatio = t.refractionRatio),
                        void 0 !== t.lightMap && (o.lightMap = e(t.lightMap)),
                        void 0 !== t.lightMapIntensity && (o.lightMapIntensity = t.lightMapIntensity),
                        void 0 !== t.aoMap && (o.aoMap = e(t.aoMap)),
                        void 0 !== t.aoMapIntensity && (o.aoMapIntensity = t.aoMapIntensity),
                        void 0 !== t.gradientMap && (o.gradientMap = e(t.gradientMap)),
                        void 0 !== t.clearcoatMap && (o.clearcoatMap = e(t.clearcoatMap)),
                        void 0 !== t.clearcoatRoughnessMap && (o.clearcoatRoughnessMap = e(t.clearcoatRoughnessMap)),
                        void 0 !== t.clearcoatNormalMap && (o.clearcoatNormalMap = e(t.clearcoatNormalMap)),
                        void 0 !== t.clearcoatNormalScale && (o.clearcoatNormalScale = (new n).fromArray(t.clearcoatNormalScale)),
                            o
                    },
                    setTextures: function(t) {
                        return this.textures = t,
                            this
                    }
                });
            var Fc = {
                decodeText: function(t) {
                    if ("undefined" != typeof TextDecoder)
                        return (new TextDecoder).decode(t);
                    for (var e = "", n = 0, i = t.length; n < i; n++)
                        e += String.fromCharCode(t[n]);
                    try {
                        return decodeURIComponent(escape(e))
                    } catch (t) {
                        return e
                    }
                },
                extractUrlBase: function(t) {
                    var e = t.lastIndexOf("/");
                    return -1 === e ? "./" : t.substr(0, e + 1)
                }
            };
            xr.prototype = Object.assign(Object.create(k.prototype), {
                constructor: xr,
                isInstancedBufferGeometry: !0,
                copy: function(t) {
                    return k.prototype.copy.call(this, t),
                        this.maxInstancedCount = t.maxInstancedCount,
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                toJSON: function() {
                    var t = k.prototype.toJSON.call(this);
                    return t.maxInstancedCount = this.maxInstancedCount,
                        t.isInstancedBufferGeometry = !0,
                        t
                }
            }),
                _r.prototype = Object.assign(Object.create(P.prototype), {
                    constructor: _r,
                    isInstancedBufferAttribute: !0,
                    copy: function(t) {
                        return P.prototype.copy.call(this, t),
                            this.meshPerAttribute = t.meshPerAttribute,
                            this
                    },
                    toJSON: function() {
                        var t = P.prototype.toJSON.call(this);
                        return t.meshPerAttribute = this.meshPerAttribute,
                            t.isInstancedBufferAttribute = !0,
                            t
                    }
                }),
                br.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: br,
                    load: function(t, e, n, i) {
                        var r = this
                            , a = new Ri(r.manager);
                        a.setPath(r.path),
                            a.load(t, (function(t) {
                                    e(r.parse(JSON.parse(t)))
                                }
                            ), n, i)
                    },
                    parse: function(t) {
                        var e = new (t.isInstancedBufferGeometry ? xr : k)
                            , n = t.data.index;
                        if (void 0 !== n) {
                            var i = new Bc[n.type](n.array);
                            e.setIndex(new P(i,1))
                        }
                        for (var r in n = t.data.attributes) {
                            var a = n[r];
                            i = new Bc[a.type](a.array),
                                i = new (a.isInstancedBufferAttribute ? _r : P)(i,a.itemSize,a.normalized),
                            void 0 !== a.name && (i.name = a.name),
                                e.setAttribute(r, i)
                        }
                        var o = t.data.morphAttributes;
                        if (o)
                            for (r in o) {
                                var s = o[r]
                                    , c = [];
                                n = 0;
                                for (var u = s.length; n < u; n++)
                                    a = s[n],
                                        i = new P(i = new Bc[a.type](a.array),a.itemSize,a.normalized),
                                    void 0 !== a.name && (i.name = a.name),
                                        c.push(i);
                                e.morphAttributes[r] = c
                            }
                        if (t.data.morphTargetsRelative && (e.morphTargetsRelative = !0),
                        void 0 !== (r = t.data.groups || t.data.drawcalls || t.data.offsets))
                            for (n = 0,
                                     a = r.length; n !== a; ++n)
                                i = r[n],
                                    e.addGroup(i.start, i.count, i.materialIndex);
                        return void 0 !== (n = t.data.boundingSphere) && (r = new l,
                        void 0 !== n.center && r.fromArray(n.center),
                            e.boundingSphere = new y(r,n.radius)),
                        t.name && (e.name = t.name),
                        t.userData && (e.userData = t.userData),
                            e
                    }
                });
            var Bc = {
                Int8Array: Int8Array,
                Uint8Array: Uint8Array,
                Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
                Int16Array: Int16Array,
                Uint16Array: Uint16Array,
                Int32Array: Int32Array,
                Uint32Array: Uint32Array,
                Float32Array: Float32Array,
                Float64Array: Float64Array
            };
            Mr.prototype = Object.assign(Object.create(Di.prototype), {
                constructor: Mr,
                load: function(t, e, n, i) {
                    var r = this
                        , a = "" === this.path ? Fc.extractUrlBase(t) : this.path;
                    this.resourcePath = this.resourcePath || a,
                        (a = new Ri(r.manager)).setPath(this.path),
                        a.load(t, (function(t) {
                                var n = null;
                                try {
                                    n = JSON.parse(t)
                                } catch (t) {
                                    return void (void 0 !== i && i(t))
                                }
                                void 0 !== (t = n.metadata) && void 0 !== t.type && "geometry" !== t.type.toLowerCase() && r.parse(n, e)
                            }
                        ), n, i)
                },
                parse: function(t, e) {
                    var n = this.parseShape(t.shapes);
                    n = this.parseGeometries(t.geometries, n);
                    var i = this.parseImages(t.images, (function() {
                            void 0 !== e && e(r)
                        }
                    ));
                    i = this.parseTextures(t.textures, i),
                        i = this.parseMaterials(t.materials, i);
                    var r = this.parseObject(t.object, n, i);
                    return t.animations && (r.animations = this.parseAnimations(t.animations)),
                    void 0 !== t.images && 0 !== t.images.length || void 0 === e || e(r),
                        r
                },
                parseShape: function(t) {
                    var e = {};
                    if (void 0 !== t)
                        for (var n = 0, i = t.length; n < i; n++) {
                            var r = (new ar).fromJSON(t[n]);
                            e[r.uuid] = r
                        }
                    return e
                },
                parseGeometries: function(t, e) {
                    var n = {};
                    if (void 0 !== t)
                        for (var i = new br, r = 0, a = t.length; r < a; r++) {
                            var o = t[r];
                            switch (o.type) {
                                case "PlaneGeometry":
                                case "PlaneBufferGeometry":
                                    var s = new Tc[o.type](o.width,o.height,o.widthSegments,o.heightSegments);
                                    break;
                                case "BoxGeometry":
                                case "BoxBufferGeometry":
                                case "CubeGeometry":
                                    s = new Tc[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);
                                    break;
                                case "CircleGeometry":
                                case "CircleBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);
                                    break;
                                case "CylinderGeometry":
                                case "CylinderBufferGeometry":
                                    s = new Tc[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);
                                    break;
                                case "ConeGeometry":
                                case "ConeBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);
                                    break;
                                case "SphereGeometry":
                                case "SphereBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);
                                    break;
                                case "DodecahedronGeometry":
                                case "DodecahedronBufferGeometry":
                                case "IcosahedronGeometry":
                                case "IcosahedronBufferGeometry":
                                case "OctahedronGeometry":
                                case "OctahedronBufferGeometry":
                                case "TetrahedronGeometry":
                                case "TetrahedronBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.detail);
                                    break;
                                case "RingGeometry":
                                case "RingBufferGeometry":
                                    s = new Tc[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);
                                    break;
                                case "TorusGeometry":
                                case "TorusBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);
                                    break;
                                case "TorusKnotGeometry":
                                case "TorusKnotBufferGeometry":
                                    s = new Tc[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);
                                    break;
                                case "TubeGeometry":
                                case "TubeBufferGeometry":
                                    s = new Tc[o.type]((new zc[o.path.type]).fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);
                                    break;
                                case "LatheGeometry":
                                case "LatheBufferGeometry":
                                    s = new Tc[o.type](o.points,o.segments,o.phiStart,o.phiLength);
                                    break;
                                case "PolyhedronGeometry":
                                case "PolyhedronBufferGeometry":
                                    s = new Tc[o.type](o.vertices,o.indices,o.radius,o.details);
                                    break;
                                case "ShapeGeometry":
                                case "ShapeBufferGeometry":
                                    s = [];
                                    for (var c = 0, u = o.shapes.length; c < u; c++) {
                                        var l = e[o.shapes[c]];
                                        s.push(l)
                                    }
                                    s = new Tc[o.type](s,o.curveSegments);
                                    break;
                                case "ExtrudeGeometry":
                                case "ExtrudeBufferGeometry":
                                    for (s = [],
                                             c = 0,
                                             u = o.shapes.length; c < u; c++)
                                        l = e[o.shapes[c]],
                                            s.push(l);
                                    void 0 !== (c = o.options.extrudePath) && (o.options.extrudePath = (new zc[c.type]).fromJSON(c)),
                                        s = new Tc[o.type](s,o.options);
                                    break;
                                case "BufferGeometry":
                                case "InstancedBufferGeometry":
                                    s = i.parse(o);
                                    break;
                                case "Geometry":
                                    break;
                                default:
                                    continue
                            }
                            s.uuid = o.uuid,
                            void 0 !== o.name && (s.name = o.name),
                            !0 === s.isBufferGeometry && void 0 !== o.userData && (s.userData = o.userData),
                                n[o.uuid] = s
                        }
                    return n
                },
                parseMaterials: function(t, e) {
                    var n = {}
                        , i = {};
                    if (void 0 !== t) {
                        var r = new yr;
                        r.setTextures(e),
                            e = 0;
                        for (var a = t.length; e < a; e++) {
                            var o = t[e];
                            if ("MultiMaterial" === o.type) {
                                for (var s = [], c = 0; c < o.materials.length; c++) {
                                    var u = o.materials[c];
                                    void 0 === n[u.uuid] && (n[u.uuid] = r.parse(u)),
                                        s.push(n[u.uuid])
                                }
                                i[o.uuid] = s
                            } else
                                void 0 === n[o.uuid] && (n[o.uuid] = r.parse(o)),
                                    i[o.uuid] = n[o.uuid]
                        }
                    }
                    return i
                },
                parseAnimations: function(t) {
                    for (var e = [], n = 0; n < t.length; n++) {
                        var i = t[n]
                            , r = Oi.parse(i);
                        void 0 !== i.uuid && (r.uuid = i.uuid),
                            e.push(r)
                    }
                    return e
                },
                parseImages: function(t, e) {
                    function n(t) {
                        return i.manager.itemStart(t),
                            a.load(t, (function() {
                                    i.manager.itemEnd(t)
                                }
                            ), void 0, (function() {
                                    i.manager.itemError(t),
                                        i.manager.itemEnd(t)
                                }
                            ))
                    }
                    var i = this
                        , r = {};
                    if (void 0 !== t && 0 < t.length) {
                        var a = new Ui(e = new Ni(e));
                        a.setCrossOrigin(this.crossOrigin),
                            e = 0;
                        for (var o = t.length; e < o; e++) {
                            var s = t[e]
                                , c = s.url;
                            if (Array.isArray(c)) {
                                r[s.uuid] = [];
                                for (var u = 0, l = c.length; u < l; u++) {
                                    var h = c[u];
                                    h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(h) ? h : i.resourcePath + h,
                                        r[s.uuid].push(n(h))
                                }
                            } else
                                h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url) ? s.url : i.resourcePath + s.url,
                                    r[s.uuid] = n(h)
                        }
                    }
                    return r
                },
                parseTextures: function(t, e) {
                    function n(t, e) {
                        return "number" == typeof t ? t : e[t]
                    }
                    var i = {};
                    if (void 0 !== t)
                        for (var a = 0, o = t.length; a < o; a++) {
                            var s = t[a];
                            s.image,
                                e[s.image];
                            var c = new (Array.isArray(e[s.image]) ? gt : r)(e[s.image]);
                            c.needsUpdate = !0,
                                c.uuid = s.uuid,
                            void 0 !== s.name && (c.name = s.name),
                            void 0 !== s.mapping && (c.mapping = n(s.mapping, Uc)),
                            void 0 !== s.offset && c.offset.fromArray(s.offset),
                            void 0 !== s.repeat && c.repeat.fromArray(s.repeat),
                            void 0 !== s.center && c.center.fromArray(s.center),
                            void 0 !== s.rotation && (c.rotation = s.rotation),
                            void 0 !== s.wrap && (c.wrapS = n(s.wrap[0], Gc),
                                c.wrapT = n(s.wrap[1], Gc)),
                            void 0 !== s.format && (c.format = s.format),
                            void 0 !== s.type && (c.type = s.type),
                            void 0 !== s.encoding && (c.encoding = s.encoding),
                            void 0 !== s.minFilter && (c.minFilter = n(s.minFilter, kc)),
                            void 0 !== s.magFilter && (c.magFilter = n(s.magFilter, kc)),
                            void 0 !== s.anisotropy && (c.anisotropy = s.anisotropy),
                            void 0 !== s.flipY && (c.flipY = s.flipY),
                            void 0 !== s.premultiplyAlpha && (c.premultiplyAlpha = s.premultiplyAlpha),
                            void 0 !== s.unpackAlignment && (c.unpackAlignment = s.unpackAlignment),
                                i[s.uuid] = c
                        }
                    return i
                },
                parseObject: function(t, e, n) {
                    function i(t) {
                        return e[t],
                            e[t]
                    }
                    function r(t) {
                        if (void 0 !== t) {
                            if (Array.isArray(t)) {
                                for (var e = [], i = 0, r = t.length; i < r; i++) {
                                    var a = t[i];
                                    n[a],
                                        e.push(n[a])
                                }
                                return e
                            }
                            return n[t],
                                n[t]
                        }
                    }
                    switch (t.type) {
                        case "Scene":
                            var a = new m;
                            void 0 !== t.background && Number.isInteger(t.background) && (a.background = new M(t.background)),
                            void 0 !== t.fog && ("Fog" === t.fog.type ? a.fog = new ze(t.fog.color,t.fog.near,t.fog.far) : "FogExp2" === t.fog.type && (a.fog = new Re(t.fog.color,t.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            a = new J(t.fov,t.aspect,t.near,t.far),
                            void 0 !== t.focus && (a.focus = t.focus),
                            void 0 !== t.zoom && (a.zoom = t.zoom),
                            void 0 !== t.filmGauge && (a.filmGauge = t.filmGauge),
                            void 0 !== t.filmOffset && (a.filmOffset = t.filmOffset),
                            void 0 !== t.view && (a.view = Object.assign({}, t.view));
                            break;
                        case "OrthographicCamera":
                            a = new fr(t.left,t.right,t.top,t.bottom,t.near,t.far),
                            void 0 !== t.zoom && (a.zoom = t.zoom),
                            void 0 !== t.view && (a.view = Object.assign({}, t.view));
                            break;
                        case "AmbientLight":
                            a = new gr(t.color,t.intensity);
                            break;
                        case "DirectionalLight":
                            a = new mr(t.color,t.intensity);
                            break;
                        case "PointLight":
                            a = new pr(t.color,t.intensity,t.distance,t.decay);
                            break;
                        case "RectAreaLight":
                            a = new vr(t.color,t.intensity,t.width,t.height);
                            break;
                        case "SpotLight":
                            a = new lr(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                            break;
                        case "HemisphereLight":
                            a = new sr(t.color,t.groundColor,t.intensity);
                            break;
                        case "SkinnedMesh":
                        case "Mesh":
                            a = i(t.geometry);
                            var o = r(t.material);
                            a = new j(a,o);
                            break;
                        case "InstancedMesh":
                            a = i(t.geometry),
                                o = r(t.material);
                            var s = t.instanceMatrix;
                            (a = new qe(a,o,t.count)).instanceMatrix = new P(new Float32Array(s.array),16);
                            break;
                        case "LOD":
                            a = new je;
                            break;
                        case "Line":
                            a = new Ye(i(t.geometry),r(t.material),t.mode);
                            break;
                        case "LineLoop":
                            a = new Je(i(t.geometry),r(t.material));
                            break;
                        case "LineSegments":
                            a = new Ze(i(t.geometry),r(t.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            a = new Qe(i(t.geometry),r(t.material));
                            break;
                        case "Sprite":
                            a = new Ge(r(t.material));
                            break;
                        case "Group":
                            a = new Ie;
                            break;
                        default:
                            a = new d
                    }
                    if (a.uuid = t.uuid,
                    void 0 !== t.name && (a.name = t.name),
                        void 0 !== t.matrix ? (a.matrix.fromArray(t.matrix),
                        void 0 !== t.matrixAutoUpdate && (a.matrixAutoUpdate = t.matrixAutoUpdate),
                        a.matrixAutoUpdate && a.matrix.decompose(a.position, a.quaternion, a.scale)) : (void 0 !== t.position && a.position.fromArray(t.position),
                        void 0 !== t.rotation && a.rotation.fromArray(t.rotation),
                        void 0 !== t.quaternion && a.quaternion.fromArray(t.quaternion),
                        void 0 !== t.scale && a.scale.fromArray(t.scale)),
                    void 0 !== t.castShadow && (a.castShadow = t.castShadow),
                    void 0 !== t.receiveShadow && (a.receiveShadow = t.receiveShadow),
                    t.shadow && (void 0 !== t.shadow.bias && (a.shadow.bias = t.shadow.bias),
                    void 0 !== t.shadow.radius && (a.shadow.radius = t.shadow.radius),
                    void 0 !== t.shadow.mapSize && a.shadow.mapSize.fromArray(t.shadow.mapSize),
                    void 0 !== t.shadow.camera && (a.shadow.camera = this.parseObject(t.shadow.camera))),
                    void 0 !== t.visible && (a.visible = t.visible),
                    void 0 !== t.frustumCulled && (a.frustumCulled = t.frustumCulled),
                    void 0 !== t.renderOrder && (a.renderOrder = t.renderOrder),
                    void 0 !== t.userData && (a.userData = t.userData),
                    void 0 !== t.layers && (a.layers.mask = t.layers),
                    void 0 !== t.children)
                        for (s = t.children,
                                 o = 0; o < s.length; o++)
                            a.add(this.parseObject(s[o], e, n));
                    if ("LOD" === t.type)
                        for (void 0 !== t.autoUpdate && (a.autoUpdate = t.autoUpdate),
                                 t = t.levels,
                                 s = 0; s < t.length; s++) {
                            o = t[s];
                            var c = a.getObjectByProperty("uuid", o.object);
                            void 0 !== c && a.addLevel(c, o.distance)
                        }
                    return a
                }
            });
            var Uc = {
                UVMapping: 300,
                CubeReflectionMapping: 301,
                CubeRefractionMapping: 302,
                EquirectangularReflectionMapping: 303,
                EquirectangularRefractionMapping: 304,
                SphericalReflectionMapping: 305,
                CubeUVReflectionMapping: 306,
                CubeUVRefractionMapping: 307
            }
                , Gc = {
                RepeatWrapping: 1e3,
                ClampToEdgeWrapping: 1001,
                MirroredRepeatWrapping: 1002
            }
                , kc = {
                NearestFilter: 1003,
                NearestMipmapNearestFilter: 1004,
                NearestMipmapLinearFilter: 1005,
                LinearFilter: 1006,
                LinearMipmapNearestFilter: 1007,
                LinearMipmapLinearFilter: 1008
            };
            wr.prototype = Object.assign(Object.create(Di.prototype), {
                constructor: wr,
                setOptions: function(t) {
                    return this.options = t,
                        this
                },
                load: function(t, e, n, i) {
                    void 0 === t && (t = ""),
                    void 0 !== this.path && (t = this.path + t),
                        t = this.manager.resolveURL(t);
                    var r = this
                        , a = Pc.get(t);
                    if (void 0 !== a)
                        return r.manager.itemStart(t),
                            setTimeout((function() {
                                    e && e(a),
                                        r.manager.itemEnd(t)
                                }
                            ), 0),
                            a;
                    fetch(t).then((function(t) {
                            return t.blob()
                        }
                    )).then((function(t) {
                            return void 0 === r.options ? createImageBitmap(t) : createImageBitmap(t, r.options)
                        }
                    )).then((function(n) {
                            Pc.add(t, n),
                            e && e(n),
                                r.manager.itemEnd(t)
                        }
                    )).catch((function(e) {
                            i && i(e),
                                r.manager.itemError(t),
                                r.manager.itemEnd(t)
                        }
                    )),
                        r.manager.itemStart(t)
                }
            }),
                Object.assign(Sr.prototype, {
                    moveTo: function(t, e) {
                        return this.currentPath = new rr,
                            this.subPaths.push(this.currentPath),
                            this.currentPath.moveTo(t, e),
                            this
                    },
                    lineTo: function(t, e) {
                        return this.currentPath.lineTo(t, e),
                            this
                    },
                    quadraticCurveTo: function(t, e, n, i) {
                        return this.currentPath.quadraticCurveTo(t, e, n, i),
                            this
                    },
                    bezierCurveTo: function(t, e, n, i, r, a) {
                        return this.currentPath.bezierCurveTo(t, e, n, i, r, a),
                            this
                    },
                    splineThru: function(t) {
                        return this.currentPath.splineThru(t),
                            this
                    },
                    toShapes: function(t, e) {
                        function n(t) {
                            for (var e = [], n = 0, i = t.length; n < i; n++) {
                                var r = t[n]
                                    , a = new ar;
                                a.curves = r.curves,
                                    e.push(a)
                            }
                            return e
                        }
                        function i(t, e) {
                            for (var n = e.length, i = !1, r = n - 1, a = 0; a < n; r = a++) {
                                var o = e[r]
                                    , s = e[a]
                                    , c = s.x - o.x
                                    , u = s.y - o.y;
                                if (Math.abs(u) > Number.EPSILON) {
                                    if (u < 0 && (o = e[a],
                                        c = -c,
                                        s = e[r],
                                        u = -u),
                                        !(t.y < o.y || t.y > s.y))
                                        if (t.y === o.y) {
                                            if (t.x === o.x)
                                                return 1
                                        } else {
                                            if (0 == (r = u * (t.x - o.x) - c * (t.y - o.y)))
                                                return 1;
                                            r < 0 || (i = !i)
                                        }
                                } else if (t.y === o.y && (s.x <= t.x && t.x <= o.x || o.x <= t.x && t.x <= s.x))
                                    return 1
                            }
                            return i
                        }
                        var r = Sc.isClockWise
                            , a = this.subPaths;
                        if (0 === a.length)
                            return [];
                        if (!0 === e)
                            return n(a);
                        if (e = [],
                        1 === a.length) {
                            var o = a[0]
                                , s = new ar;
                            return s.curves = o.curves,
                                e.push(s),
                                e
                        }
                        var c = !r(a[0].getPoints());
                        c = t ? !c : c,
                            s = [];
                        var u = []
                            , l = []
                            , h = 0;
                        u[h] = void 0,
                            l[h] = [];
                        for (var p = 0, f = a.length; p < f; p++) {
                            var d = (o = a[p]).getPoints()
                                , m = r(d);
                            (m = t ? !m : m) ? (!c && u[h] && h++,
                                u[h] = {
                                    s: new ar,
                                    p: d
                                },
                                u[h].s.curves = o.curves,
                            c && h++,
                                l[h] = []) : l[h].push({
                                h: o,
                                p: d[0]
                            })
                        }
                        if (!u[0])
                            return n(a);
                        if (1 < u.length) {
                            for (p = !1,
                                     t = [],
                                     r = 0,
                                     a = u.length; r < a; r++)
                                s[r] = [];
                            for (r = 0,
                                     a = u.length; r < a; r++)
                                for (o = l[r],
                                         m = 0; m < o.length; m++) {
                                    for (c = o[m],
                                             h = !0,
                                             d = 0; d < u.length; d++)
                                        i(c.p, u[d].p) && (r !== d && t.push({
                                            froms: r,
                                            tos: d,
                                            hole: m
                                        }),
                                            h ? (h = !1,
                                                s[d].push(c)) : p = !0);
                                    h && s[r].push(c)
                                }
                            0 < t.length && (p || (l = s))
                        }
                        for (p = 0,
                                 r = u.length; p < r; p++)
                            for (s = u[p].s,
                                     e.push(s),
                                     a = 0,
                                     o = (t = l[p]).length; a < o; a++)
                                s.holes.push(t[a].h);
                        return e
                    }
                }),
                Object.assign(Ar.prototype, {
                    isFont: !0,
                    generateShapes: function(t, e) {
                        void 0 === e && (e = 100);
                        var n = []
                            , i = e;
                        e = this.data;
                        var r = Array.from ? Array.from(t) : String(t).split("");
                        i /= e.resolution;
                        var a = (e.boundingBox.yMax - e.boundingBox.yMin + e.underlineThickness) * i;
                        t = [];
                        for (var o = 0, s = 0, c = 0; c < r.length; c++) {
                            var u = r[c];
                            if ("\n" === u)
                                o = 0,
                                    s -= a;
                            else {
                                var l = u;
                                u = i;
                                var h = o
                                    , p = s
                                    , f = e
                                    , d = f.glyphs[l] || f.glyphs["?"];
                                if (d) {
                                    if (l = new Sr,
                                        d.o)
                                        for (var m = 0, g = (f = d._cachedOutline || (d._cachedOutline = d.o.split(" "))).length; m < g; )
                                            switch (f[m++]) {
                                                case "m":
                                                    var v = f[m++] * u + h
                                                        , y = f[m++] * u + p;
                                                    l.moveTo(v, y);
                                                    break;
                                                case "l":
                                                    v = f[m++] * u + h,
                                                        y = f[m++] * u + p,
                                                        l.lineTo(v, y);
                                                    break;
                                                case "q":
                                                    var x = f[m++] * u + h
                                                        , _ = f[m++] * u + p
                                                        , b = f[m++] * u + h
                                                        , M = f[m++] * u + p;
                                                    l.quadraticCurveTo(b, M, x, _);
                                                    break;
                                                case "b":
                                                    x = f[m++] * u + h,
                                                        _ = f[m++] * u + p,
                                                        b = f[m++] * u + h,
                                                        M = f[m++] * u + p,
                                                        v = f[m++] * u + h,
                                                        y = f[m++] * u + p,
                                                        l.bezierCurveTo(b, M, v, y, x, _)
                                            }
                                    u = {
                                        offsetX: d.ha * u,
                                        path: l
                                    }
                                } else
                                    u = void 0;
                                o += u.offsetX,
                                    t.push(u.path)
                            }
                        }
                        for (e = 0,
                                 r = t.length; e < r; e++)
                            Array.prototype.push.apply(n, t[e].toShapes());
                        return n
                    }
                }),
                Tr.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Tr,
                    load: function(t, e, n, i) {
                        var r = this
                            , a = new Ri(this.manager);
                        a.setPath(this.path),
                            a.load(t, (function(t) {
                                    try {
                                        var n = JSON.parse(t)
                                    } catch (e) {
                                        n = JSON.parse(t.substring(65, t.length - 2))
                                    }
                                    t = r.parse(n),
                                    e && e(t)
                                }
                            ), n, i)
                    },
                    parse: function(t) {
                        return new Ar(t)
                    }
                });
            var jc, Vc = {
                getContext: function() {
                    return void 0 === jc && (jc = new (window.AudioContext || window.webkitAudioContext)),
                        jc
                },
                setContext: function(t) {
                    jc = t
                }
            };
            Lr.prototype = Object.assign(Object.create(Di.prototype), {
                constructor: Lr,
                load: function(t, e, n, i) {
                    var r = new Ri(this.manager);
                    r.setResponseType("arraybuffer"),
                        r.setPath(this.path),
                        r.load(t, (function(t) {
                                t = t.slice(0),
                                    Vc.getContext().decodeAudioData(t, (function(t) {
                                            e(t)
                                        }
                                    ))
                            }
                        ), n, i)
                }
            }),
                Object.assign(Er.prototype, {
                    isSphericalHarmonics3: !0,
                    set: function(t) {
                        for (var e = 0; e < 9; e++)
                            this.coefficients[e].copy(t[e]);
                        return this
                    },
                    zero: function() {
                        for (var t = 0; t < 9; t++)
                            this.coefficients[t].set(0, 0, 0);
                        return this
                    },
                    getAt: function(t, e) {
                        var n = t.x
                            , i = t.y;
                        t = t.z;
                        var r = this.coefficients;
                        return e.copy(r[0]).multiplyScalar(.282095),
                            e.addScaledVector(r[1], .488603 * i),
                            e.addScaledVector(r[2], .488603 * t),
                            e.addScaledVector(r[3], .488603 * n),
                            e.addScaledVector(r[4], 1.092548 * n * i),
                            e.addScaledVector(r[5], 1.092548 * i * t),
                            e.addScaledVector(r[6], .315392 * (3 * t * t - 1)),
                            e.addScaledVector(r[7], 1.092548 * n * t),
                            e.addScaledVector(r[8], .546274 * (n * n - i * i)),
                            e
                    },
                    getIrradianceAt: function(t, e) {
                        var n = t.x
                            , i = t.y;
                        t = t.z;
                        var r = this.coefficients;
                        return e.copy(r[0]).multiplyScalar(.886227),
                            e.addScaledVector(r[1], 1.023328 * i),
                            e.addScaledVector(r[2], 1.023328 * t),
                            e.addScaledVector(r[3], 1.023328 * n),
                            e.addScaledVector(r[4], .858086 * n * i),
                            e.addScaledVector(r[5], .858086 * i * t),
                            e.addScaledVector(r[6], .743125 * t * t - .247708),
                            e.addScaledVector(r[7], .858086 * n * t),
                            e.addScaledVector(r[8], .429043 * (n * n - i * i)),
                            e
                    },
                    add: function(t) {
                        for (var e = 0; e < 9; e++)
                            this.coefficients[e].add(t.coefficients[e]);
                        return this
                    },
                    addScaledSH: function(t, e) {
                        for (var n = 0; n < 9; n++)
                            this.coefficients[n].addScaledVector(t.coefficients[n], e);
                        return this
                    },
                    scale: function(t) {
                        for (var e = 0; e < 9; e++)
                            this.coefficients[e].multiplyScalar(t);
                        return this
                    },
                    lerp: function(t, e) {
                        for (var n = 0; n < 9; n++)
                            this.coefficients[n].lerp(t.coefficients[n], e);
                        return this
                    },
                    equals: function(t) {
                        for (var e = 0; e < 9; e++)
                            if (!this.coefficients[e].equals(t.coefficients[e]))
                                return !1;
                        return !0
                    },
                    copy: function(t) {
                        return this.set(t.coefficients)
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    fromArray: function(t, e) {
                        void 0 === e && (e = 0);
                        for (var n = this.coefficients, i = 0; i < 9; i++)
                            n[i].fromArray(t, e + 3 * i);
                        return this
                    },
                    toArray: function(t, e) {
                        void 0 === t && (t = []),
                        void 0 === e && (e = 0);
                        for (var n = this.coefficients, i = 0; i < 9; i++)
                            n[i].toArray(t, e + 3 * i);
                        return t
                    }
                }),
                Object.assign(Er, {
                    getBasisAt: function(t, e) {
                        var n = t.x
                            , i = t.y;
                        t = t.z,
                            e[0] = .282095,
                            e[1] = .488603 * i,
                            e[2] = .488603 * t,
                            e[3] = .488603 * n,
                            e[4] = 1.092548 * n * i,
                            e[5] = 1.092548 * i * t,
                            e[6] = .315392 * (3 * t * t - 1),
                            e[7] = 1.092548 * n * t,
                            e[8] = .546274 * (n * n - i * i)
                    }
                }),
                Pr.prototype = Object.assign(Object.create(or.prototype), {
                    constructor: Pr,
                    isLightProbe: !0,
                    copy: function(t) {
                        return or.prototype.copy.call(this, t),
                            this.sh.copy(t.sh),
                            this.intensity = t.intensity,
                            this
                    },
                    toJSON: function(t) {
                        return or.prototype.toJSON.call(this, t)
                    }
                }),
                Cr.prototype = Object.assign(Object.create(Pr.prototype), {
                    constructor: Cr,
                    isHemisphereLightProbe: !0,
                    copy: function(t) {
                        return Pr.prototype.copy.call(this, t),
                            this
                    },
                    toJSON: function(t) {
                        return Pr.prototype.toJSON.call(this, t)
                    }
                }),
                Or.prototype = Object.assign(Object.create(Pr.prototype), {
                    constructor: Or,
                    isAmbientLightProbe: !0,
                    copy: function(t) {
                        return Pr.prototype.copy.call(this, t),
                            this
                    },
                    toJSON: function(t) {
                        return Pr.prototype.toJSON.call(this, t)
                    }
                });
            var Wc = new h
                , Hc = new h;
            Object.assign(Ir.prototype, {
                update: function(t) {
                    var e = this._cache;
                    if (e.focus !== t.focus || e.fov !== t.fov || e.aspect !== t.aspect * this.aspect || e.near !== t.near || e.far !== t.far || e.zoom !== t.zoom || e.eyeSep !== this.eyeSep) {
                        e.focus = t.focus,
                            e.fov = t.fov,
                            e.aspect = t.aspect * this.aspect,
                            e.near = t.near,
                            e.far = t.far,
                            e.zoom = t.zoom,
                            e.eyeSep = this.eyeSep;
                        var n = t.projectionMatrix.clone()
                            , i = e.eyeSep / 2
                            , r = i * e.near / e.focus
                            , a = e.near * Math.tan(Ca.DEG2RAD * e.fov * .5) / e.zoom;
                        Hc.elements[12] = -i,
                            Wc.elements[12] = i,
                            i = -a * e.aspect + r;
                        var o = a * e.aspect + r;
                        n.elements[0] = 2 * e.near / (o - i),
                            n.elements[8] = (o + i) / (o - i),
                            this.cameraL.projectionMatrix.copy(n),
                            i = -a * e.aspect - r,
                            o = a * e.aspect - r,
                            n.elements[0] = 2 * e.near / (o - i),
                            n.elements[8] = (o + i) / (o - i),
                            this.cameraR.projectionMatrix.copy(n)
                    }
                    this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Hc),
                        this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Wc)
                }
            }),
                Object.assign(Nr.prototype, {
                    start: function() {
                        this.oldTime = this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
                            this.elapsedTime = 0,
                            this.running = !0
                    },
                    stop: function() {
                        this.getElapsedTime(),
                            this.autoStart = this.running = !1
                    },
                    getElapsedTime: function() {
                        return this.getDelta(),
                            this.elapsedTime
                    },
                    getDelta: function() {
                        var t = 0;
                        if (this.autoStart && !this.running)
                            return this.start(),
                                0;
                        if (this.running) {
                            var e = ("undefined" == typeof performance ? Date : performance).now();
                            t = (e - this.oldTime) / 1e3,
                                this.oldTime = e,
                                this.elapsedTime += t
                        }
                        return t
                    }
                });
            var qc = new l
                , Xc = new u
                , Yc = new l
                , Zc = new l;
            Dr.prototype = Object.assign(Object.create(d.prototype), {
                constructor: Dr,
                getInput: function() {
                    return this.gain
                },
                removeFilter: function() {
                    return null !== this.filter && (this.gain.disconnect(this.filter),
                        this.filter.disconnect(this.context.destination),
                        this.gain.connect(this.context.destination),
                        this.filter = null),
                        this
                },
                getFilter: function() {
                    return this.filter
                },
                setFilter: function(t) {
                    return null !== this.filter ? (this.gain.disconnect(this.filter),
                        this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                        this.filter = t,
                        this.gain.connect(this.filter),
                        this.filter.connect(this.context.destination),
                        this
                },
                getMasterVolume: function() {
                    return this.gain.gain.value
                },
                setMasterVolume: function(t) {
                    return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01),
                        this
                },
                updateMatrixWorld: function(t) {
                    d.prototype.updateMatrixWorld.call(this, t),
                        t = this.context.listener;
                    var e = this.up;
                    if (this.timeDelta = this._clock.getDelta(),
                        this.matrixWorld.decompose(qc, Xc, Yc),
                        Zc.set(0, 0, -1).applyQuaternion(Xc),
                        t.positionX) {
                        var n = this.context.currentTime + this.timeDelta;
                        t.positionX.linearRampToValueAtTime(qc.x, n),
                            t.positionY.linearRampToValueAtTime(qc.y, n),
                            t.positionZ.linearRampToValueAtTime(qc.z, n),
                            t.forwardX.linearRampToValueAtTime(Zc.x, n),
                            t.forwardY.linearRampToValueAtTime(Zc.y, n),
                            t.forwardZ.linearRampToValueAtTime(Zc.z, n),
                            t.upX.linearRampToValueAtTime(e.x, n),
                            t.upY.linearRampToValueAtTime(e.y, n),
                            t.upZ.linearRampToValueAtTime(e.z, n)
                    } else
                        t.setPosition(qc.x, qc.y, qc.z),
                            t.setOrientation(Zc.x, Zc.y, Zc.z, e.x, e.y, e.z)
                }
            }),
                Rr.prototype = Object.assign(Object.create(d.prototype), {
                    constructor: Rr,
                    getOutput: function() {
                        return this.gain
                    },
                    setNodeSource: function(t) {
                        return this.hasPlaybackControl = !1,
                            this.sourceType = "audioNode",
                            this.source = t,
                            this.connect(),
                            this
                    },
                    setMediaElementSource: function(t) {
                        return this.hasPlaybackControl = !1,
                            this.sourceType = "mediaNode",
                            this.source = this.context.createMediaElementSource(t),
                            this.connect(),
                            this
                    },
                    setMediaStreamSource: function(t) {
                        return this.hasPlaybackControl = !1,
                            this.sourceType = "mediaStreamNode",
                            this.source = this.context.createMediaStreamSource(t),
                            this.connect(),
                            this
                    },
                    setBuffer: function(t) {
                        return this.buffer = t,
                            this.sourceType = "buffer",
                        this.autoplay && this.play(),
                            this
                    },
                    play: function(t) {
                        if (void 0 === t && (t = 0),
                        !0 !== this.isPlaying && !1 !== this.hasPlaybackControl)
                            return this._startedAt = this.context.currentTime + t,
                                (t = this.context.createBufferSource()).buffer = this.buffer,
                                t.loop = this.loop,
                                t.loopStart = this.loopStart,
                                t.loopEnd = this.loopEnd,
                                t.onended = this.onEnded.bind(this),
                                t.start(this._startedAt, this._pausedAt + this.offset, this.duration),
                                this.isPlaying = !0,
                                this.source = t,
                                this.setDetune(this.detune),
                                this.setPlaybackRate(this.playbackRate),
                                this.connect()
                    },
                    pause: function() {
                        if (!1 !== this.hasPlaybackControl)
                            return !0 === this.isPlaying && (this._pausedAt += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate,
                                this.source.stop(),
                                this.source.onended = null,
                                this.isPlaying = !1),
                                this
                    },
                    stop: function() {
                        if (!1 !== this.hasPlaybackControl)
                            return this._pausedAt = 0,
                                this.source.stop(),
                                this.source.onended = null,
                                this.isPlaying = !1,
                                this
                    },
                    connect: function() {
                        if (0 < this.filters.length) {
                            this.source.connect(this.filters[0]);
                            for (var t = 1, e = this.filters.length; t < e; t++)
                                this.filters[t - 1].connect(this.filters[t]);
                            this.filters[this.filters.length - 1].connect(this.getOutput())
                        } else
                            this.source.connect(this.getOutput());
                        return this
                    },
                    disconnect: function() {
                        if (0 < this.filters.length) {
                            this.source.disconnect(this.filters[0]);
                            for (var t = 1, e = this.filters.length; t < e; t++)
                                this.filters[t - 1].disconnect(this.filters[t]);
                            this.filters[this.filters.length - 1].disconnect(this.getOutput())
                        } else
                            this.source.disconnect(this.getOutput());
                        return this
                    },
                    getFilters: function() {
                        return this.filters
                    },
                    setFilters: function(t) {
                        return t = t || [],
                            !0 === this.isPlaying ? (this.disconnect(),
                                this.filters = t,
                                this.connect()) : this.filters = t,
                            this
                    },
                    setDetune: function(t) {
                        if (this.detune = t,
                        void 0 !== this.source.detune)
                            return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01),
                                this
                    },
                    getDetune: function() {
                        return this.detune
                    },
                    getFilter: function() {
                        return this.getFilters()[0]
                    },
                    setFilter: function(t) {
                        return this.setFilters(t ? [t] : [])
                    },
                    setPlaybackRate: function(t) {
                        if (!1 !== this.hasPlaybackControl)
                            return this.playbackRate = t,
                            !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01),
                                this
                    },
                    getPlaybackRate: function() {
                        return this.playbackRate
                    },
                    onEnded: function() {
                        this.isPlaying = !1
                    },
                    getLoop: function() {
                        return !1 !== this.hasPlaybackControl && this.loop
                    },
                    setLoop: function(t) {
                        if (!1 !== this.hasPlaybackControl)
                            return this.loop = t,
                            !0 === this.isPlaying && (this.source.loop = this.loop),
                                this
                    },
                    setLoopStart: function(t) {
                        return this.loopStart = t,
                            this
                    },
                    setLoopEnd: function(t) {
                        return this.loopEnd = t,
                            this
                    },
                    getVolume: function() {
                        return this.gain.gain.value
                    },
                    setVolume: function(t) {
                        return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01),
                            this
                    }
                });
            var Jc = new l
                , Kc = new u
                , Qc = new l
                , $c = new l;
            zr.prototype = Object.assign(Object.create(Rr.prototype), {
                constructor: zr,
                getOutput: function() {
                    return this.panner
                },
                getRefDistance: function() {
                    return this.panner.refDistance
                },
                setRefDistance: function(t) {
                    return this.panner.refDistance = t,
                        this
                },
                getRolloffFactor: function() {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function(t) {
                    return this.panner.rolloffFactor = t,
                        this
                },
                getDistanceModel: function() {
                    return this.panner.distanceModel
                },
                setDistanceModel: function(t) {
                    return this.panner.distanceModel = t,
                        this
                },
                getMaxDistance: function() {
                    return this.panner.maxDistance
                },
                setMaxDistance: function(t) {
                    return this.panner.maxDistance = t,
                        this
                },
                setDirectionalCone: function(t, e, n) {
                    return this.panner.coneInnerAngle = t,
                        this.panner.coneOuterAngle = e,
                        this.panner.coneOuterGain = n,
                        this
                },
                updateMatrixWorld: function(t) {
                    if (d.prototype.updateMatrixWorld.call(this, t),
                    !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
                        if (this.matrixWorld.decompose(Jc, Kc, Qc),
                            $c.set(0, 0, 1).applyQuaternion(Kc),
                            (t = this.panner).positionX) {
                            var e = this.context.currentTime + this.listener.timeDelta;
                            t.positionX.linearRampToValueAtTime(Jc.x, e),
                                t.positionY.linearRampToValueAtTime(Jc.y, e),
                                t.positionZ.linearRampToValueAtTime(Jc.z, e),
                                t.orientationX.linearRampToValueAtTime($c.x, e),
                                t.orientationY.linearRampToValueAtTime($c.y, e),
                                t.orientationZ.linearRampToValueAtTime($c.z, e)
                        } else
                            t.setPosition(Jc.x, Jc.y, Jc.z),
                                t.setOrientation($c.x, $c.y, $c.z)
                }
            }),
                Object.assign(Fr.prototype, {
                    getFrequencyData: function() {
                        return this.analyser.getByteFrequencyData(this.data),
                            this.data
                    },
                    getAverageFrequency: function() {
                        for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
                            t += e[n];
                        return t / e.length
                    }
                }),
                Object.assign(Br.prototype, {
                    accumulate: function(t, e) {
                        var n = this.buffer
                            , i = this.valueSize;
                        t = t * i + i;
                        var r = this.cumulativeWeight;
                        if (0 === r) {
                            for (r = 0; r !== i; ++r)
                                n[t + r] = n[r];
                            r = e
                        } else
                            r += e,
                                this._mixBufferRegion(n, t, 0, e / r, i);
                        this.cumulativeWeight = r
                    },
                    apply: function(t) {
                        var e = this.valueSize
                            , n = this.buffer;
                        t = t * e + e;
                        var i = this.cumulativeWeight
                            , r = this.binding;
                        this.cumulativeWeight = 0,
                        i < 1 && this._mixBufferRegion(n, t, 3 * e, 1 - i, e);
                        for (var a = (i = e) + e; i !== a; ++i)
                            if (n[i] !== n[i + e]) {
                                r.setValue(n, t);
                                break
                            }
                    },
                    saveOriginalState: function() {
                        var t = this.buffer
                            , e = this.valueSize
                            , n = 3 * e;
                        this.binding.getValue(t, n);
                        for (var i = e; i !== n; ++i)
                            t[i] = t[n + i % e];
                        this.cumulativeWeight = 0
                    },
                    restoreOriginalState: function() {
                        this.binding.setValue(this.buffer, 3 * this.valueSize)
                    },
                    _select: function(t, e, n, i, r) {
                        if (.5 <= i)
                            for (i = 0; i !== r; ++i)
                                t[e + i] = t[n + i]
                    },
                    _slerp: function(t, e, n, i) {
                        u.slerpFlat(t, e, t, e, t, n, i)
                    },
                    _lerp: function(t, e, n, i, r) {
                        for (var a = 1 - i, o = 0; o !== r; ++o) {
                            var s = e + o;
                            t[s] = t[s] * a + t[n + o] * i
                        }
                    }
                });
            var tu = /[\[\]\.:\/]/g
                , eu = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]"
                , nu = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]")
                , iu = /(WCOD+)?/.source.replace("WCOD", eu)
                , ru = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
                , au = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
                , ou = new RegExp("^" + nu + iu + ru + au + "$")
                , su = ["material", "materials", "bones"];
            Object.assign(Ur.prototype, {
                getValue: function(t, e) {
                    this.bind();
                    var n = this._bindings[this._targetGroup.nCachedObjects_];
                    void 0 !== n && n.getValue(t, e)
                },
                setValue: function(t, e) {
                    for (var n = this._bindings, i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)
                        n[i].setValue(t, e)
                },
                bind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                        t[e].bind()
                },
                unbind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                        t[e].unbind()
                }
            }),
                Object.assign(Gr, {
                    Composite: Ur,
                    create: function(t, e, n) {
                        return t && t.isAnimationObjectGroup ? new Gr.Composite(t,e,n) : new Gr(t,e,n)
                    },
                    sanitizeNodeName: function(t) {
                        return t.replace(/\s/g, "_").replace(tu, "")
                    },
                    parseTrackName: function(t) {
                        var e = ou.exec(t);
                        if (!e)
                            throw Error("PropertyBinding: Cannot parse trackName: " + t);
                        var n = (e = {
                            nodeName: e[2],
                            objectName: e[3],
                            objectIndex: e[4],
                            propertyName: e[5],
                            propertyIndex: e[6]
                        }).nodeName && e.nodeName.lastIndexOf(".");
                        if (void 0 !== n && -1 !== n) {
                            var i = e.nodeName.substring(n + 1);
                            -1 !== su.indexOf(i) && (e.nodeName = e.nodeName.substring(0, n),
                                e.objectName = i)
                        }
                        if (null === e.propertyName || 0 === e.propertyName.length)
                            throw Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                        return e
                    },
                    findNode: function(t, e) {
                        if (!e || "" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                            return t;
                        if (t.skeleton) {
                            var n = t.skeleton.getBoneByName(e);
                            if (void 0 !== n)
                                return n
                        }
                        return t.children && (t = function t(n) {
                            for (var i = 0; i < n.length; i++) {
                                var r = n[i];
                                if (r.name === e || r.uuid === e || (r = t(r.children)))
                                    return r
                            }
                            return null
                        }(t.children)) ? t : null
                    }
                }),
                Object.assign(Gr.prototype, {
                    _getValue_unavailable: function() {},
                    _setValue_unavailable: function() {},
                    BindingType: {
                        Direct: 0,
                        EntireArray: 1,
                        ArrayElement: 2,
                        HasFromToArray: 3
                    },
                    Versioning: {
                        None: 0,
                        NeedsUpdate: 1,
                        MatrixWorldNeedsUpdate: 2
                    },
                    GetterByBindingType: [function(t, e) {
                        t[e] = this.node[this.propertyName]
                    }
                        , function(t, e) {
                            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                                t[e++] = n[i]
                        }
                        , function(t, e) {
                            t[e] = this.resolvedProperty[this.propertyIndex]
                        }
                        , function(t, e) {
                            this.resolvedProperty.toArray(t, e)
                        }
                    ],
                    SetterByBindingTypeAndVersioning: [[function(t, e) {
                        this.targetObject[this.propertyName] = t[e]
                    }
                        , function(t, e) {
                            this.targetObject[this.propertyName] = t[e],
                                this.targetObject.needsUpdate = !0
                        }
                        , function(t, e) {
                            this.targetObject[this.propertyName] = t[e],
                                this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function(t, e) {
                        for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                            n[i] = t[e++]
                    }
                        , function(t, e) {
                            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                                n[i] = t[e++];
                            this.targetObject.needsUpdate = !0
                        }
                        , function(t, e) {
                            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                                n[i] = t[e++];
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function(t, e) {
                        this.resolvedProperty[this.propertyIndex] = t[e]
                    }
                        , function(t, e) {
                            this.resolvedProperty[this.propertyIndex] = t[e],
                                this.targetObject.needsUpdate = !0
                        }
                        , function(t, e) {
                            this.resolvedProperty[this.propertyIndex] = t[e],
                                this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ], [function(t, e) {
                        this.resolvedProperty.fromArray(t, e)
                    }
                        , function(t, e) {
                            this.resolvedProperty.fromArray(t, e),
                                this.targetObject.needsUpdate = !0
                        }
                        , function(t, e) {
                            this.resolvedProperty.fromArray(t, e),
                                this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    ]],
                    getValue: function(t, e) {
                        this.bind(),
                            this.getValue(t, e)
                    },
                    setValue: function(t, e) {
                        this.bind(),
                            this.setValue(t, e)
                    },
                    bind: function() {
                        var t = this.node
                            , e = this.parsedPath
                            , n = e.objectName
                            , i = e.propertyName
                            , r = e.propertyIndex;
                        if (t || (this.node = t = Gr.findNode(this.rootNode, e.nodeName) || this.rootNode),
                            this.getValue = this._getValue_unavailable,
                            this.setValue = this._setValue_unavailable,
                            t) {
                            if (n) {
                                var a = e.objectIndex;
                                switch (n) {
                                    case "materials":
                                        if (!t.material)
                                            return;
                                        if (!t.material.materials)
                                            return;
                                        t = t.material.materials;
                                        break;
                                    case "bones":
                                        if (!t.skeleton)
                                            return;
                                        for (t = t.skeleton.bones,
                                                 n = 0; n < t.length; n++)
                                            if (t[n].name === a) {
                                                a = n;
                                                break
                                            }
                                        break;
                                    default:
                                        if (void 0 === t[n])
                                            return;
                                        t = t[n]
                                }
                                if (void 0 !== a) {
                                    if (void 0 === t[a])
                                        return;
                                    t = t[a]
                                }
                            }
                            if (void 0 !== (a = t[i])) {
                                if (e = this.Versioning.None,
                                    void 0 !== (this.targetObject = t).needsUpdate ? e = this.Versioning.NeedsUpdate : void 0 !== t.matrixWorldNeedsUpdate && (e = this.Versioning.MatrixWorldNeedsUpdate),
                                    n = this.BindingType.Direct,
                                void 0 !== r) {
                                    if ("morphTargetInfluences" === i) {
                                        if (!t.geometry)
                                            return;
                                        if (t.geometry.isBufferGeometry) {
                                            if (!t.geometry.morphAttributes)
                                                return;
                                            for (n = 0; n < this.node.geometry.morphAttributes.position.length; n++)
                                                if (t.geometry.morphAttributes.position[n].name === r) {
                                                    r = n;
                                                    break
                                                }
                                        } else {
                                            if (!t.geometry.morphTargets)
                                                return;
                                            for (n = 0; n < this.node.geometry.morphTargets.length; n++)
                                                if (t.geometry.morphTargets[n].name === r) {
                                                    r = n;
                                                    break
                                                }
                                        }
                                    }
                                    n = this.BindingType.ArrayElement,
                                        this.resolvedProperty = a,
                                        this.propertyIndex = r
                                } else
                                    void 0 !== a.fromArray && void 0 !== a.toArray ? (n = this.BindingType.HasFromToArray,
                                        this.resolvedProperty = a) : Array.isArray(a) ? (n = this.BindingType.EntireArray,
                                        this.resolvedProperty = a) : this.propertyName = i;
                                this.getValue = this.GetterByBindingType[n],
                                    this.setValue = this.SetterByBindingTypeAndVersioning[n][e]
                            }
                        }
                    },
                    unbind: function() {
                        this.node = null,
                            this.getValue = this._getValue_unbound,
                            this.setValue = this._setValue_unbound
                    }
                }),
                Object.assign(Gr.prototype, {
                    _getValue_unbound: Gr.prototype.getValue,
                    _setValue_unbound: Gr.prototype.setValue
                }),
                Object.assign(kr.prototype, {
                    isAnimationObjectGroup: !0,
                    add: function() {
                        for (var t = this._objects, e = t.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._paths, a = this._parsedPaths, o = this._bindings, s = o.length, c = 0, u = arguments.length; c !== u; ++c) {
                            var l = arguments[c]
                                , h = l.uuid
                                , p = i[h];
                            if (void 0 === p) {
                                p = e++,
                                    i[h] = p,
                                    t.push(l),
                                    h = 0;
                                for (var f = s; h !== f; ++h)
                                    o[h].push(new Gr(l,r[h],a[h]))
                            } else if (p < n) {
                                t[p];
                                var d = --n;
                                for (t[i[(f = t[d]).uuid] = p] = f,
                                         t[i[h] = d] = l,
                                         h = 0,
                                         f = s; h !== f; ++h) {
                                    var m = o[h]
                                        , g = m[p];
                                    m[p] = m[d],
                                    void 0 === g && (g = new Gr(l,r[h],a[h])),
                                        m[d] = g
                                }
                            } else
                                t[p]
                        }
                        this.nCachedObjects_ = n
                    },
                    remove: function() {
                        for (var t = this._objects, e = this.nCachedObjects_, n = this._indicesByUUID, i = this._bindings, r = i.length, a = 0, o = arguments.length; a !== o; ++a) {
                            var s = arguments[a]
                                , c = s.uuid
                                , u = n[c];
                            if (void 0 !== u && e <= u) {
                                var l = e++
                                    , h = t[l];
                                for (t[n[h.uuid] = u] = h,
                                         t[n[c] = l] = s,
                                         s = 0,
                                         c = r; s !== c; ++s) {
                                    var p = (h = i[s])[u];
                                    h[u] = h[l],
                                        h[l] = p
                                }
                            }
                        }
                        this.nCachedObjects_ = e
                    },
                    uncache: function() {
                        for (var t = this._objects, e = t.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._bindings, a = r.length, o = 0, s = arguments.length; o !== s; ++o) {
                            var c = arguments[o].uuid
                                , u = i[c];
                            if (void 0 !== u)
                                if (delete i[c],
                                u < n) {
                                    var l = t[c = --n]
                                        , h = --e
                                        , p = t[h];
                                    for (t[i[l.uuid] = u] = l,
                                             t[i[p.uuid] = c] = p,
                                             t.pop(),
                                             l = 0,
                                             p = a; l !== p; ++l) {
                                        var f = r[l]
                                            , d = f[h];
                                        f[u] = f[c],
                                            f[c] = d,
                                            f.pop()
                                    }
                                } else
                                    for (t[i[(p = t[h = --e]).uuid] = u] = p,
                                             t.pop(),
                                             l = 0,
                                             p = a; l !== p; ++l)
                                        (f = r[l])[u] = f[h],
                                            f.pop()
                        }
                        this.nCachedObjects_ = n
                    },
                    subscribe_: function(t, e) {
                        var n = this._bindingsIndicesByPath
                            , i = n[t]
                            , r = this._bindings;
                        if (void 0 !== i)
                            return r[i];
                        var a = this._paths
                            , o = this._parsedPaths
                            , s = this._objects
                            , c = this.nCachedObjects_
                            , u = Array(s.length);
                        for (i = r.length,
                                 n[t] = i,
                                 a.push(t),
                                 o.push(e),
                                 r.push(u),
                                 n = c,
                                 i = s.length; n !== i; ++n)
                            u[n] = new Gr(s[n],t,e);
                        return u
                    },
                    unsubscribe_: function(t) {
                        var e = this._bindingsIndicesByPath
                            , n = e[t];
                        if (void 0 !== n) {
                            var i = this._paths
                                , r = this._parsedPaths
                                , a = this._bindings
                                , o = a.length - 1
                                , s = a[o];
                            a[e[t[o]] = n] = s,
                                a.pop(),
                                r[n] = r[o],
                                r.pop(),
                                i[n] = i[o],
                                i.pop()
                        }
                    }
                }),
                Object.assign(jr.prototype, {
                    play: function() {
                        return this._mixer._activateAction(this),
                            this
                    },
                    stop: function() {
                        return this._mixer._deactivateAction(this),
                            this.reset()
                    },
                    reset: function() {
                        return this.paused = !1,
                            this.enabled = !0,
                            this.time = 0,
                            this._loopCount = -1,
                            this._startTime = null,
                            this.stopFading().stopWarping()
                    },
                    isRunning: function() {
                        return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                    },
                    isScheduled: function() {
                        return this._mixer._isActiveAction(this)
                    },
                    startAt: function(t) {
                        return this._startTime = t,
                            this
                    },
                    setLoop: function(t, e) {
                        return this.loop = t,
                            this.repetitions = e,
                            this
                    },
                    setEffectiveWeight: function(t) {
                        return this.weight = t,
                            this._effectiveWeight = this.enabled ? t : 0,
                            this.stopFading()
                    },
                    getEffectiveWeight: function() {
                        return this._effectiveWeight
                    },
                    fadeIn: function(t) {
                        return this._scheduleFading(t, 0, 1)
                    },
                    fadeOut: function(t) {
                        return this._scheduleFading(t, 1, 0)
                    },
                    crossFadeFrom: function(t, e, n) {
                        if (t.fadeOut(e),
                            this.fadeIn(e),
                            n) {
                            n = this._clip.duration;
                            var i = t._clip.duration
                                , r = n / i;
                            t.warp(1, i / n, e),
                                this.warp(r, 1, e)
                        }
                        return this
                    },
                    crossFadeTo: function(t, e, n) {
                        return t.crossFadeFrom(this, e, n)
                    },
                    stopFading: function() {
                        var t = this._weightInterpolant;
                        return null !== t && (this._weightInterpolant = null,
                            this._mixer._takeBackControlInterpolant(t)),
                            this
                    },
                    setEffectiveTimeScale: function(t) {
                        return this.timeScale = t,
                            this._effectiveTimeScale = this.paused ? 0 : t,
                            this.stopWarping()
                    },
                    getEffectiveTimeScale: function() {
                        return this._effectiveTimeScale
                    },
                    setDuration: function(t) {
                        return this.timeScale = this._clip.duration / t,
                            this.stopWarping()
                    },
                    syncWith: function(t) {
                        return this.time = t.time,
                            this.timeScale = t.timeScale,
                            this.stopWarping()
                    },
                    halt: function(t) {
                        return this.warp(this._effectiveTimeScale, 0, t)
                    },
                    warp: function(t, e, n) {
                        var i = this._mixer
                            , r = i.time
                            , a = this._timeScaleInterpolant
                            , o = this.timeScale;
                        return null === a && (this._timeScaleInterpolant = a = i._lendControlInterpolant()),
                            i = a.parameterPositions,
                            a = a.sampleValues,
                            i[0] = r,
                            i[1] = r + n,
                            a[0] = t / o,
                            a[1] = e / o,
                            this
                    },
                    stopWarping: function() {
                        var t = this._timeScaleInterpolant;
                        return null !== t && (this._timeScaleInterpolant = null,
                            this._mixer._takeBackControlInterpolant(t)),
                            this
                    },
                    getMixer: function() {
                        return this._mixer
                    },
                    getClip: function() {
                        return this._clip
                    },
                    getRoot: function() {
                        return this._localRoot || this._mixer._root
                    },
                    _update: function(t, e, n, i) {
                        if (this.enabled) {
                            var r = this._startTime;
                            if (null !== r) {
                                if ((e = (t - r) * n) < 0 || 0 === n)
                                    return;
                                this._startTime = null,
                                    e *= n
                            }
                            if (e *= this._updateTimeScale(t),
                                n = this._updateTime(e),
                            0 < (t = this._updateWeight(t))) {
                                e = this._interpolants,
                                    r = this._propertyBindings;
                                for (var a = 0, o = e.length; a !== o; ++a)
                                    e[a].evaluate(n),
                                        r[a].accumulate(i, t)
                            }
                        } else
                            this._updateWeight(t)
                    },
                    _updateWeight: function(t) {
                        var e = 0;
                        if (this.enabled) {
                            e = this.weight;
                            var n = this._weightInterpolant;
                            if (null !== n) {
                                var i = n.evaluate(t)[0];
                                e *= i,
                                t > n.parameterPositions[1] && (this.stopFading(),
                                0 === i && (this.enabled = !1))
                            }
                        }
                        return this._effectiveWeight = e
                    },
                    _updateTimeScale: function(t) {
                        var e = 0;
                        if (!this.paused) {
                            e = this.timeScale;
                            var n = this._timeScaleInterpolant;
                            null !== n && (e *= n.evaluate(t)[0],
                            t > n.parameterPositions[1] && (this.stopWarping(),
                                0 === e ? this.paused = !0 : this.timeScale = e))
                        }
                        return this._effectiveTimeScale = e
                    },
                    _updateTime: function(t) {
                        var e = this.time + t
                            , n = this._clip.duration
                            , i = this.loop
                            , r = this._loopCount
                            , a = 2202 === i;
                        if (0 === t)
                            return -1 !== r && a && 1 == (1 & r) ? n - e : e;
                        if (2200 === i)
                            t: {
                                if (-1 === r && (this._loopCount = 0,
                                    this._setEndings(!0, !0, !1)),
                                n <= e)
                                    e = n;
                                else {
                                    if (!(e < 0)) {
                                        this.time = e;
                                        break t
                                    }
                                    e = 0
                                }
                                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                    this.time = e,
                                    this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: t < 0 ? -1 : 1
                                    })
                            }
                        else {
                            if (-1 === r && (0 <= t ? (r = 0,
                                this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                            n <= e || e < 0) {
                                e -= n * (i = Math.floor(e / n)),
                                    r += Math.abs(i);
                                var o = this.repetitions - r;
                                o <= 0 ? (this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                    this.time = e = 0 < t ? n : 0,
                                    this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: 0 < t ? 1 : -1
                                    })) : (1 == o ? (t = t < 0,
                                    this._setEndings(t, !t, a)) : this._setEndings(!1, !1, a),
                                    this._loopCount = r,
                                    this.time = e,
                                    this._mixer.dispatchEvent({
                                        type: "loop",
                                        action: this,
                                        loopDelta: i
                                    }))
                            } else
                                this.time = e;
                            if (a && 1 == (1 & r))
                                return n - e
                        }
                        return e
                    },
                    _setEndings: function(t, e, n) {
                        var i = this._interpolantSettings;
                        n ? (i.endingStart = 2401,
                            i.endingEnd = 2401) : (i.endingStart = t ? this.zeroSlopeAtStart ? 2401 : 2400 : 2402,
                            i.endingEnd = e ? this.zeroSlopeAtEnd ? 2401 : 2400 : 2402)
                    },
                    _scheduleFading: function(t, e, n) {
                        var i = this._mixer
                            , r = i.time
                            , a = this._weightInterpolant;
                        return null === a && (this._weightInterpolant = a = i._lendControlInterpolant()),
                            i = a.parameterPositions,
                            a = a.sampleValues,
                            i[0] = r,
                            a[0] = e,
                            i[1] = r + t,
                            a[1] = n,
                            this
                    }
                }),
                Vr.prototype = Object.assign(Object.create(e.prototype), {
                    constructor: Vr,
                    _bindAction: function(t, e) {
                        var n = t._localRoot || this._root
                            , i = t._clip.tracks
                            , r = i.length
                            , a = t._propertyBindings;
                        t = t._interpolants;
                        var o = n.uuid
                            , s = this._bindingsByRootAndName
                            , c = s[o];
                        for (void 0 === c && (c = {},
                            s[o] = c),
                                 s = 0; s !== r; ++s) {
                            var u = i[s]
                                , l = u.name
                                , h = c[l];
                            if (void 0 === h) {
                                if (void 0 !== (h = a[s])) {
                                    null === h._cacheIndex && (++h.referenceCount,
                                        this._addInactiveBinding(h, o, l));
                                    continue
                                }
                                ++(h = new Br(Gr.create(n, l, e && e._propertyBindings[s].binding.parsedPath),u.ValueTypeName,u.getValueSize())).referenceCount,
                                    this._addInactiveBinding(h, o, l)
                            }
                            a[s] = h,
                                t[s].resultBuffer = h.buffer
                        }
                    },
                    _activateAction: function(t) {
                        if (!this._isActiveAction(t)) {
                            if (null === t._cacheIndex) {
                                var e = (t._localRoot || this._root).uuid
                                    , n = t._clip.uuid
                                    , i = this._actionsByClip[n];
                                this._bindAction(t, i && i.knownActions[0]),
                                    this._addInactiveAction(t, n, e)
                            }
                            for (n = 0,
                                     i = (e = t._propertyBindings).length; n !== i; ++n) {
                                var r = e[n];
                                0 == r.useCount++ && (this._lendBinding(r),
                                    r.saveOriginalState())
                            }
                            this._lendAction(t)
                        }
                    },
                    _deactivateAction: function(t) {
                        if (this._isActiveAction(t)) {
                            for (var e = t._propertyBindings, n = 0, i = e.length; n !== i; ++n) {
                                var r = e[n];
                                0 == --r.useCount && (r.restoreOriginalState(),
                                    this._takeBackBinding(r))
                            }
                            this._takeBackAction(t)
                        }
                    },
                    _initMemoryManager: function() {
                        this._actions = [],
                            this._nActiveActions = 0,
                            this._actionsByClip = {},
                            this._bindings = [],
                            this._nActiveBindings = 0,
                            this._bindingsByRootAndName = {},
                            this._controlInterpolants = [],
                            this._nActiveControlInterpolants = 0;
                        var t = this;
                        this.stats = {
                            actions: {
                                get total() {
                                    return t._actions.length
                                },
                                get inUse() {
                                    return t._nActiveActions
                                }
                            },
                            bindings: {
                                get total() {
                                    return t._bindings.length
                                },
                                get inUse() {
                                    return t._nActiveBindings
                                }
                            },
                            controlInterpolants: {
                                get total() {
                                    return t._controlInterpolants.length
                                },
                                get inUse() {
                                    return t._nActiveControlInterpolants
                                }
                            }
                        }
                    },
                    _isActiveAction: function(t) {
                        return null !== (t = t._cacheIndex) && t < this._nActiveActions
                    },
                    _addInactiveAction: function(t, e, n) {
                        var i = this._actions
                            , r = this._actionsByClip
                            , a = r[e];
                        void 0 === a ? (a = {
                            knownActions: [t],
                            actionByRoot: {}
                        },
                            t._byClipCacheIndex = 0,
                            r[e] = a) : (e = a.knownActions,
                            t._byClipCacheIndex = e.length,
                            e.push(t)),
                            t._cacheIndex = i.length,
                            i.push(t),
                            a.actionByRoot[n] = t
                    },
                    _removeInactiveAction: function(t) {
                        var e = this._actions
                            , n = e[e.length - 1]
                            , i = t._cacheIndex;
                        e[n._cacheIndex = i] = n,
                            e.pop(),
                            t._cacheIndex = null,
                            e = t._clip.uuid;
                        var r = (i = (n = this._actionsByClip)[e]).knownActions
                            , a = r[r.length - 1]
                            , o = t._byClipCacheIndex;
                        r[a._byClipCacheIndex = o] = a,
                            r.pop(),
                            t._byClipCacheIndex = null,
                            delete i.actionByRoot[(t._localRoot || this._root).uuid],
                        0 === r.length && delete n[e],
                            this._removeInactiveBindingsForAction(t)
                    },
                    _removeInactiveBindingsForAction: function(t) {
                        for (var e = 0, n = (t = t._propertyBindings).length; e !== n; ++e) {
                            var i = t[e];
                            0 == --i.referenceCount && this._removeInactiveBinding(i)
                        }
                    },
                    _lendAction: function(t) {
                        var e = this._actions
                            , n = t._cacheIndex
                            , i = this._nActiveActions++
                            , r = e[i];
                        e[t._cacheIndex = i] = t,
                            e[r._cacheIndex = n] = r
                    },
                    _takeBackAction: function(t) {
                        var e = this._actions
                            , n = t._cacheIndex
                            , i = --this._nActiveActions
                            , r = e[i];
                        e[t._cacheIndex = i] = t,
                            e[r._cacheIndex = n] = r
                    },
                    _addInactiveBinding: function(t, e, n) {
                        var i = this._bindingsByRootAndName
                            , r = i[e]
                            , a = this._bindings;
                        void 0 === r && (r = {},
                            i[e] = r),
                            (r[n] = t)._cacheIndex = a.length,
                            a.push(t)
                    },
                    _removeInactiveBinding: function(t) {
                        var e = this._bindings
                            , n = t.binding
                            , i = n.rootNode.uuid;
                        n = n.path;
                        var r = this._bindingsByRootAndName
                            , a = r[i]
                            , o = e[e.length - 1];
                        t = t._cacheIndex,
                            e[o._cacheIndex = t] = o,
                            e.pop(),
                            delete a[n],
                        0 === Object.keys(a).length && delete r[i]
                    },
                    _lendBinding: function(t) {
                        var e = this._bindings
                            , n = t._cacheIndex
                            , i = this._nActiveBindings++
                            , r = e[i];
                        e[t._cacheIndex = i] = t,
                            e[r._cacheIndex = n] = r
                    },
                    _takeBackBinding: function(t) {
                        var e = this._bindings
                            , n = t._cacheIndex
                            , i = --this._nActiveBindings
                            , r = e[i];
                        e[t._cacheIndex = i] = t,
                            e[r._cacheIndex = n] = r
                    },
                    _lendControlInterpolant: function() {
                        var t = this._controlInterpolants
                            , e = this._nActiveControlInterpolants++
                            , n = t[e];
                        return void 0 === n && (t[(n = new bi(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex = e] = n),
                            n
                    },
                    _takeBackControlInterpolant: function(t) {
                        var e = this._controlInterpolants
                            , n = t.__cacheIndex
                            , i = --this._nActiveControlInterpolants
                            , r = e[i];
                        e[t.__cacheIndex = i] = t,
                            e[r.__cacheIndex = n] = r
                    },
                    _controlInterpolantsResultBuffer: new Float32Array(1),
                    clipAction: function(t, e) {
                        var n = e || this._root
                            , i = n.uuid;
                        t = null !== (n = "string" == typeof t ? Oi.findByName(n, t) : t) ? n.uuid : t;
                        var r = this._actionsByClip[t]
                            , a = null;
                        if (void 0 !== r) {
                            if (void 0 !== (a = r.actionByRoot[i]))
                                return a;
                            a = r.knownActions[0],
                            null === n && (n = a._clip)
                        }
                        return null === n ? null : (e = new jr(this,n,e),
                            this._bindAction(e, a),
                            this._addInactiveAction(e, t, i),
                            e)
                    },
                    existingAction: function(t, e) {
                        var n = e || this._root;
                        return e = n.uuid,
                            n = "string" == typeof t ? Oi.findByName(n, t) : t,
                        void 0 !== (t = this._actionsByClip[n ? n.uuid : t]) && t.actionByRoot[e] || null
                    },
                    stopAllAction: function() {
                        for (var t = this._actions, e = this._nActiveActions, n = this._bindings, i = this._nActiveBindings, r = this._nActiveBindings = this._nActiveActions = 0; r !== e; ++r)
                            t[r].reset();
                        for (r = 0; r !== i; ++r)
                            n[r].useCount = 0;
                        return this
                    },
                    update: function(t) {
                        t *= this.timeScale;
                        for (var e = this._actions, n = this._nActiveActions, i = this.time += t, r = Math.sign(t), a = this._accuIndex ^= 1, o = 0; o !== n; ++o)
                            e[o]._update(i, t, r, a);
                        for (t = this._bindings,
                                 e = this._nActiveBindings,
                                 o = 0; o !== e; ++o)
                            t[o].apply(a);
                        return this
                    },
                    setTime: function(t) {
                        for (var e = this.time = 0; e < this._actions.length; e++)
                            this._actions[e].time = 0;
                        return this.update(t)
                    },
                    getRoot: function() {
                        return this._root
                    },
                    uncacheClip: function(t) {
                        var e = this._actions;
                        t = t.uuid;
                        var n = this._actionsByClip
                            , i = n[t];
                        if (void 0 !== i) {
                            for (var r = 0, a = (i = i.knownActions).length; r !== a; ++r) {
                                var o = i[r];
                                this._deactivateAction(o);
                                var s = o._cacheIndex
                                    , c = e[e.length - 1];
                                o._cacheIndex = null,
                                    o._byClipCacheIndex = null,
                                    e[c._cacheIndex = s] = c,
                                    e.pop(),
                                    this._removeInactiveBindingsForAction(o)
                            }
                            delete n[t]
                        }
                    },
                    uncacheRoot: function(t) {
                        t = t.uuid;
                        var e = this._actionsByClip;
                        for (i in e) {
                            var n = e[i].actionByRoot[t];
                            void 0 !== n && (this._deactivateAction(n),
                                this._removeInactiveAction(n))
                        }
                        var i = this._bindingsByRootAndName[t];
                        if (void 0 !== i)
                            for (var r in i)
                                (t = i[r]).restoreOriginalState(),
                                    this._removeInactiveBinding(t)
                    },
                    uncacheAction: function(t, e) {
                        null !== (t = this.existingAction(t, e)) && (this._deactivateAction(t),
                            this._removeInactiveAction(t))
                    }
                }),
                Wr.prototype.clone = function() {
                    return new Wr(void 0 === this.value.clone ? this.value : this.value.clone())
                }
                ,
                Hr.prototype = Object.assign(Object.create(Fe.prototype), {
                    constructor: Hr,
                    isInstancedInterleavedBuffer: !0,
                    copy: function(t) {
                        return Fe.prototype.copy.call(this, t),
                            this.meshPerAttribute = t.meshPerAttribute,
                            this
                    }
                }),
                Object.assign(qr.prototype, {
                    set: function(t, e) {
                        this.ray.set(t, e)
                    },
                    setFromCamera: function(t, e) {
                        e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
                            this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize(),
                            this.camera = e) : e && e.isOrthographicCamera && (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
                            this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld),
                            this.camera = e)
                    },
                    intersectObject: function(t, e, n) {
                        return Yr(t, this, n = n || [], e),
                            n.sort(Xr),
                            n
                    },
                    intersectObjects: function(t, e, n) {
                        if (n = n || [],
                        !1 === Array.isArray(t))
                            return n;
                        for (var i = 0, r = t.length; i < r; i++)
                            Yr(t[i], this, n, e);
                        return n.sort(Xr),
                            n
                    }
                }),
                Object.assign(Zr.prototype, {
                    set: function(t, e, n) {
                        return this.radius = t,
                            this.phi = e,
                            this.theta = n,
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.radius = t.radius,
                            this.phi = t.phi,
                            this.theta = t.theta,
                            this
                    },
                    makeSafe: function() {
                        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
                            this
                    },
                    setFromVector3: function(t) {
                        return this.setFromCartesianCoords(t.x, t.y, t.z)
                    },
                    setFromCartesianCoords: function(t, e, n) {
                        return this.radius = Math.sqrt(t * t + e * e + n * n),
                            0 === this.radius ? this.phi = this.theta = 0 : (this.theta = Math.atan2(t, n),
                                this.phi = Math.acos(Ca.clamp(e / this.radius, -1, 1))),
                            this
                    }
                }),
                Object.assign(Jr.prototype, {
                    set: function(t, e, n) {
                        return this.radius = t,
                            this.theta = e,
                            this.y = n,
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    },
                    copy: function(t) {
                        return this.radius = t.radius,
                            this.theta = t.theta,
                            this.y = t.y,
                            this
                    },
                    setFromVector3: function(t) {
                        return this.setFromCartesianCoords(t.x, t.y, t.z)
                    },
                    setFromCartesianCoords: function(t, e, n) {
                        return this.radius = Math.sqrt(t * t + n * n),
                            this.theta = Math.atan2(t, n),
                            this.y = e,
                            this
                    }
                });
            var cu = new n;
            Object.assign(Kr.prototype, {
                set: function(t, e) {
                    return this.min.copy(t),
                        this.max.copy(e),
                        this
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, n = t.length; e < n; e++)
                        this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function(t, e) {
                    return e = cu.copy(e).multiplyScalar(.5),
                        this.min.copy(t).sub(e),
                        this.max.copy(t).add(e),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min),
                        this.max.copy(t.max),
                        this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = 1 / 0,
                        this.max.x = this.max.y = -1 / 0,
                        this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                getCenter: function(t) {
                    return void 0 === t && (t = new n),
                        this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(t) {
                    return void 0 === t && (t = new n),
                        this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t),
                        this.max.max(t),
                        this
                },
                expandByVector: function(t) {
                    return this.min.sub(t),
                        this.max.add(t),
                        this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t),
                        this.max.addScalar(t),
                        this
                },
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
                },
                getParameter: function(t, e) {
                    return void 0 === e && (e = new n),
                        e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
                },
                clampPoint: function(t, e) {
                    return void 0 === e && (e = new n),
                        e.copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function(t) {
                    return cu.copy(t).clamp(this.min, this.max).sub(t).length()
                },
                intersect: function(t) {
                    return this.min.max(t.min),
                        this.max.min(t.max),
                        this
                },
                union: function(t) {
                    return this.min.min(t.min),
                        this.max.max(t.max),
                        this
                },
                translate: function(t) {
                    return this.min.add(t),
                        this.max.add(t),
                        this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            });
            var uu = new l
                , lu = new l;
            Object.assign(Qr.prototype, {
                set: function(t, e) {
                    return this.start.copy(t),
                        this.end.copy(e),
                        this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.start.copy(t.start),
                        this.end.copy(t.end),
                        this
                },
                getCenter: function(t) {
                    return void 0 === t && (t = new l),
                        t.addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function(t) {
                    return void 0 === t && (t = new l),
                        t.subVectors(this.end, this.start)
                },
                distanceSq: function() {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function() {
                    return this.start.distanceTo(this.end)
                },
                at: function(t, e) {
                    return void 0 === e && (e = new l),
                        this.delta(e).multiplyScalar(t).add(this.start)
                },
                closestPointToPointParameter: function(t, e) {
                    return uu.subVectors(t, this.start),
                        lu.subVectors(this.end, this.start),
                        t = lu.dot(lu),
                        t = lu.dot(uu) / t,
                    e && (t = Ca.clamp(t, 0, 1)),
                        t
                },
                closestPointToPoint: function(t, e, n) {
                    return t = this.closestPointToPointParameter(t, e),
                    void 0 === n && (n = new l),
                        this.delta(n).multiplyScalar(t).add(this.start)
                },
                applyMatrix4: function(t) {
                    return this.start.applyMatrix4(t),
                        this.end.applyMatrix4(t),
                        this
                },
                equals: function(t) {
                    return t.start.equals(this.start) && t.end.equals(this.end)
                }
            }),
                (($r.prototype = Object.create(d.prototype)).constructor = $r).prototype.isImmediateRenderObject = !0;
            var hu = new l;
            ((ta.prototype = Object.create(d.prototype)).constructor = ta).prototype.dispose = function() {
                this.cone.geometry.dispose(),
                    this.cone.material.dispose()
            }
                ,
                ta.prototype.update = function() {
                    this.light.updateMatrixWorld();
                    var t = this.light.distance ? this.light.distance : 1e3
                        , e = t * Math.tan(this.light.angle);
                    this.cone.scale.set(e, e, t),
                        hu.setFromMatrixPosition(this.light.target.matrixWorld),
                        this.cone.lookAt(hu),
                        void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
                }
            ;
            var pu = new l
                , fu = new h
                , du = new h;
            ((ea.prototype = Object.create(Ze.prototype)).constructor = ea).prototype.isSkeletonHelper = !0,
                ea.prototype.updateMatrixWorld = function(t) {
                    var e = this.bones
                        , n = this.geometry
                        , i = n.getAttribute("position");
                    du.getInverse(this.root.matrixWorld);
                    for (var r = 0, a = 0; r < e.length; r++) {
                        var o = e[r];
                        o.parent && o.parent.isBone && (fu.multiplyMatrices(du, o.matrixWorld),
                            pu.setFromMatrixPosition(fu),
                            i.setXYZ(a, pu.x, pu.y, pu.z),
                            fu.multiplyMatrices(du, o.parent.matrixWorld),
                            pu.setFromMatrixPosition(fu),
                            i.setXYZ(a + 1, pu.x, pu.y, pu.z),
                            a += 2)
                    }
                    n.getAttribute("position").needsUpdate = !0,
                        d.prototype.updateMatrixWorld.call(this, t)
                }
                ,
                ((na.prototype = Object.create(j.prototype)).constructor = na).prototype.dispose = function() {
                    this.geometry.dispose(),
                        this.material.dispose()
                }
                ,
                na.prototype.update = function() {
                    void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
                }
            ;
            var mu = new l
                , gu = new M
                , vu = new M;
            ((ia.prototype = Object.create(d.prototype)).constructor = ia).prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                    this.children[0].material.dispose()
            }
                ,
                ia.prototype.update = function() {
                    var t = this.children[0];
                    if (void 0 !== this.color)
                        this.material.color.set(this.color);
                    else {
                        var e = t.geometry.getAttribute("color");
                        gu.copy(this.light.color),
                            vu.copy(this.light.groundColor);
                        for (var n = 0, i = e.count; n < i; n++) {
                            var r = n < i / 2 ? gu : vu;
                            e.setXYZ(n, r.r, r.g, r.b)
                        }
                        e.needsUpdate = !0
                    }
                    t.lookAt(mu.setFromMatrixPosition(this.light.matrixWorld).negate())
                }
                ,
                ra.prototype = Object.assign(Object.create(Ze.prototype), {
                    constructor: ra,
                    copy: function(t) {
                        return Ze.prototype.copy.call(this, t),
                            this.geometry.copy(t.geometry),
                            this.material.copy(t.material),
                            this
                    },
                    clone: function() {
                        return (new this.constructor).copy(this)
                    }
                }),
                (aa.prototype = Object.create(Ze.prototype)).constructor = aa;
            var yu = new l
                , xu = new l
                , _u = new l;
            ((oa.prototype = Object.create(d.prototype)).constructor = oa).prototype.dispose = function() {
                this.lightPlane.geometry.dispose(),
                    this.lightPlane.material.dispose(),
                    this.targetLine.geometry.dispose(),
                    this.targetLine.material.dispose()
            }
                ,
                oa.prototype.update = function() {
                    yu.setFromMatrixPosition(this.light.matrixWorld),
                        xu.setFromMatrixPosition(this.light.target.matrixWorld),
                        _u.subVectors(xu, yu),
                        this.lightPlane.lookAt(xu),
                        void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
                            this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
                            this.targetLine.material.color.copy(this.light.color)),
                        this.targetLine.lookAt(xu),
                        this.targetLine.scale.z = _u.length()
                }
            ;
            var bu = new l
                , Mu = new Z;
            ((sa.prototype = Object.create(Ze.prototype)).constructor = sa).prototype.update = function() {
                var t = this.geometry
                    , e = this.pointMap;
                Mu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
                    ca("c", e, t, Mu, 0, 0, -1),
                    ca("t", e, t, Mu, 0, 0, 1),
                    ca("n1", e, t, Mu, -1, -1, -1),
                    ca("n2", e, t, Mu, 1, -1, -1),
                    ca("n3", e, t, Mu, -1, 1, -1),
                    ca("n4", e, t, Mu, 1, 1, -1),
                    ca("f1", e, t, Mu, -1, -1, 1),
                    ca("f2", e, t, Mu, 1, -1, 1),
                    ca("f3", e, t, Mu, -1, 1, 1),
                    ca("f4", e, t, Mu, 1, 1, 1),
                    ca("u1", e, t, Mu, .7, 1.1, -1),
                    ca("u2", e, t, Mu, -.7, 1.1, -1),
                    ca("u3", e, t, Mu, 0, 2, -1),
                    ca("cf1", e, t, Mu, -1, 0, 1),
                    ca("cf2", e, t, Mu, 1, 0, 1),
                    ca("cf3", e, t, Mu, 0, -1, 1),
                    ca("cf4", e, t, Mu, 0, 1, 1),
                    ca("cn1", e, t, Mu, -1, 0, -1),
                    ca("cn2", e, t, Mu, 1, 0, -1),
                    ca("cn3", e, t, Mu, 0, -1, -1),
                    ca("cn4", e, t, Mu, 0, 1, -1),
                    t.getAttribute("position").needsUpdate = !0
            }
            ;
            var wu = new g;
            ((ua.prototype = Object.create(Ze.prototype)).constructor = ua).prototype.update = function(t) {
                if (void 0 !== this.object && wu.setFromObject(this.object),
                    !wu.isEmpty()) {
                    t = wu.min;
                    var e = wu.max
                        , n = this.geometry.attributes.position
                        , i = n.array;
                    i[0] = e.x,
                        i[1] = e.y,
                        i[2] = e.z,
                        i[3] = t.x,
                        i[4] = e.y,
                        i[5] = e.z,
                        i[6] = t.x,
                        i[7] = t.y,
                        i[8] = e.z,
                        i[9] = e.x,
                        i[10] = t.y,
                        i[11] = e.z,
                        i[12] = e.x,
                        i[13] = e.y,
                        i[14] = t.z,
                        i[15] = t.x,
                        i[16] = e.y,
                        i[17] = t.z,
                        i[18] = t.x,
                        i[19] = t.y,
                        i[20] = t.z,
                        i[21] = e.x,
                        i[22] = t.y,
                        i[23] = t.z,
                        n.needsUpdate = !0,
                        this.geometry.computeBoundingSphere()
                }
            }
                ,
                ua.prototype.setFromObject = function(t) {
                    return this.object = t,
                        this.update(),
                        this
                }
                ,
                ua.prototype.copy = function(t) {
                    return Ze.prototype.copy.call(this, t),
                        this.object = t.object,
                        this
                }
                ,
                ua.prototype.clone = function() {
                    return (new this.constructor).copy(this)
                }
                ,
                ((la.prototype = Object.create(Ze.prototype)).constructor = la).prototype.updateMatrixWorld = function(t) {
                    var e = this.box;
                    e.isEmpty() || (e.getCenter(this.position),
                        e.getSize(this.scale),
                        this.scale.multiplyScalar(.5),
                        d.prototype.updateMatrixWorld.call(this, t))
                }
                ,
                ((ha.prototype = Object.create(Ye.prototype)).constructor = ha).prototype.updateMatrixWorld = function(t) {
                    var e = -this.plane.constant;
                    Math.abs(e) < 1e-8 && (e = 1e-8),
                        this.scale.set(.5 * this.size, .5 * this.size, e),
                        this.children[0].material.side = e < 0 ? 1 : 0,
                        this.lookAt(this.plane.normal),
                        d.prototype.updateMatrixWorld.call(this, t)
                }
            ;
            var Su, Au, Tu = new l;
            ((pa.prototype = Object.create(d.prototype)).constructor = pa).prototype.setDirection = function(t) {
                .99999 < t.y ? this.quaternion.set(0, 0, 0, 1) : t.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (Tu.set(t.z, 0, -t.x).normalize(),
                    this.quaternion.setFromAxisAngle(Tu, Math.acos(t.y)))
            }
                ,
                pa.prototype.setLength = function(t, e, n) {
                    void 0 === e && (e = .2 * t),
                    void 0 === n && (n = .2 * e),
                        this.line.scale.set(1, Math.max(1e-4, t - e), 1),
                        this.line.updateMatrix(),
                        this.cone.scale.set(n, e, n),
                        this.cone.position.y = t,
                        this.cone.updateMatrix()
                }
                ,
                pa.prototype.setColor = function(t) {
                    this.line.material.color.set(t),
                        this.cone.material.color.set(t)
                }
                ,
                pa.prototype.copy = function(t) {
                    return d.prototype.copy.call(this, t, !1),
                        this.line.copy(t.line),
                        this.cone.copy(t.cone),
                        this
                }
                ,
                pa.prototype.clone = function() {
                    return (new this.constructor).copy(this)
                }
                ,
                (fa.prototype = Object.create(Ze.prototype)).constructor = fa;
            var Lu, Eu = Math.pow(2, 8), Pu = [.125, .215, .35, .446, .526, .582], Cu = 5 + Pu.length, Ou = {
                3e3: 0,
                3001: 1,
                3002: 2,
                3004: 3,
                3005: 4,
                3006: 5,
                3007: 6
            }, Iu = new fr, Nu = ((Lu = new li({
                defines: {
                    n: Lu = 20
                },
                uniforms: {
                    envMap: {
                        value: null
                    },
                    samples: {
                        value: 1
                    },
                    weights: {
                        value: new Float32Array(Lu)
                    },
                    latitudinal: {
                        value: !1
                    },
                    dTheta: {
                        value: 0
                    },
                    mipInt: {
                        value: 0
                    },
                    poleAxis: {
                        value: new l(0,1,0)
                    },
                    inputEncoding: {
                        value: Ou[3e3]
                    },
                    outputEncoding: {
                        value: Ou[3e3]
                    }
                },
                vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
                fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t",
                blending: 0,
                depthTest: !1,
                depthWrite: !1
            })).type = "SphericalGaussianBlur",
                Lu), Du = null, Ru = null, zu = function() {
                for (var t = [], e = [], n = [], i = 8, r = 0; r < Cu; r++) {
                    var a = Math.pow(2, i);
                    e.push(a);
                    var o = 1 / a;
                    4 < r ? o = Pu[r - 8 + 4 - 1] : 0 == r && (o = 0),
                        n.push(o);
                    var s = [a = -(o = 1 / (a - 1)) / 2, a, o = 1 + o / 2, a, o, o, a, a, o, o, a, o];
                    a = new Float32Array(108),
                        o = new Float32Array(72);
                    for (var c = new Float32Array(36), u = 0; u < 6; u++) {
                        var l = u % 3 * 2 / 3 - 1
                            , h = 2 < u ? 0 : -1;
                        a.set([l, h, 0, l + 2 / 3, h, 0, l + 2 / 3, 1 + h, 0, l, h, 0, l + 2 / 3, 1 + h, 0, l, 1 + h, 0], 18 * u),
                            o.set(s, 12 * u),
                            c.set([u, u, u, u, u, u], 6 * u)
                    }
                    (s = new k).setAttribute("position", new P(a,3)),
                        s.setAttribute("uv", new P(o,2)),
                        s.setAttribute("faceIndex", new P(c,1)),
                        t.push(s),
                    4 < i && i--
                }
                return {
                    _lodPlanes: t,
                    _sizeLods: e,
                    _sigmas: n
                }
            }(), Fu = zu._lodPlanes, Bu = zu._sizeLods, Uu = zu._sigmas, Gu = null, ku = null, ju = null, Vu = (1 + Math.sqrt(5)) / 2, Wu = 1 / Vu, Hu = [new l(1,1,1), new l(-1,1,1), new l(1,1,-1), new l(-1,1,-1), new l(0,Vu,Wu), new l(0,Vu,-Wu), new l(Wu,0,Vu), new l(-Wu,0,Vu), new l(Vu,Wu,0), new l(-Vu,Wu,0)];
            da.prototype = {
                constructor: da,
                fromScene: function(t, e, n, i) {
                    void 0 === e && (e = 0),
                    void 0 === n && (n = .1),
                    void 0 === i && (i = 100),
                        ju = ku.getRenderTarget();
                    var r = ma();
                    n = new J(90,1,n,i),
                        i = [1, 1, 1, 1, -1, 1];
                    var a = [1, 1, -1, -1, -1, 1]
                        , o = ku.outputEncoding
                        , s = ku.toneMapping
                        , c = ku.toneMappingExposure
                        , u = ku.getClearColor()
                        , l = ku.getClearAlpha();
                    ku.toneMapping = 1,
                        ku.toneMappingExposure = 1,
                        ku.outputEncoding = 3e3,
                        t.scale.z *= -1;
                    var h = t.background;
                    if (h && h.isColor) {
                        h.convertSRGBToLinear();
                        var p = Math.min(Math.max(Math.ceil(Math.log2(Math.max(h.r, h.g, h.b))), -128), 127);
                        h = h.multiplyScalar(Math.pow(2, -p)),
                            ku.setClearColor(h, (p + 128) / 255),
                            t.background = null
                    }
                    for (h = 0; h < 6; h++)
                        0 == (p = h % 3) ? (n.up.set(0, i[h], 0),
                            n.lookAt(a[h], 0, 0)) : 1 == p ? (n.up.set(0, 0, i[h]),
                            n.lookAt(0, a[h], 0)) : (n.up.set(0, i[h], 0),
                            n.lookAt(0, 0, a[h])),
                            xa(r, p * Eu, 2 < h ? Eu : 0, Eu, Eu),
                            ku.setRenderTarget(r),
                            ku.render(t, n);
                    return ku.toneMapping = s,
                        ku.toneMappingExposure = c,
                        ku.outputEncoding = o,
                        ku.setClearColor(u, l),
                        t.scale.z *= -1,
                    0 < e && ba(r, 0, 0, e),
                        _a(r),
                        ga(r),
                        r
                },
                fromEquirectangular: function(t) {
                    return t.magFilter = 1003,
                        t.minFilter = 1003,
                        t.generateMipmaps = !1,
                        this.fromCubemap(t)
                },
                fromCubemap: function(t) {
                    ju = ku.getRenderTarget();
                    var e = ma(t)
                        , n = new m;
                    t.isCubeTexture ? null == Ru && (Ru = Sa()) : null == Du && (Du = wa());
                    var i = t.isCubeTexture ? Ru : Du;
                    return n.add(new j(Fu[0],i)),
                    ((i = i.uniforms).envMap.value = t).isCubeTexture || i.texelSize.value.set(1 / t.image.width, 1 / t.image.height),
                        i.inputEncoding.value = Ou[t.encoding],
                        i.outputEncoding.value = Ou[t.encoding],
                        xa(e, 0, 0, 3 * Eu, 2 * Eu),
                        ku.setRenderTarget(e),
                        ku.render(n, Iu),
                        _a(e),
                        ga(e),
                        e
                },
                compileCubemapShader: function() {
                    null == Ru && va(Ru = Sa())
                },
                compileEquirectangularShader: function() {
                    null == Du && va(Du = wa())
                },
                dispose: function() {
                    Nu.dispose(),
                    null != Ru && Ru.dispose(),
                    null != Du && Du.dispose();
                    for (var t = 0; t < Fu.length; t++)
                        Fu[t].dispose()
                }
            },
                ji.create = function(t, e) {
                    return t.prototype = Object.create(ji.prototype),
                        (t.prototype.constructor = t).prototype.getPoint = e,
                        t
                }
                ,
                Object.assign(ir.prototype, {
                    createPointsGeometry: function(t) {
                        return t = this.getPoints(t),
                            this.createGeometry(t)
                    },
                    createSpacedPointsGeometry: function(t) {
                        return t = this.getSpacedPoints(t),
                            this.createGeometry(t)
                    },
                    createGeometry: function(t) {
                        for (var e = new H, n = 0, i = t.length; n < i; n++) {
                            var r = t[n];
                            e.vertices.push(new l(r.x,r.y,r.z || 0))
                        }
                        return e
                    }
                }),
                Object.assign(rr.prototype, {
                    fromPoints: function(t) {
                        return this.setFromPoints(t)
                    }
                }),
                Aa.prototype = Object.create(qi.prototype),
                Ta.prototype = Object.create(qi.prototype),
                La.prototype = Object.create(qi.prototype),
                Object.assign(La.prototype, {
                    initFromArray: function() {},
                    getControlPointsArray: function() {},
                    reparametrizeByArcLength: function() {}
                }),
                ra.prototype.setColors = function() {}
                ,
                ea.prototype.update = function() {}
                ,
                Object.assign(Di.prototype, {
                    extractUrlBase: function(t) {
                        return Fc.extractUrlBase(t)
                    }
                }),
                Di.Handlers = {
                    add: function() {},
                    get: function() {}
                },
                Object.assign(Mr.prototype, {
                    setTexturePath: function(t) {
                        return this.setResourcePath(t)
                    }
                }),
                Object.assign(Kr.prototype, {
                    center: function(t) {
                        return this.getCenter(t)
                    },
                    empty: function() {
                        return this.isEmpty()
                    },
                    isIntersectionBox: function(t) {
                        return this.intersectsBox(t)
                    },
                    size: function(t) {
                        return this.getSize(t)
                    }
                }),
                Object.assign(g.prototype, {
                    center: function(t) {
                        return this.getCenter(t)
                    },
                    empty: function() {
                        return this.isEmpty()
                    },
                    isIntersectionBox: function(t) {
                        return this.intersectsBox(t)
                    },
                    isIntersectionSphere: function(t) {
                        return this.intersectsSphere(t)
                    },
                    size: function(t) {
                        return this.getSize(t)
                    }
                }),
                tt.prototype.setFromMatrix = function(t) {
                    return this.setFromProjectionMatrix(t)
                }
                ,
                Qr.prototype.center = function(t) {
                    return this.getCenter(t)
                }
                ,
                Object.assign(Ca, {
                    random16: function() {
                        return Math.random()
                    },
                    nearestPowerOfTwo: function(t) {
                        return Ca.floorPowerOfTwo(t)
                    },
                    nextPowerOfTwo: function(t) {
                        return Ca.ceilPowerOfTwo(t)
                    }
                }),
                Object.assign(i.prototype, {
                    flattenToArrayOffset: function(t, e) {
                        return this.toArray(t, e)
                    },
                    multiplyVector3: function(t) {
                        return t.applyMatrix3(this)
                    },
                    multiplyVector3Array: function() {},
                    applyToBufferAttribute: function(t) {
                        return t.applyMatrix3(this)
                    },
                    applyToVector3Array: function() {}
                }),
                Object.assign(h.prototype, {
                    extractPosition: function(t) {
                        return this.copyPosition(t)
                    },
                    flattenToArrayOffset: function(t, e) {
                        return this.toArray(t, e)
                    },
                    getPosition: function() {
                        return (new l).setFromMatrixColumn(this, 3)
                    },
                    setRotationFromQuaternion: function(t) {
                        return this.makeRotationFromQuaternion(t)
                    },
                    multiplyToArray: function() {},
                    multiplyVector3: function(t) {
                        return t.applyMatrix4(this)
                    },
                    multiplyVector4: function(t) {
                        return t.applyMatrix4(this)
                    },
                    multiplyVector3Array: function() {},
                    rotateAxis: function(t) {
                        t.transformDirection(this)
                    },
                    crossVector: function(t) {
                        return t.applyMatrix4(this)
                    },
                    translate: function() {},
                    rotateX: function() {},
                    rotateY: function() {},
                    rotateZ: function() {},
                    rotateByAxis: function() {},
                    applyToBufferAttribute: function(t) {
                        return t.applyMatrix4(this)
                    },
                    applyToVector3Array: function() {},
                    makeFrustum: function(t, e, n, i, r, a) {
                        return this.makePerspective(t, e, i, n, r, a)
                    }
                }),
                _.prototype.isIntersectionLine = function(t) {
                    return this.intersectsLine(t)
                }
                ,
                u.prototype.multiplyVector3 = function(t) {
                    return t.applyQuaternion(this)
                }
                ,
                Object.assign(x.prototype, {
                    isIntersectionBox: function(t) {
                        return this.intersectsBox(t)
                    },
                    isIntersectionPlane: function(t) {
                        return this.intersectsPlane(t)
                    },
                    isIntersectionSphere: function(t) {
                        return this.intersectsSphere(t)
                    }
                }),
                Object.assign(b.prototype, {
                    area: function() {
                        return this.getArea()
                    },
                    barycoordFromPoint: function(t, e) {
                        return this.getBarycoord(t, e)
                    },
                    midpoint: function(t) {
                        return this.getMidpoint(t)
                    },
                    normal: function(t) {
                        return this.getNormal(t)
                    },
                    plane: function(t) {
                        return this.getPlane(t)
                    }
                }),
                Object.assign(b, {
                    barycoordFromPoint: function(t, e, n, i, r) {
                        return b.getBarycoord(t, e, n, i, r)
                    },
                    normal: function(t, e, n, i) {
                        return b.getNormal(t, e, n, i)
                    }
                }),
                Object.assign(ar.prototype, {
                    extractAllPoints: function(t) {
                        return this.extractPoints(t)
                    },
                    extrude: function(t) {
                        return new jn(this,t)
                    },
                    makeGeometry: function(t) {
                        return new $n(this,t)
                    }
                }),
                Object.assign(n.prototype, {
                    fromAttribute: function(t, e, n) {
                        return this.fromBufferAttribute(t, e, n)
                    },
                    distanceToManhattan: function(t) {
                        return this.manhattanDistanceTo(t)
                    },
                    lengthManhattan: function() {
                        return this.manhattanLength()
                    }
                }),
                Object.assign(l.prototype, {
                    setEulerFromRotationMatrix: function() {},
                    setEulerFromQuaternion: function() {},
                    getPositionFromMatrix: function(t) {
                        return this.setFromMatrixPosition(t)
                    },
                    getScaleFromMatrix: function(t) {
                        return this.setFromMatrixScale(t)
                    },
                    getColumnFromMatrix: function(t, e) {
                        return this.setFromMatrixColumn(e, t)
                    },
                    applyProjection: function(t) {
                        return this.applyMatrix4(t)
                    },
                    fromAttribute: function(t, e, n) {
                        return this.fromBufferAttribute(t, e, n)
                    },
                    distanceToManhattan: function(t) {
                        return this.manhattanDistanceTo(t)
                    },
                    lengthManhattan: function() {
                        return this.manhattanLength()
                    }
                }),
                Object.assign(a.prototype, {
                    fromAttribute: function(t, e, n) {
                        return this.fromBufferAttribute(t, e, n)
                    },
                    lengthManhattan: function() {
                        return this.manhattanLength()
                    }
                }),
                Object.assign(H.prototype, {
                    computeTangents: function() {},
                    computeLineDistances: function() {},
                    applyMatrix: function(t) {
                        return this.applyMatrix4(t)
                    }
                }),
                Object.assign(d.prototype, {
                    getChildByName: function(t) {
                        return this.getObjectByName(t)
                    },
                    renderDepth: function() {},
                    translate: function(t, e) {
                        return this.translateOnAxis(e, t)
                    },
                    getWorldRotation: function() {},
                    applyMatrix: function(t) {
                        return this.applyMatrix4(t)
                    }
                }),
                Object.defineProperties(d.prototype, {
                    eulerOrder: {
                        get: function() {
                            return this.rotation.order
                        },
                        set: function(t) {
                            this.rotation.order = t
                        }
                    },
                    useQuaternion: {
                        get: function() {},
                        set: function() {}
                    }
                }),
                Object.assign(j.prototype, {
                    setDrawMode: function() {}
                }),
                Object.defineProperties(j.prototype, {
                    drawMode: {
                        get: function() {
                            return 0
                        },
                        set: function() {}
                    }
                }),
                Object.defineProperties(je.prototype, {
                    objects: {
                        get: function() {
                            return this.levels
                        }
                    }
                }),
                Object.defineProperty(We.prototype, "useVertexTexture", {
                    get: function() {},
                    set: function() {}
                }),
                Ve.prototype.initBones = function() {}
                ,
                Object.defineProperty(ji.prototype, "__arcLengthDivisions", {
                    get: function() {
                        return this.arcLengthDivisions
                    },
                    set: function(t) {
                        this.arcLengthDivisions = t
                    }
                }),
                J.prototype.setLens = function(t, e) {
                    void 0 !== e && (this.filmGauge = e),
                        this.setFocalLength(t)
                }
                ,
                Object.defineProperties(or.prototype, {
                    onlyShadow: {
                        set: function() {}
                    },
                    shadowCameraFov: {
                        set: function(t) {
                            this.shadow.camera.fov = t
                        }
                    },
                    shadowCameraLeft: {
                        set: function(t) {
                            this.shadow.camera.left = t
                        }
                    },
                    shadowCameraRight: {
                        set: function(t) {
                            this.shadow.camera.right = t
                        }
                    },
                    shadowCameraTop: {
                        set: function(t) {
                            this.shadow.camera.top = t
                        }
                    },
                    shadowCameraBottom: {
                        set: function(t) {
                            this.shadow.camera.bottom = t
                        }
                    },
                    shadowCameraNear: {
                        set: function(t) {
                            this.shadow.camera.near = t
                        }
                    },
                    shadowCameraFar: {
                        set: function(t) {
                            this.shadow.camera.far = t
                        }
                    },
                    shadowCameraVisible: {
                        set: function() {}
                    },
                    shadowBias: {
                        set: function(t) {
                            this.shadow.bias = t
                        }
                    },
                    shadowDarkness: {
                        set: function() {}
                    },
                    shadowMapWidth: {
                        set: function(t) {
                            this.shadow.mapSize.width = t
                        }
                    },
                    shadowMapHeight: {
                        set: function(t) {
                            this.shadow.mapSize.height = t
                        }
                    }
                }),
                Object.defineProperties(P.prototype, {
                    length: {
                        get: function() {
                            return this.array.length
                        }
                    },
                    dynamic: {
                        get: function() {
                            return 35048 === this.usage
                        },
                        set: function() {
                            this.setUsage(35048)
                        }
                    }
                }),
                Object.assign(P.prototype, {
                    setDynamic: function(t) {
                        return this.setUsage(!0 === t ? 35048 : 35044),
                            this
                    },
                    copyIndicesArray: function() {},
                    setArray: function() {}
                }),
                Object.assign(k.prototype, {
                    addIndex: function(t) {
                        this.setIndex(t)
                    },
                    addAttribute: function(t, e, n) {
                        return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (this.setIndex(e),
                            this) : this.setAttribute(t, e) : this.setAttribute(t, new P(e,n))
                    },
                    addDrawCall: function(t, e) {
                        this.addGroup(t, e)
                    },
                    clearDrawCalls: function() {
                        this.clearGroups()
                    },
                    computeTangents: function() {},
                    computeOffsets: function() {},
                    removeAttribute: function(t) {
                        return this.deleteAttribute(t)
                    },
                    applyMatrix: function(t) {
                        return this.applyMatrix4(t)
                    }
                }),
                Object.defineProperties(k.prototype, {
                    drawcalls: {
                        get: function() {
                            return this.groups
                        }
                    },
                    offsets: {
                        get: function() {
                            return this.groups
                        }
                    }
                }),
                Object.defineProperties(qr.prototype, {
                    linePrecision: {
                        get: function() {
                            return this.params.Line.threshold
                        },
                        set: function(t) {
                            this.params.Line.threshold = t
                        }
                    }
                }),
                Object.defineProperties(Fe.prototype, {
                    dynamic: {
                        get: function() {
                            return 35048 === this.usage
                        },
                        set: function(t) {
                            this.setUsage(t)
                        }
                    }
                }),
                Object.assign(Fe.prototype, {
                    setDynamic: function(t) {
                        return this.setUsage(!0 === t ? 35048 : 35044),
                            this
                    },
                    setArray: function() {}
                }),
                Object.assign(Vn.prototype, {
                    getArrays: function() {},
                    addShapeList: function() {},
                    addShape: function() {}
                }),
                Object.defineProperties(Wr.prototype, {
                    dynamic: {
                        set: function() {}
                    },
                    onUpdate: {
                        value: function() {
                            return this
                        }
                    }
                }),
                Object.defineProperties(L.prototype, {
                    wrapAround: {
                        get: function() {},
                        set: function() {}
                    },
                    overdraw: {
                        get: function() {},
                        set: function() {}
                    },
                    wrapRGB: {
                        get: function() {
                            return new M
                        }
                    },
                    shading: {
                        get: function() {},
                        set: function(t) {
                            this.flatShading = 1 === t
                        }
                    },
                    stencilMask: {
                        get: function() {
                            return this.stencilFuncMask
                        },
                        set: function(t) {
                            this.stencilFuncMask = t
                        }
                    }
                }),
                Object.defineProperties(fi.prototype, {
                    metal: {
                        get: function() {
                            return !1
                        },
                        set: function() {}
                    }
                }),
                Object.defineProperties(Y.prototype, {
                    derivatives: {
                        get: function() {
                            return this.extensions.derivatives
                        },
                        set: function(t) {
                            this.extensions.derivatives = t
                        }
                    }
                }),
                Object.assign(De.prototype, {
                    clearTarget: function(t, e, n, i) {
                        this.setRenderTarget(t),
                            this.clear(e, n, i)
                    },
                    animate: function(t) {
                        this.setAnimationLoop(t)
                    },
                    getCurrentRenderTarget: function() {
                        return this.getRenderTarget()
                    },
                    getMaxAnisotropy: function() {
                        return this.capabilities.getMaxAnisotropy()
                    },
                    getPrecision: function() {
                        return this.capabilities.precision
                    },
                    resetGLState: function() {
                        return this.state.reset()
                    },
                    supportsFloatTextures: function() {
                        return this.extensions.get("OES_texture_float")
                    },
                    supportsHalfFloatTextures: function() {
                        return this.extensions.get("OES_texture_half_float")
                    },
                    supportsStandardDerivatives: function() {
                        return this.extensions.get("OES_standard_derivatives")
                    },
                    supportsCompressedTextureS3TC: function() {
                        return this.extensions.get("WEBGL_compressed_texture_s3tc")
                    },
                    supportsCompressedTexturePVRTC: function() {
                        return this.extensions.get("WEBGL_compressed_texture_pvrtc")
                    },
                    supportsBlendMinMax: function() {
                        return this.extensions.get("EXT_blend_minmax")
                    },
                    supportsVertexTextures: function() {
                        return this.capabilities.vertexTextures
                    },
                    supportsInstancedArrays: function() {
                        return this.extensions.get("ANGLE_instanced_arrays")
                    },
                    enableScissorTest: function(t) {
                        this.setScissorTest(t)
                    },
                    initMaterial: function() {},
                    addPrePlugin: function() {},
                    addPostPlugin: function() {},
                    updateShadowMap: function() {},
                    setFaceCulling: function() {},
                    allocTextureUnit: function() {},
                    setTexture: function() {},
                    setTexture2D: function() {},
                    setTextureCube: function() {},
                    getActiveMipMapLevel: function() {
                        return this.getActiveMipmapLevel()
                    }
                }),
                Object.defineProperties(De.prototype, {
                    shadowMapEnabled: {
                        get: function() {
                            return this.shadowMap.enabled
                        },
                        set: function(t) {
                            this.shadowMap.enabled = t
                        }
                    },
                    shadowMapType: {
                        get: function() {
                            return this.shadowMap.type
                        },
                        set: function(t) {
                            this.shadowMap.type = t
                        }
                    },
                    shadowMapCullFace: {
                        get: function() {},
                        set: function() {}
                    },
                    context: {
                        get: function() {
                            return this.getContext()
                        }
                    },
                    vr: {
                        get: function() {
                            return this.xr
                        }
                    },
                    gammaInput: {
                        get: function() {
                            return !1
                        },
                        set: function() {}
                    },
                    gammaOutput: {
                        get: function() {
                            return !1
                        },
                        set: function(t) {
                            this.outputEncoding = !0 === t ? 3001 : 3e3
                        }
                    }
                }),
                Object.defineProperties(Le.prototype, {
                    cullFace: {
                        get: function() {},
                        set: function() {}
                    },
                    renderReverseSided: {
                        get: function() {},
                        set: function() {}
                    },
                    renderSingleSided: {
                        get: function() {},
                        set: function() {}
                    }
                }),
                Object.defineProperties(o.prototype, {
                    wrapS: {
                        get: function() {
                            return this.texture.wrapS
                        },
                        set: function(t) {
                            this.texture.wrapS = t
                        }
                    },
                    wrapT: {
                        get: function() {
                            return this.texture.wrapT
                        },
                        set: function(t) {
                            this.texture.wrapT = t
                        }
                    },
                    magFilter: {
                        get: function() {
                            return this.texture.magFilter
                        },
                        set: function(t) {
                            this.texture.magFilter = t
                        }
                    },
                    minFilter: {
                        get: function() {
                            return this.texture.minFilter
                        },
                        set: function(t) {
                            this.texture.minFilter = t
                        }
                    },
                    anisotropy: {
                        get: function() {
                            return this.texture.anisotropy
                        },
                        set: function(t) {
                            this.texture.anisotropy = t
                        }
                    },
                    offset: {
                        get: function() {
                            return this.texture.offset
                        },
                        set: function(t) {
                            this.texture.offset = t
                        }
                    },
                    repeat: {
                        get: function() {
                            return this.texture.repeat
                        },
                        set: function(t) {
                            this.texture.repeat = t
                        }
                    },
                    format: {
                        get: function() {
                            return this.texture.format
                        },
                        set: function(t) {
                            this.texture.format = t
                        }
                    },
                    type: {
                        get: function() {
                            return this.texture.type
                        },
                        set: function(t) {
                            this.texture.type = t
                        }
                    },
                    generateMipmaps: {
                        get: function() {
                            return this.texture.generateMipmaps
                        },
                        set: function(t) {
                            this.texture.generateMipmaps = t
                        }
                    }
                }),
                Object.defineProperties(Rr.prototype, {
                    load: {
                        value: function(t) {
                            var e = this;
                            return (new Lr).load(t, (function(t) {
                                    e.setBuffer(t)
                                }
                            )),
                                this
                        }
                    },
                    startTime: {
                        set: function() {}
                    }
                }),
                Fr.prototype.getData = function() {
                    return this.getFrequencyData()
                }
                ,
                K.prototype.updateCubeMap = function(t, e) {
                    return this.update(t, e)
                }
                ,
                Ia.crossOrigin = void 0,
                Ia.loadTexture = function(t, e, n, i) {
                    var r = new ki;
                    return r.setCrossOrigin(this.crossOrigin),
                        t = r.load(t, n, void 0, i),
                    e && (t.mapping = e),
                        t
                }
                ,
                Ia.loadTextureCube = function(t, e, n, i) {
                    var r = new Gi;
                    return r.setCrossOrigin(this.crossOrigin),
                        t = r.load(t, n, void 0, i),
                    e && (t.mapping = e),
                        t
                }
                ,
                Ia.loadCompressedTexture = function() {}
                ,
                Ia.loadCompressedTextureCube = function() {}
                ,
            "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{
                detail: {
                    revision: "115"
                }
            })),
                t.ACESFilmicToneMapping = 5,
                t.AddEquation = 100,
                t.AddOperation = 2,
                t.AdditiveBlending = 2,
                t.AlphaFormat = 1021,
                t.AlwaysDepth = 1,
                t.AlwaysStencilFunc = 519,
                t.AmbientLight = gr,
                t.AmbientLightProbe = Or,
                t.AnimationClip = Oi,
                t.AnimationLoader = zi,
                t.AnimationMixer = Vr,
                t.AnimationObjectGroup = kr,
                t.AnimationUtils = Ec,
                t.ArcCurve = Wi,
                t.ArrayCamera = Oe,
                t.ArrowHelper = pa,
                t.Audio = Rr,
                t.AudioAnalyser = Fr,
                t.AudioContext = Vc,
                t.AudioListener = Dr,
                t.AudioLoader = Lr,
                t.AxesHelper = fa,
                t.AxisHelper = function(t) {
                    return new fa(t)
                }
                ,
                t.BackSide = 1,
                t.BasicDepthPacking = 3200,
                t.BasicShadowMap = 0,
                t.BinaryTextureLoader = function(t) {
                    return new Bi(t)
                }
                ,
                t.Bone = He,
                t.BooleanKeyframeTrack = Si,
                t.BoundingBoxHelper = function(t, e) {
                    return new ua(t,e)
                }
                ,
                t.Box2 = Kr,
                t.Box3 = g,
                t.Box3Helper = la,
                t.BoxBufferGeometry = bs,
                t.BoxGeometry = _s,
            t.BoxHelper = ua,
            t.BufferAttribute = P,
            t.BufferGeometry = k,
            t.BufferGeometryLoader = br,
            t.ByteType = 1010,
            t.Cache = Pc,
            t.Camera = Z,
            t.CameraHelper = sa,
            t.CanvasRenderer = function() {}
            ,
            t.CanvasTexture = nn,
            t.CatmullRomCurve3 = qi,
            t.CineonToneMapping = 4,
            t.CircleBufferGeometry = ci,
            t.CircleGeometry = si,
            t.ClampToEdgeWrapping = 1001,
            t.Clock = Nr,
            t.ClosedSplineCurve3 = Aa,
            t.Color = M,
            t.ColorKeyframeTrack = Ai,
            t.CompressedTexture = en,
            t.CompressedTextureLoader = Fi,
            t.ConeBufferGeometry = oi,
            t.ConeGeometry = ai,
            t.CubeCamera = K,
            t.CubeGeometry = _s,
            t.CubeReflectionMapping = 301,
            t.CubeRefractionMapping = 302,
            t.CubeTexture = gt,
            t.CubeTextureLoader = Gi,
            t.CubeUVReflectionMapping = 306,
            t.CubeUVRefractionMapping = 307,
            t.CubicBezierCurve = Ji,
            t.CubicBezierCurve3 = Ki,
            t.CubicInterpolant = _i,
            t.CullFaceBack = 1,
            t.CullFaceFront = 2,
            t.CullFaceFrontBack = 3,
            t.CullFaceNone = 0,
            t.Curve = ji,
            t.CurvePath = ir,
            t.CustomBlending = 5,
            t.CylinderBufferGeometry = ri,
            t.CylinderGeometry = ii,
            t.Cylindrical = Jr,
            t.DataTexture = $,
            t.DataTexture2DArray = vt,
            t.DataTexture3D = yt,
            t.DataTextureLoader = Bi,
            t.DecrementStencilOp = 7683,
            t.DecrementWrapStencilOp = 34056,
            t.DefaultLoadingManager = Cc,
            t.DepthFormat = 1026,
            t.DepthStencilFormat = 1027,
            t.DepthTexture = rn,
            t.DirectionalLight = mr,
            t.DirectionalLightHelper = oa,
            t.DirectionalLightShadow = dr,
            t.DiscreteInterpolant = Mi,
            t.DodecahedronBufferGeometry = vn,
            t.DodecahedronGeometry = gn,
            t.DoubleSide = 2,
            t.DstAlphaFactor = 206,
            t.DstColorFactor = 208,
            t.DynamicBufferAttribute = function(t, e) {
                return new P(t,e).setUsage(35048)
            }
            ,
            t.DynamicCopyUsage = 35050,
            t.DynamicDrawUsage = 35048,
            t.DynamicReadUsage = 35049,
            t.EdgesGeometry = ni,
            t.EdgesHelper = function(t, e) {
                return new Ze(new ni(t.geometry),new Xe({
                    color: void 0 !== e ? e : 16777215
                }))
            }
            ,
            t.EllipseCurve = Vi,
            t.EqualDepth = 4,
            t.EqualStencilFunc = 514,
            t.EquirectangularReflectionMapping = 303,
            t.EquirectangularRefractionMapping = 304,
            t.Euler = p,
            t.EventDispatcher = e,
            t.ExtrudeBufferGeometry = Vn,
            t.ExtrudeGeometry = jn,
            t.Face3 = T,
            t.Face4 = function(t, e, n, i, r, a, o) {
                return new T(t,e,n,r,a,o)
            }
            ,
            t.FaceColors = 1,
            t.FileLoader = Ri,
            t.FlatShading = 1,
            t.Float32Attribute = function(t, e) {
                return new F(t,e)
            }
            ,
            t.Float32BufferAttribute = F,
            t.Float64Attribute = function(t, e) {
                return new B(t,e)
            }
            ,
            t.Float64BufferAttribute = B,
            t.FloatType = 1015,
            t.Fog = ze,
            t.FogExp2 = Re,
            t.Font = Ar,
            t.FontLoader = Tr,
            t.FrontFaceDirectionCCW = 1,
            t.FrontFaceDirectionCW = 0,
            t.FrontSide = 0,
            t.Frustum = tt,
            t.GammaEncoding = 3007,
            t.Geometry = H,
            t.GeometryUtils = {
                merge: function(t, e, n) {
                    if (e.isMesh) {
                        e.matrixAutoUpdate && e.updateMatrix();
                        var i = e.matrix;
                        e = e.geometry
                    }
                    t.merge(e, i, n)
                },
                center: function(t) {
                    return t.center()
                }
            },
            t.GreaterDepth = 6,
            t.GreaterEqualDepth = 5,
            t.GreaterEqualStencilFunc = 518,
            t.GreaterStencilFunc = 516,
            t.GridHelper = ra,
            t.Group = Ie,
            t.HalfFloatType = 1016,
            t.HemisphereLight = sr,
            t.HemisphereLightHelper = ia,
            t.HemisphereLightProbe = Cr,
            t.IcosahedronBufferGeometry = mn,
            t.IcosahedronGeometry = dn,
            t.ImageBitmapLoader = wr,
            t.ImageLoader = Ui,
            t.ImageUtils = Ia,
            t.ImmediateRenderObject = $r,
            t.IncrementStencilOp = 7682,
            t.IncrementWrapStencilOp = 34055,
            t.InstancedBufferAttribute = _r,
            t.InstancedBufferGeometry = xr,
            t.InstancedInterleavedBuffer = Hr,
            t.InstancedMesh = qe,
            t.Int16Attribute = function(t, e) {
                return new N(t,e)
            }
            ,
            t.Int16BufferAttribute = N,
            t.Int32Attribute = function(t, e) {
                return new R(t,e)
            }
            ,
            t.Int32BufferAttribute = R,
            t.Int8Attribute = function(t, e) {
                return new C(t,e)
            }
            ,
            t.Int8BufferAttribute = C,
            t.IntType = 1013,
            t.InterleavedBuffer = Fe,
            t.InterleavedBufferAttribute = Be,
            t.Interpolant = xi,
            t.InterpolateDiscrete = 2300,
            t.InterpolateLinear = 2301,
            t.InterpolateSmooth = 2302,
            t.InvertStencilOp = 5386,
            t.JSONLoader = function() {}
            ,
            t.KeepStencilOp = 7680,
            t.KeyframeTrack = wi,
            t.LOD = je,
            t.LatheBufferGeometry = Qn,
            t.LatheGeometry = Kn,
            t.Layers = f,
            t.LensFlare = function() {}
            ,
            t.LessDepth = 2,
            t.LessEqualDepth = 3,
            t.LessEqualStencilFunc = 515,
            t.LessStencilFunc = 513,
            t.Light = or,
            t.LightProbe = Pr,
            t.LightShadow = cr,
            t.Line = Ye,
            t.Line3 = Qr,
            t.LineBasicMaterial = Xe,
            t.LineCurve = Qi,
            t.LineCurve3 = $i,
            t.LineDashedMaterial = yi,
            t.LineLoop = Je,
            t.LinePieces = 1,
            t.LineSegments = Ze,
            t.LineStrip = 0,
            t.LinearEncoding = 3e3,
            t.LinearFilter = 1006,
            t.LinearInterpolant = bi,
            t.LinearMipMapLinearFilter = 1008,
            t.LinearMipMapNearestFilter = 1007,
            t.LinearMipmapLinearFilter = 1008,
            t.LinearMipmapNearestFilter = 1007,
            t.LinearToneMapping = 1,
            t.Loader = Di,
            t.LoaderUtils = Fc,
            t.LoadingManager = Ni,
            t.LogLuvEncoding = 3003,
            t.LoopOnce = 2200,
            t.LoopPingPong = 2202,
            t.LoopRepeat = 2201,
            t.LuminanceAlphaFormat = 1025,
            t.LuminanceFormat = 1024,
            t.MOUSE = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2
            },
            t.Material = L,
            t.MaterialLoader = yr,
            t.Math = Ca,
            t.MathUtils = Ca,
            t.Matrix3 = i,
            t.Matrix4 = h,
            t.MaxEquation = 104,
            t.Mesh = j,
            t.MeshBasicMaterial = E,
            t.MeshDepthMaterial = Ae,
            t.MeshDistanceMaterial = Te,
            t.MeshFaceMaterial = function(t) {
                return t
            }
            ,
            t.MeshLambertMaterial = gi,
            t.MeshMatcapMaterial = vi,
            t.MeshNormalMaterial = mi,
            t.MeshPhongMaterial = fi,
            t.MeshPhysicalMaterial = pi,
            t.MeshStandardMaterial = hi,
            t.MeshToonMaterial = di,
            t.MinEquation = 103,
            t.MirroredRepeatWrapping = 1002,
            t.MixOperation = 1,
            t.MultiMaterial = function(t) {
                return void 0 === t && (t = []),
                    t.isMultiMaterial = !0,
                    (t.materials = t).clone = function() {
                        return t.slice()
                    }
                    ,
                    t
            }
            ,
            t.MultiplyBlending = 4,
            t.MultiplyOperation = 0,
            t.NearestFilter = 1003,
            t.NearestMipMapLinearFilter = 1005,
            t.NearestMipMapNearestFilter = 1004,
            t.NearestMipmapLinearFilter = 1005,
            t.NearestMipmapNearestFilter = 1004,
            t.NeverDepth = 0,
            t.NeverStencilFunc = 512,
            t.NoBlending = 0,
            t.NoColors = 0,
            t.NoToneMapping = 0,
            t.NormalBlending = 1,
            t.NotEqualDepth = 7,
            t.NotEqualStencilFunc = 517,
            t.NumberKeyframeTrack = Ti,
            t.Object3D = d,
            t.ObjectLoader = Mr,
            t.ObjectSpaceNormalMap = 1,
            t.OctahedronBufferGeometry = fn,
            t.OctahedronGeometry = pn,
            t.OneFactor = 201,
            t.OneMinusDstAlphaFactor = 207,
            t.OneMinusDstColorFactor = 209,
            t.OneMinusSrcAlphaFactor = 205,
            t.OneMinusSrcColorFactor = 203,
            t.OrthographicCamera = fr,
            t.PCFShadowMap = 1,
            t.PCFSoftShadowMap = 2,
            t.PMREMGenerator = da,
            t.ParametricBufferGeometry = sn,
            t.ParametricGeometry = on,
            t.Particle = function(t) {
                return new Ge(t)
            }
            ,
            t.ParticleBasicMaterial = function(t) {
                return new Ke(t)
            }
            ,
            t.ParticleSystem = function(t, e) {
                return new Qe(t,e)
            }
            ,
            t.ParticleSystemMaterial = function(t) {
                return new Ke(t)
            }
            ,
            t.Path = rr,
            t.PerspectiveCamera = J,
            t.Plane = _,
            t.PlaneBufferGeometry = rt,
            t.PlaneGeometry = it,
            t.PlaneHelper = ha,
            t.PointCloud = function(t, e) {
                return new Qe(t,e)
            }
            ,
            t.PointCloudMaterial = function(t) {
                return new Ke(t)
            }
            ,
            t.PointLight = pr,
            t.PointLightHelper = na,
            t.Points = Qe,
            t.PointsMaterial = Ke,
            t.PolarGridHelper = aa,
            t.PolyhedronBufferGeometry = un,
            t.PolyhedronGeometry = cn,
            t.PositionalAudio = zr,
            t.PropertyBinding = Gr,
            t.PropertyMixer = Br,
            t.QuadraticBezierCurve = tr,
            t.QuadraticBezierCurve3 = er,
            t.Quaternion = u,
            t.QuaternionKeyframeTrack = Ei,
            t.QuaternionLinearInterpolant = Li,
            t.REVISION = "115",
            t.RGBADepthPacking = 3201,
            t.RGBAFormat = 1023,
            t.RGBAIntegerFormat = 1033,
            t.RGBA_ASTC_10x10_Format = 37819,
            t.RGBA_ASTC_10x5_Format = 37816,
            t.RGBA_ASTC_10x6_Format = 37817,
            t.RGBA_ASTC_10x8_Format = 37818,
            t.RGBA_ASTC_12x10_Format = 37820,
            t.RGBA_ASTC_12x12_Format = 37821,
            t.RGBA_ASTC_4x4_Format = 37808,
            t.RGBA_ASTC_5x4_Format = 37809,
            t.RGBA_ASTC_5x5_Format = 37810,
            t.RGBA_ASTC_6x5_Format = 37811,
            t.RGBA_ASTC_6x6_Format = 37812,
            t.RGBA_ASTC_8x5_Format = 37813,
            t.RGBA_ASTC_8x6_Format = 37814,
            t.RGBA_ASTC_8x8_Format = 37815,
            t.RGBA_BPTC_Format = 36492,
            t.RGBA_ETC2_EAC_Format = 37496,
            t.RGBA_PVRTC_2BPPV1_Format = 35843,
            t.RGBA_PVRTC_4BPPV1_Format = 35842,
            t.RGBA_S3TC_DXT1_Format = 33777,
            t.RGBA_S3TC_DXT3_Format = 33778,
            t.RGBA_S3TC_DXT5_Format = 33779,
            t.RGBDEncoding = 3006,
            t.RGBEEncoding = 3002,
            t.RGBEFormat = 1023,
            t.RGBFormat = 1022,
            t.RGBIntegerFormat = 1032,
            t.RGBM16Encoding = 3005,
            t.RGBM7Encoding = 3004,
            t.RGB_ETC1_Format = 36196,
            t.RGB_ETC2_Format = 37492,
            t.RGB_PVRTC_2BPPV1_Format = 35841,
            t.RGB_PVRTC_4BPPV1_Format = 35840,
            t.RGB_S3TC_DXT1_Format = 33776,
            t.RGFormat = 1030,
            t.RGIntegerFormat = 1031,
            t.RawShaderMaterial = li,
            t.Ray = x,
            t.Raycaster = qr,
            t.RectAreaLight = vr,
            t.RedFormat = 1028,
            t.RedIntegerFormat = 1029,
            t.ReinhardToneMapping = 2,
            t.RepeatWrapping = 1e3,
            t.ReplaceStencilOp = 7681,
            t.ReverseSubtractEquation = 102,
            t.RingBufferGeometry = Jn,
            t.RingGeometry = Zn,
            t.SRGB8_ALPHA8_ASTC_10x10_Format = 37851,
            t.SRGB8_ALPHA8_ASTC_10x5_Format = 37848,
            t.SRGB8_ALPHA8_ASTC_10x6_Format = 37849,
            t.SRGB8_ALPHA8_ASTC_10x8_Format = 37850,
            t.SRGB8_ALPHA8_ASTC_12x10_Format = 37852,
            t.SRGB8_ALPHA8_ASTC_12x12_Format = 37853,
            t.SRGB8_ALPHA8_ASTC_4x4_Format = 37840,
            t.SRGB8_ALPHA8_ASTC_5x4_Format = 37841,
            t.SRGB8_ALPHA8_ASTC_5x5_Format = 37842,
            t.SRGB8_ALPHA8_ASTC_6x5_Format = 37843,
            t.SRGB8_ALPHA8_ASTC_6x6_Format = 37844,
            t.SRGB8_ALPHA8_ASTC_8x5_Format = 37845,
            t.SRGB8_ALPHA8_ASTC_8x6_Format = 37846,
            t.SRGB8_ALPHA8_ASTC_8x8_Format = 37847,
            t.Scene = m,
            t.SceneUtils = {
                createMultiMaterialObject: function() {},
                detach: function() {},
                attach: function() {}
            },
            t.ShaderChunk = Es,
            t.ShaderLib = Ps,
            t.ShaderMaterial = Y,
            t.ShadowMaterial = ui,
            t.Shape = ar,
            t.ShapeBufferGeometry = ti,
            t.ShapeGeometry = $n,
            t.ShapePath = Sr,
            t.ShapeUtils = Sc,
            t.ShortType = 1011,
            t.Skeleton = We,
            t.SkeletonHelper = ea,
            t.SkinnedMesh = Ve,
            t.SmoothShading = 2,
            t.Sphere = y,
            t.SphereBufferGeometry = Yn,
            t.SphereGeometry = Xn,
            t.Spherical = Zr,
            t.SphericalHarmonics3 = Er,
            t.SphericalReflectionMapping = 305,
            t.Spline = La,
            t.SplineCurve = nr,
            t.SplineCurve3 = Ta,
            t.SpotLight = lr,
            t.SpotLightHelper = ta,
            t.SpotLightShadow = ur,
            t.Sprite = Ge,
            t.SpriteMaterial = Ue,
            t.SrcAlphaFactor = 204,
            t.SrcAlphaSaturateFactor = 210,
            t.SrcColorFactor = 202,
            t.StaticCopyUsage = 35046,
            t.StaticDrawUsage = 35044,
            t.StaticReadUsage = 35045,
            t.StereoCamera = Ir,
            t.StreamCopyUsage = 35042,
            t.StreamDrawUsage = 35040,
            t.StreamReadUsage = 35041,
            t.StringKeyframeTrack = Pi,
            t.SubtractEquation = 101,
            t.SubtractiveBlending = 3,
            t.TOUCH = {
                ROTATE: 0,
                PAN: 1,
                DOLLY_PAN: 2,
                DOLLY_ROTATE: 3
            },
            t.TangentSpaceNormalMap = 0,
            t.TetrahedronBufferGeometry = hn,
            t.TetrahedronGeometry = ln,
            t.TextBufferGeometry = qn,
            t.TextGeometry = Hn,
            t.Texture = r,
            t.TextureLoader = ki,
            t.TorusBufferGeometry = wn,
            t.TorusGeometry = Mn,
            t.TorusKnotBufferGeometry = bn,
            t.TorusKnotGeometry = _n,
            t.Triangle = b,
            t.TriangleFanDrawMode = 2,
            t.TriangleStripDrawMode = 1,
            t.TrianglesDrawMode = 0,
            t.TubeBufferGeometry = xn,
            t.TubeGeometry = yn,
            t.UVMapping = 300,
            t.Uint16Attribute = function(t, e) {
                return new D(t,e)
            }
            ,
            t.Uint16BufferAttribute = D,
            t.Uint32Attribute = function(t, e) {
                return new z(t,e)
            }
            ,
            t.Uint32BufferAttribute = z,
            t.Uint8Attribute = function(t, e) {
                return new O(t,e)
            }
            ,
            t.Uint8BufferAttribute = O,
            t.Uint8ClampedAttribute = function(t, e) {
                return new I(t,e)
            }
            ,
            t.Uint8ClampedBufferAttribute = I,
            t.Uncharted2ToneMapping = 3,
            t.Uniform = Wr,
            t.UniformsLib = Ls,
            t.UniformsUtils = Ms,
            t.UnsignedByteType = 1009,
            t.UnsignedInt248Type = 1020,
            t.UnsignedIntType = 1014,
            t.UnsignedShort4444Type = 1017,
            t.UnsignedShort5551Type = 1018,
            t.UnsignedShort565Type = 1019,
            t.UnsignedShortType = 1012,
            t.VSMShadowMap = 3,
            t.Vector2 = n,
            t.Vector3 = l,
            t.Vector4 = a,
            t.VectorKeyframeTrack = Ci,
            t.Vertex = function(t, e, n) {
                return new l(t,e,n)
            }
            ,
            t.VertexColors = 2,
            t.VideoTexture = tn,
            t.WebGLCubeRenderTarget = Q,
            t.WebGLMultisampleRenderTarget = c,
            t.WebGLRenderTarget = o,
            t.WebGLRenderTargetCube = function(t, e, n) {
                return new Q(t,n)
            }
            ,
            t.WebGLRenderer = De,
            t.WebGLUtils = Ce,
            t.WireframeGeometry = an,
            t.WireframeHelper = function(t, e) {
                return new Ze(new an(t.geometry),new Xe({
                    color: void 0 !== e ? e : 16777215
                }))
            }
            ,
            t.WrapAroundEnding = 2402,
            t.XHRLoader = function(t) {
                return new Ri(t)
            }
            ,
            t.ZeroCurvatureEnding = 2400,
            t.ZeroFactor = 200,
            t.ZeroSlopeEnding = 2401,
            t.ZeroStencilOp = 0,
            t.sRGBEncoding = 3001,
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
            ,
            "object" === s(e) && void 0 !== t ? o(e) : (r = [e],
            void 0 === (a = "function" == typeof (i = o) ? i.apply(e, r) : i) || (t.exports = a))
    }
]);
